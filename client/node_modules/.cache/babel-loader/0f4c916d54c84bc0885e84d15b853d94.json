{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar textDecoder = new TextDecoder();\n\nfunction decodeVarint(bytes, offset) {\n  var v = 0;\n\n  for (var shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n\n    var b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * Math.pow(2, shift);\n\n    if (b < 128) {\n      break;\n    }\n  }\n\n  return [v, offset];\n}\n\nfunction decodeBytes(bytes, offset) {\n  var byteLen;\n\n  var _decodeVarint = decodeVarint(bytes, offset);\n\n  var _decodeVarint2 = _slicedToArray(_decodeVarint, 2);\n\n  byteLen = _decodeVarint2[0];\n  offset = _decodeVarint2[1];\n  var postOffset = offset + byteLen;\n\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset];\n}\n\nfunction decodeKey(bytes, index) {\n  var wire;\n\n  var _decodeVarint3 = decodeVarint(bytes, index);\n\n  var _decodeVarint4 = _slicedToArray(_decodeVarint3, 2);\n\n  wire = _decodeVarint4[0];\n  index = _decodeVarint4[1];\n  return [wire & 7, wire >> 3, index];\n}\n\nfunction decodeLink(bytes) {\n  var link = {};\n  var l = bytes.length;\n  var index = 0;\n\n  while (index < l) {\n    var wireType = void 0,\n        fieldNum = void 0;\n\n    var _decodeKey = decodeKey(bytes, index);\n\n    var _decodeKey2 = _slicedToArray(_decodeKey, 3);\n\n    wireType = _decodeKey2[0];\n    fieldNum = _decodeKey2[1];\n    index = _decodeKey2[2];\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n\n      if (wireType !== 2) {\n        throw new Error(\"protobuf: (PBLink) wrong wireType (\".concat(wireType, \") for Hash\"));\n      }\n\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n\n      ;\n\n      var _decodeBytes = decodeBytes(bytes, index);\n\n      var _decodeBytes2 = _slicedToArray(_decodeBytes, 2);\n\n      link.Hash = _decodeBytes2[0];\n      index = _decodeBytes2[1];\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n\n      if (wireType !== 2) {\n        throw new Error(\"protobuf: (PBLink) wrong wireType (\".concat(wireType, \") for Name\"));\n      }\n\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n\n      var byts = void 0;\n\n      var _decodeBytes3 = decodeBytes(bytes, index);\n\n      var _decodeBytes4 = _slicedToArray(_decodeBytes3, 2);\n\n      byts = _decodeBytes4[0];\n      index = _decodeBytes4[1];\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n\n      if (wireType !== 0) {\n        throw new Error(\"protobuf: (PBLink) wrong wireType (\".concat(wireType, \") for Tsize\"));\n      }\n\n      ;\n\n      var _decodeVarint5 = decodeVarint(bytes, index);\n\n      var _decodeVarint6 = _slicedToArray(_decodeVarint5, 2);\n\n      link.Tsize = _decodeVarint6[0];\n      index = _decodeVarint6[1];\n    } else {\n      throw new Error(\"protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got \".concat(fieldNum));\n    }\n  }\n\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n\n  return link;\n}\n\nfunction decodeNode(bytes) {\n  var l = bytes.length;\n  var index = 0;\n  var links;\n  var linksBeforeData = false;\n  var data;\n\n  while (index < l) {\n    var wireType = void 0,\n        fieldNum = void 0;\n\n    var _decodeKey3 = decodeKey(bytes, index);\n\n    var _decodeKey4 = _slicedToArray(_decodeKey3, 3);\n\n    wireType = _decodeKey4[0];\n    fieldNum = _decodeKey4[1];\n    index = _decodeKey4[2];\n\n    if (wireType !== 2) {\n      throw new Error(\"protobuf: (PBNode) invalid wireType, expected 2, got \".concat(wireType));\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n\n      ;\n\n      var _decodeBytes5 = decodeBytes(bytes, index);\n\n      var _decodeBytes6 = _slicedToArray(_decodeBytes5, 2);\n\n      data = _decodeBytes6[0];\n      index = _decodeBytes6[1];\n\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n\n      var byts = void 0;\n\n      var _decodeBytes7 = decodeBytes(bytes, index);\n\n      var _decodeBytes8 = _slicedToArray(_decodeBytes7, 2);\n\n      byts = _decodeBytes8[0];\n      index = _decodeBytes8[1];\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(\"protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got \".concat(fieldNum));\n    }\n  }\n\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n\n  var node = {};\n\n  if (data) {\n    node.Data = data;\n  }\n\n  node.Links = links || [];\n  return node;\n}\n\nexports.decodeNode = decodeNode;","map":{"version":3,"names":["Object","defineProperty","exports","value","textDecoder","TextDecoder","decodeVarint","bytes","offset","v","shift","Error","length","b","decodeBytes","byteLen","postOffset","subarray","decodeKey","index","wire","decodeLink","link","l","wireType","fieldNum","Hash","Name","undefined","Tsize","byts","decode","decodeNode","links","linksBeforeData","data","push","node","Data","Links"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/@ipld/dag-pb/cjs/src/pb-decode.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nfunction decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}\n\nexports.decodeNode = decodeNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport getWeb3 from 'web3'; // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null\n//     };\n//   }\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n//   render() {\n//     //const [fileUrl, setFileUrl] = useState(\"\");\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// }\n// const Main = () => {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null\n//     };\n//   }\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n//   render() {\n//     const [fileUrl, setFileUrl] = useState(\"\");\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// };\n// const App = () => {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null\n//     };\n//   }\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null\n    };\n  } //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n\n\n  componentWillMount() {\n    getWeb3.then(results => {\n      this.setState({\n        web3: results.web3\n      });\n      this.instantiateContract();\n    }).catch(() => {\n      console.log(\"Error finding web3.\");\n    });\n  } //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n\n\n  instantiateContract() {\n    const contract = require(\"truffle-contract\");\n  }\n\n  render() {\n    //const [fileUrl, setFileUrl] = useState(\"\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SiteName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionAdd, {\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionShow, {\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","getWeb3","App","constructor","props","state","web3","componentWillMount","then","results","setState","instantiateContract","catch","console","log","contract","require","render"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport getWeb3 from 'web3';\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null\n//     };\n//   }\n\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n\n//   render() {\n//     //const [fileUrl, setFileUrl] = useState(\"\");\n\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n  \n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// }\n\n// const Main = () => {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null\n//     };\n//   }\n\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n\n//   render() {\n//     const [fileUrl, setFileUrl] = useState(\"\");\n\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n  \n//         <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// };\n\n// const App = () => {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null\n//     };\n//   }\n\n//   const [fileUrl, setFileUrl] = useState(\"\");\n\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      web3: null\n    };\n  }\n\n  //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n  componentWillMount() {\n    getWeb3\n      .then(results => {\n        this.setState({\n          web3: results.web3\n        });\n\n        this.instantiateContract();\n      })\n      .catch(() => {\n        console.log(\"Error finding web3.\");\n      });\n  }\n\n  //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n  instantiateContract() {\n    const contract = require(\"truffle-contract\");\n  }\n\n  render() {\n    //const [fileUrl, setFileUrl] = useState(\"\");\n\n    return (\n      <div>\n        <SiteName />\n        <TransactionInput></TransactionInput>\n  \n        {/* <FileUpload setUrl={setFileUrl} />\n        FileUrl :{\" \"}\n        <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          {fileUrl}\n        </a> */}\n        <br></br>\n        <TransactionAdd>트랜잭션 추가</TransactionAdd>\n        <TransactionShow>트랜잭션 보기</TransactionShow>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,MAApkBP,SAAlB,CAA4B;EAC1BQ,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAE;IADK,CAAb;EAGD,CAPyB,CAS1B;;;EACAC,kBAAkB,GAAG;IACnBN,OAAO,CACJO,IADH,CACQC,OAAO,IAAI;MACf,KAAKC,QAAL,CAAc;QACZJ,IAAI,EAAEG,OAAO,CAACH;MADF,CAAd;MAIA,KAAKK,mBAAL;IACD,CAPH,EAQGC,KARH,CAQS,MAAM;MACXC,OAAO,CAACC,GAAR,CAAY,qBAAZ;IACD,CAVH;EAWD,CAtByB,CAwB1B;;;EACAH,mBAAmB,GAAG;IACpB,MAAMI,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAxB;EACD;;EAEDC,MAAM,GAAG;IACP;IAEA,oBACE;MAAA,wBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,gBAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAA;QAAA;QAAA;MAAA,QATF,eAUE,QAAC,cAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE,QAAC,eAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAeD;;AA/CyB;;AAkD5B,eAAef,GAAf"},"metadata":{},"sourceType":"module"}
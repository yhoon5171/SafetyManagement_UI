{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport { useEffect } from \"react\"; // const App = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n      this.instantiateContract();\n    };\n\n    this.state = {\n      web3: null,\n      account: ''\n    };\n  }\n\n  instantiateContract() {\n    const contract = require(\"truffle-contract\");\n\n    const transaction = contract(TransactionContract);\n    transaction.setProvider(this.state.web3.currentProvider);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SiteName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionAdd, {\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionShow, {\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData()\n//   }\n//   async loadBlockchainData() {\n//     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//     const accounts = await web3.eth.getAccounts()\n//     this.setState({ account: accounts[0] })\n//   }\n//   constructor(props) {\n//     super(props)\n//     this.state = { account: '' }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//   )};\n// }\n// export default App;","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","useEffect","App","constructor","props","componentWillMount","web3","givenProvider","accounts","eth","getAccounts","setState","account","instantiateContract","state","contract","require","transaction","setProvider","currentProvider","render"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\n\n// const App = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      web3: null,\n      account: ''\n    };\n  }\n\n  componentWillMount = async () => {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    this.instantiateContract();\n  }\n\n  instantiateContract() {\n    const contract = require(\"truffle-contract\");\n    const transaction = contract(TransactionContract);\n    transaction.setProvider(this.state.web3.currentProvider);\n  }\n\n  render() {\n    return (\n      <div>\n        <SiteName />\n        <TransactionInput></TransactionInput>\n\n        {/* <FileUpload setUrl={setFileUrl} />\n        FileUrl :{\" \"}\n        <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          {fileUrl}\n        </a> */}\n        <p>Your account: {this.state.account}</p>\n        <br></br>\n        <TransactionAdd>트랜잭션 추가</TransactionAdd>\n        <TransactionShow>트랜잭션 보기</TransactionShow>\n      </div>\n  )};\n}\n\nexport default App;\n\n\n\n\n\n\n// class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData()\n//   }\n\n//   async loadBlockchainData() {\n//     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//     const accounts = await web3.eth.getAccounts()\n//     this.setState({ account: accounts[0] })\n//   }\n\n//   constructor(props) {\n//     super(props)\n//     this.state = { account: '' }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//   )};\n// }\n\n// export default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,WAAP;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;EAC1BU,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KASnBC,kBATmB,GASE,YAAY;MAC/B,MAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASA,IAAI,CAACO,aAAL,IAAsB,uBAA/B,CAAb;MACA,MAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;MACA,KAAKC,QAAL,CAAc;QAAEC,OAAO,EAAEJ,QAAQ,CAAC,CAAD;MAAnB,CAAd;MACA,KAAKK,mBAAL;IACD,CAdkB;;IAGjB,KAAKC,KAAL,GAAa;MACXR,IAAI,EAAE,IADK;MAEXM,OAAO,EAAE;IAFE,CAAb;EAID;;EASDC,mBAAmB,GAAG;IACpB,MAAME,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;IACA,MAAMC,WAAW,GAAGF,QAAQ,CAAChB,mBAAD,CAA5B;IACAkB,WAAW,CAACC,WAAZ,CAAwB,KAAKJ,KAAL,CAAWR,IAAX,CAAgBa,eAAxC;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE;MAAA,wBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,gBAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAA,6BAAkB,KAAKN,KAAL,CAAWF,OAA7B;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAUE;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE,QAAC,cAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE,QAAC,eAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAeA;;AAvCwB;;AA0C5B,eAAeV,GAAf,C,CAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}
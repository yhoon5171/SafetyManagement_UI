{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nvar decodePin = function decodePin(_ref) {\n  var name = _ref.Name,\n      status = _ref.Status,\n      cid$1 = _ref.Cid;\n  return {\n    cid: cid.CID.parse(cid$1),\n    name: name,\n    status: status\n  };\n};\n\nvar encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n\nvar encodeCID = function encodeCID(cid$1) {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(typeof cid$1));\n  }\n};\n\nvar encodeQuery = function encodeQuery(_ref2) {\n  var service = _ref2.service,\n      cid = _ref2.cid,\n      name = _ref2.name,\n      status = _ref2.status,\n      all = _ref2.all;\n  var query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    var _iterator = _createForOfIteratorHelper(cid),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (status) {\n    var _iterator2 = _createForOfIteratorHelper(status),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        query.append('status', _value);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return query;\n};\n\nvar encodeAddParams = function encodeAddParams(_ref3) {\n  var cid = _ref3.cid,\n      service = _ref3.service,\n      background = _ref3.background,\n      name = _ref3.name,\n      origins = _ref3.origins;\n  var params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    var _iterator3 = _createForOfIteratorHelper(origins),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var origin = _step3.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return params;\n};\n\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","toUrlSearchParams","decodePin","name","Name","status","Status","cid$1","Cid","CID","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","append","encodeAddParams","background","origins","params","arg","origin"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/pin/remote/utils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nconst decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid$1\n}) => {\n  return {\n    cid: cid.CID.parse(cid$1),\n    name,\n    status\n  };\n};\nconst encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nconst encodeCID = cid$1 => {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid$1 }`);\n  }\n};\nconst encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nconst encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};\n\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
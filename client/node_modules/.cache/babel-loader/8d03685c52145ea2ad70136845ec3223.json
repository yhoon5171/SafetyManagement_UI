{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _createForOfIteratorHelper = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar LOAD_CODEC = function LOAD_CODEC(codeOrName) {\n  return Promise.reject(new Error(\"No codec found for \\\"\".concat(codeOrName, \"\\\"\")));\n};\n\nvar Multicodecs = /*#__PURE__*/function () {\n  function Multicodecs(options) {\n    _classCallCheck(this, Multicodecs);\n\n    this._codecsByName = {};\n    this._codecsByCode = {};\n    this._loadCodec = options.loadCodec || LOAD_CODEC;\n\n    var _iterator = _createForOfIteratorHelper(options.codecs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var codec = _step.value;\n        this.addCodec(codec);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  _createClass(Multicodecs, [{\n    key: \"addCodec\",\n    value: function addCodec(codec) {\n      if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n        throw new Error(\"Resolver already exists for codec \\\"\".concat(codec.name, \"\\\"\"));\n      }\n\n      this._codecsByName[codec.name] = codec;\n      this._codecsByCode[codec.code] = codec;\n    }\n  }, {\n    key: \"removeCodec\",\n    value: function removeCodec(codec) {\n      delete this._codecsByName[codec.name];\n      delete this._codecsByCode[codec.code];\n    }\n  }, {\n    key: \"getCodec\",\n    value: function () {\n      var _getCodec = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(code) {\n        var table, codec;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                table = typeof code === 'string' ? this._codecsByName : this._codecsByCode;\n\n                if (!table[code]) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", table[code]);\n\n              case 3:\n                _context.next = 5;\n                return this._loadCodec(code);\n\n              case 5:\n                codec = _context.sent;\n\n                if (table[code] == null) {\n                  this.addCodec(codec);\n                }\n\n                return _context.abrupt(\"return\", codec);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCodec(_x) {\n        return _getCodec.apply(this, arguments);\n      }\n\n      return getCodec;\n    }()\n  }, {\n    key: \"listCodecs\",\n    value: function listCodecs() {\n      return Object.values(this._codecsByName);\n    }\n  }]);\n\n  return Multicodecs;\n}();\n\nexports.Multicodecs = Multicodecs;","map":{"version":3,"names":["Object","defineProperty","exports","value","LOAD_CODEC","codeOrName","Promise","reject","Error","Multicodecs","options","_codecsByName","_codecsByCode","_loadCodec","loadCodec","codecs","codec","addCodec","name","code","table","values"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/ipfs-core-utils/cjs/src/multicodecs.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nconst LOAD_CODEC = codeOrName => Promise.reject(new Error(`No codec found for \"${ codeOrName }\"`));\r\nclass Multicodecs {\r\n  constructor(options) {\r\n    this._codecsByName = {};\r\n    this._codecsByCode = {};\r\n    this._loadCodec = options.loadCodec || LOAD_CODEC;\r\n    for (const codec of options.codecs) {\r\n      this.addCodec(codec);\r\n    }\r\n  }\r\n  addCodec(codec) {\r\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\r\n      throw new Error(`Resolver already exists for codec \"${ codec.name }\"`);\r\n    }\r\n    this._codecsByName[codec.name] = codec;\r\n    this._codecsByCode[codec.code] = codec;\r\n  }\r\n  removeCodec(codec) {\r\n    delete this._codecsByName[codec.name];\r\n    delete this._codecsByCode[codec.code];\r\n  }\r\n  async getCodec(code) {\r\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode;\r\n    if (table[code]) {\r\n      return table[code];\r\n    }\r\n    const codec = await this._loadCodec(code);\r\n    if (table[code] == null) {\r\n      this.addCodec(codec);\r\n    }\r\n    return codec;\r\n  }\r\n  listCodecs() {\r\n    return Object.values(this._codecsByName);\r\n  }\r\n}\r\n\r\nexports.Multicodecs = Multicodecs;\r\n"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,UAAU;EAAA,OAAIC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,gCAAkCH,UAAlC,QAAf,CAAJ;AAAA,CAA7B;;IACMI,W;EACJ,qBAAYC,OAAZ,EAAqB;IAAA;;IACnB,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKC,UAAL,GAAkBH,OAAO,CAACI,SAAR,IAAqBV,UAAvC;;IAHmB,2CAICM,OAAO,CAACK,MAJT;IAAA;;IAAA;MAInB,oDAAoC;QAAA,IAAzBC,KAAyB;QAClC,KAAKC,QAAL,CAAcD,KAAd;MACD;IANkB;MAAA;IAAA;MAAA;IAAA;EAOpB;;;;WACD,kBAASA,KAAT,EAAgB;MACd,IAAI,KAAKL,aAAL,CAAmBK,KAAK,CAACE,IAAzB,KAAkC,KAAKN,aAAL,CAAmBI,KAAK,CAACG,IAAzB,CAAtC,EAAsE;QACpE,MAAM,IAAIX,KAAJ,+CAAiDQ,KAAK,CAACE,IAAvD,QAAN;MACD;;MACD,KAAKP,aAAL,CAAmBK,KAAK,CAACE,IAAzB,IAAiCF,KAAjC;MACA,KAAKJ,aAAL,CAAmBI,KAAK,CAACG,IAAzB,IAAiCH,KAAjC;IACD;;;WACD,qBAAYA,KAAZ,EAAmB;MACjB,OAAO,KAAKL,aAAL,CAAmBK,KAAK,CAACE,IAAzB,CAAP;MACA,OAAO,KAAKN,aAAL,CAAmBI,KAAK,CAACG,IAAzB,CAAP;IACD;;;;iFACD,iBAAeA,IAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQC,KADR,GACgB,OAAOD,IAAP,KAAgB,QAAhB,GAA2B,KAAKR,aAAhC,GAAgD,KAAKC,aADrE;;gBAAA,KAEMQ,KAAK,CAACD,IAAD,CAFX;kBAAA;kBAAA;gBAAA;;gBAAA,iCAGWC,KAAK,CAACD,IAAD,CAHhB;;cAAA;gBAAA;gBAAA,OAKsB,KAAKN,UAAL,CAAgBM,IAAhB,CALtB;;cAAA;gBAKQH,KALR;;gBAME,IAAII,KAAK,CAACD,IAAD,CAAL,IAAe,IAAnB,EAAyB;kBACvB,KAAKF,QAAL,CAAcD,KAAd;gBACD;;gBARH,iCASSA,KATT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAWA,sBAAa;MACX,OAAOhB,MAAM,CAACqB,MAAP,CAAc,KAAKV,aAAnB,CAAP;IACD;;;;;;AAGHT,OAAO,CAACO,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}
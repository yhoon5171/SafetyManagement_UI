{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _awaitAsyncGenerator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar toString = require('uint8arrays/to-string');\n\nvar mapEvent = require('./map-event.js');\n\nvar createPut = configure.configure(function (api) {\n  function put(_x, _x2) {\n    return _put.apply(this, arguments);\n  }\n\n  function _put() {\n    _put = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, value) {\n      var options,\n          controller,\n          signal,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          event,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              controller = new AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = api;\n              _context.t2 = _objectSpread;\n              _context.t3 = {\n                signal: signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: key instanceof Uint8Array ? toString.toString(key) : key.toString()\n                }, options))\n              };\n              _context.next = 9;\n              return _awaitAsyncGenerator(multipartRequest.multipartRequest([value], controller, options.headers));\n\n            case 9:\n              _context.t4 = _context.sent;\n              _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n              _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n              _context.next = 14;\n              return (0, _context.t0)(_context.t6);\n\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 17;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 21:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 28;\n                break;\n              }\n\n              event = _step.value;\n              _context.next = 25;\n              return mapEvent.mapEvent(event);\n\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context.next = 19;\n              break;\n\n            case 28:\n              _context.next = 34;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t7 = _context[\"catch\"](17);\n              _didIteratorError = true;\n              _iteratorError = _context.t7;\n\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 39;\n                break;\n              }\n\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 39:\n              _context.prev = 39;\n\n              if (!_didIteratorError) {\n                _context.next = 42;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 42:\n              return _context.finish(39);\n\n            case 43:\n              return _context.finish(34);\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[17, 30, 34, 44], [35,, 39, 43]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n\n  return put;\n});\nexports.createPut = createPut;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","multipartRequest","abortSignal","toString","mapEvent","createPut","api","put","key","options","controller","AbortController","signal","searchParams","arg","Uint8Array","headers","post","res","ndjson","event"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/dht/put.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar toString = require('uint8arrays/to-string');\nvar mapEvent = require('./map-event.js');\n\nconst createPut = configure.configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: key instanceof Uint8Array ? toString.toString(key) : key.toString(),\n        ...options\n      }),\n      ...await multipartRequest.multipartRequest([value], controller, options.headers)\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent.mapEvent(event);\n    }\n  }\n  return put;\n});\n\nexports.createPut = createPut;\n"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAMM,SAAS,GAAGP,SAAS,CAACA,SAAV,CAAoB,UAAAQ,GAAG,EAAI;EAAA,SAC3BC,GAD2B;IAAA;EAAA;;EAAA;IAAA,oEAC3C,iBAAoBC,GAApB,EAAyBX,KAAzB;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAgCY,OAAhC,2DAA0C,EAA1C;cACQC,UADR,GACqB,IAAIC,eAAJ,EADrB;cAEQC,MAFR,GAEiBV,WAAW,CAACA,WAAZ,CAAwBQ,UAAU,CAACE,MAAnC,EAA2CH,OAAO,CAACG,MAAnD,CAFjB;cAAA;cAAA,cAGoBN,GAHpB;cAAA;cAAA;gBAIIM,MAAM,EAANA,MAJJ;gBAKIC,YAAY,EAAEb,iBAAiB,CAACA,iBAAlB;kBACZc,GAAG,EAAEN,GAAG,YAAYO,UAAf,GAA4BZ,QAAQ,CAACA,QAAT,CAAkBK,GAAlB,CAA5B,GAAqDA,GAAG,CAACL,QAAJ;gBAD9C,GAETM,OAFS;cALlB;cAAA;cAAA,4BASaR,gBAAgB,CAACA,gBAAjB,CAAkC,CAACJ,KAAD,CAAlC,EAA2Ca,UAA3C,EAAuDD,OAAO,CAACO,OAA/D,CATb;;YAAA;cAAA;cAAA;cAAA,0BAGwBC,IAHxB,mBAG6B,SAH7B;cAAA;cAAA;;YAAA;cAGQC,GAHR;cAAA;cAAA;cAAA;cAAA,2BAW4BA,GAAG,CAACC,MAAJ,EAX5B;;YAAA;cAAA;cAAA;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cAWmBC,KAXnB;cAAA;cAYI,OAAMhB,QAAQ,CAACA,QAAT,CAAkBgB,KAAlB,CAAN;;YAZJ;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;cAAA;;YAAA;cAAA;;cAAA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAD2C;IAAA;EAAA;;EAgB3C,OAAOb,GAAP;AACD,CAjBiB,CAAlB;AAmBAX,OAAO,CAACS,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}
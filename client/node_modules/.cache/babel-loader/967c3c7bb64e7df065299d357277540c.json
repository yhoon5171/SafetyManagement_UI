{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _createForOfIteratorHelper = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _objectSpread = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _awaitAsyncGenerator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createAddAll = configure.configure(function (api) {\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var options,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _step$value,\n          path,\n          recursive,\n          metadata,\n          res,\n          _iteratorAbruptCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          pin,\n          _iterator3,\n          _step3,\n          cid$1,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput.normaliseInput(source));\n\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 63;\n                break;\n              }\n\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive, metadata = _step$value.metadata;\n              _context.next = 11;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n\n            case 11:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 14;\n              _iterator2 = _asyncIterator(res.ndjson());\n\n            case 16:\n              _context.next = 18;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 18:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 44;\n                break;\n              }\n\n              pin = _step2.value;\n\n              if (!pin.Pins) {\n                _context.next = 39;\n                break;\n              }\n\n              _iterator3 = _createForOfIteratorHelper(pin.Pins);\n              _context.prev = 22;\n\n              _iterator3.s();\n\n            case 24:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 30;\n                break;\n              }\n\n              cid$1 = _step3.value;\n              _context.next = 28;\n              return cid.CID.parse(cid$1);\n\n            case 28:\n              _context.next = 24;\n              break;\n\n            case 30:\n              _context.next = 35;\n              break;\n\n            case 32:\n              _context.prev = 32;\n              _context.t0 = _context[\"catch\"](22);\n\n              _iterator3.e(_context.t0);\n\n            case 35:\n              _context.prev = 35;\n\n              _iterator3.f();\n\n              return _context.finish(35);\n\n            case 38:\n              return _context.abrupt(\"continue\", 41);\n\n            case 39:\n              _context.next = 41;\n              return cid.CID.parse(pin);\n\n            case 41:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 16;\n              break;\n\n            case 44:\n              _context.next = 50;\n              break;\n\n            case 46:\n              _context.prev = 46;\n              _context.t1 = _context[\"catch\"](14);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 50:\n              _context.prev = 50;\n              _context.prev = 51;\n\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 55;\n                break;\n              }\n\n              _context.next = 55;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 55:\n              _context.prev = 55;\n\n              if (!_didIteratorError2) {\n                _context.next = 58;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 58:\n              return _context.finish(55);\n\n            case 59:\n              return _context.finish(50);\n\n            case 60:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n\n            case 63:\n              _context.next = 69;\n              break;\n\n            case 65:\n              _context.prev = 65;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n\n            case 69:\n              _context.prev = 69;\n              _context.prev = 70;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 74;\n                break;\n              }\n\n              _context.next = 74;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 74:\n              _context.prev = 74;\n\n              if (!_didIteratorError) {\n                _context.next = 77;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 77:\n              return _context.finish(74);\n\n            case 78:\n              return _context.finish(69);\n\n            case 79:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 65, 69, 79], [14, 46, 50, 60], [22, 32, 35, 38], [51,, 55, 59], [70,, 74, 78]]);\n    }));\n    return _addAll.apply(this, arguments);\n  }\n\n  return addAll;\n});\nexports.createAddAll = createAddAll;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","normaliseInput","toUrlSearchParams","createAddAll","api","addAll","source","options","path","recursive","metadata","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","res","ndjson","pin","Pins","cid$1","CID","parse"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/pin/add-all.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar cid = require('multiformats/cid');\r\nvar configure = require('../lib/configure.js');\r\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\r\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\r\n\r\nconst createAddAll = configure.configure(api => {\r\n  async function* addAll(source, options = {}) {\r\n    for await (const {path, recursive, metadata} of normaliseInput.normaliseInput(source)) {\r\n      const res = await api.post('pin/add', {\r\n        signal: options.signal,\r\n        searchParams: toUrlSearchParams.toUrlSearchParams({\r\n          ...options,\r\n          arg: path,\r\n          recursive,\r\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\r\n          stream: true\r\n        }),\r\n        headers: options.headers\r\n      });\r\n      for await (const pin of res.ndjson()) {\r\n        if (pin.Pins) {\r\n          for (const cid$1 of pin.Pins) {\r\n            yield cid.CID.parse(cid$1);\r\n          }\r\n          continue;\r\n        }\r\n        yield cid.CID.parse(pin);\r\n      }\r\n    }\r\n  }\r\n  return addAll;\r\n});\r\n\r\nexports.createAddAll = createAddAll;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
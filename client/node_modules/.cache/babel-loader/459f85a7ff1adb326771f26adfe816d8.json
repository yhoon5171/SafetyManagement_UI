{"ast":null,"code":"'use strict';\n\nconst isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\n\nfunction getDefaultBase() {\n  if (isReactNative) {\n    return 'http://localhost';\n  } // in some environments i.e. cloudflare workers location is not available\n\n\n  if (!self.location) {\n    return '';\n  }\n\n  return self.location.protocol + '//' + self.location.host;\n}\n\nconst URL = self.URL;\nconst defaultBase = getDefaultBase();\n\nclass URLWithLegacySupport {\n  constructor() {\n    let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultBase;\n    this.super = new URL(url, base);\n    this.path = this.pathname + this.search;\n    this.auth = this.username && this.password ? this.username + ':' + this.password : null;\n    this.query = this.search && this.search.startsWith('?') ? this.search.slice(1) : null;\n  }\n\n  get hash() {\n    return this.super.hash;\n  }\n\n  get host() {\n    return this.super.host;\n  }\n\n  get hostname() {\n    return this.super.hostname;\n  }\n\n  get href() {\n    return this.super.href;\n  }\n\n  get origin() {\n    return this.super.origin;\n  }\n\n  get password() {\n    return this.super.password;\n  }\n\n  get pathname() {\n    return this.super.pathname;\n  }\n\n  get port() {\n    return this.super.port;\n  }\n\n  get protocol() {\n    return this.super.protocol;\n  }\n\n  get search() {\n    return this.super.search;\n  }\n\n  get searchParams() {\n    return this.super.searchParams;\n  }\n\n  get username() {\n    return this.super.username;\n  }\n\n  set hash(hash) {\n    this.super.hash = hash;\n  }\n\n  set host(host) {\n    this.super.host = host;\n  }\n\n  set hostname(hostname) {\n    this.super.hostname = hostname;\n  }\n\n  set href(href) {\n    this.super.href = href;\n  }\n\n  set password(password) {\n    this.super.password = password;\n  }\n\n  set pathname(pathname) {\n    this.super.pathname = pathname;\n  }\n\n  set port(port) {\n    this.super.port = port;\n  }\n\n  set protocol(protocol) {\n    this.super.protocol = protocol;\n  }\n\n  set search(search) {\n    this.super.search = search;\n  }\n\n  set username(username) {\n    this.super.username = username;\n  }\n  /**\r\n   * @param {any} o\r\n   */\n\n\n  static createObjectURL(o) {\n    return URL.createObjectURL(o);\n  }\n  /**\r\n   * @param {string} o\r\n   */\n\n\n  static revokeObjectURL(o) {\n    URL.revokeObjectURL(o);\n  }\n\n  toJSON() {\n    return this.super.toJSON();\n  }\n\n  toString() {\n    return this.super.toString();\n  }\n\n  format() {\n    return this.toString();\n  }\n\n}\n/**\r\n * @param {string | import('url').UrlObject} obj\r\n */\n\n\nfunction format(obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj);\n    return url.toString();\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass = // @ts-ignore its not supported in node but we normalise\n    obj.username && obj.password // @ts-ignore its not supported in node but we normalise\n    ? `${obj.username}:${obj.password}@` : '';\n    const auth = obj.auth ? obj.auth + '@' : '';\n    const port = obj.port ? ':' + obj.port : '';\n    const protocol = obj.protocol ? obj.protocol + '//' : '';\n    const host = obj.host || '';\n    const hostname = obj.hostname || '';\n    const search = obj.search || (obj.query ? '?' + obj.query : '');\n    const hash = obj.hash || '';\n    const pathname = obj.pathname || ''; // @ts-ignore - path is not supported in node but we normalise\n\n    const path = obj.path || pathname + search;\n    return `${protocol}${userPass || auth}${host || hostname + port}${path}${hash}`;\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n};","map":{"version":3,"names":["isReactNative","navigator","product","getDefaultBase","self","location","protocol","host","URL","defaultBase","URLWithLegacySupport","constructor","url","base","super","path","pathname","search","auth","username","password","query","startsWith","slice","hash","hostname","href","origin","port","searchParams","createObjectURL","o","revokeObjectURL","toJSON","toString","format","obj","userPass","module","exports","URLSearchParams"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/iso-url/src/url-browser.js"],"sourcesContent":["'use strict'\r\n\r\nconst isReactNative =\r\n    typeof navigator !== 'undefined' &&\r\n    navigator.product === 'ReactNative'\r\n\r\nfunction getDefaultBase () {\r\n  if (isReactNative) {\r\n    return 'http://localhost'\r\n  }\r\n  // in some environments i.e. cloudflare workers location is not available\r\n  if (!self.location) {\r\n    return ''\r\n  }\r\n\r\n  return self.location.protocol + '//' + self.location.host\r\n}\r\n\r\nconst URL = self.URL\r\nconst defaultBase = getDefaultBase()\r\n\r\nclass URLWithLegacySupport {\r\n  constructor (url = '', base = defaultBase) {\r\n    this.super = new URL(url, base)\r\n    this.path = this.pathname + this.search\r\n    this.auth =\r\n            this.username && this.password\r\n              ? this.username + ':' + this.password\r\n              : null\r\n\r\n    this.query =\r\n            this.search && this.search.startsWith('?')\r\n              ? this.search.slice(1)\r\n              : null\r\n  }\r\n\r\n  get hash () {\r\n    return this.super.hash\r\n  }\r\n\r\n  get host () {\r\n    return this.super.host\r\n  }\r\n\r\n  get hostname () {\r\n    return this.super.hostname\r\n  }\r\n\r\n  get href () {\r\n    return this.super.href\r\n  }\r\n\r\n  get origin () {\r\n    return this.super.origin\r\n  }\r\n\r\n  get password () {\r\n    return this.super.password\r\n  }\r\n\r\n  get pathname () {\r\n    return this.super.pathname\r\n  }\r\n\r\n  get port () {\r\n    return this.super.port\r\n  }\r\n\r\n  get protocol () {\r\n    return this.super.protocol\r\n  }\r\n\r\n  get search () {\r\n    return this.super.search\r\n  }\r\n\r\n  get searchParams () {\r\n    return this.super.searchParams\r\n  }\r\n\r\n  get username () {\r\n    return this.super.username\r\n  }\r\n\r\n  set hash (hash) {\r\n    this.super.hash = hash\r\n  }\r\n\r\n  set host (host) {\r\n    this.super.host = host\r\n  }\r\n\r\n  set hostname (hostname) {\r\n    this.super.hostname = hostname\r\n  }\r\n\r\n  set href (href) {\r\n    this.super.href = href\r\n  }\r\n\r\n  set password (password) {\r\n    this.super.password = password\r\n  }\r\n\r\n  set pathname (pathname) {\r\n    this.super.pathname = pathname\r\n  }\r\n\r\n  set port (port) {\r\n    this.super.port = port\r\n  }\r\n\r\n  set protocol (protocol) {\r\n    this.super.protocol = protocol\r\n  }\r\n\r\n  set search (search) {\r\n    this.super.search = search\r\n  }\r\n\r\n  set username (username) {\r\n    this.super.username = username\r\n  }\r\n\r\n  /**\r\n   * @param {any} o\r\n   */\r\n  static createObjectURL (o) {\r\n    return URL.createObjectURL(o)\r\n  }\r\n\r\n  /**\r\n   * @param {string} o\r\n   */\r\n  static revokeObjectURL (o) {\r\n    URL.revokeObjectURL(o)\r\n  }\r\n\r\n  toJSON () {\r\n    return this.super.toJSON()\r\n  }\r\n\r\n  toString () {\r\n    return this.super.toString()\r\n  }\r\n\r\n  format () {\r\n    return this.toString()\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string | import('url').UrlObject} obj\r\n */\r\nfunction format (obj) {\r\n  if (typeof obj === 'string') {\r\n    const url = new URL(obj)\r\n\r\n    return url.toString()\r\n  }\r\n\r\n  if (!(obj instanceof URL)) {\r\n    const userPass =\r\n            // @ts-ignore its not supported in node but we normalise\r\n            obj.username && obj.password\r\n              // @ts-ignore its not supported in node but we normalise\r\n              ? `${obj.username}:${obj.password}@`\r\n              : ''\r\n    const auth = obj.auth ? obj.auth + '@' : ''\r\n    const port = obj.port ? ':' + obj.port : ''\r\n    const protocol = obj.protocol ? obj.protocol + '//' : ''\r\n    const host = obj.host || ''\r\n    const hostname = obj.hostname || ''\r\n    const search = obj.search || (obj.query ? '?' + obj.query : '')\r\n    const hash = obj.hash || ''\r\n    const pathname = obj.pathname || ''\r\n    // @ts-ignore - path is not supported in node but we normalise\r\n    const path = obj.path || pathname + search\r\n\r\n    return `${protocol}${userPass || auth}${\r\n            host || hostname + port\r\n        }${path}${hash}`\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  URLWithLegacySupport,\r\n  URLSearchParams: self.URLSearchParams,\r\n  defaultBase,\r\n  format\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var scryptsy = require('scryptsy');\n\nvar scrypt;\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n\nif (isNode) {\n  var NODE_MIN_VER_WITH_BUILTIN_SCRYPT = '10.5.0';\n  var NODE_MIN_VER_INCOMPAT_SCRYPT_PKG = '12.0.0';\n\n  var semver = require('semver');\n\n  var useNodeBuiltin = isNode && semver.Range('>=' + NODE_MIN_VER_WITH_BUILTIN_SCRYPT).test(process.version);\n\n  var tryScryptPkg = function () {\n    var scryptPkg;\n    return function () {\n      if (scryptPkg !== undefined) {\n        return scryptPkg;\n      }\n\n      try {\n        scryptPkg = function (m) {\n          return require(m);\n        }('scrypt');\n      } catch (e) {\n        if (/was compiled against a different/.test(e.message)) {\n          throw e;\n        }\n\n        scryptPkg = null;\n      }\n\n      return scryptPkg;\n    };\n  }();\n\n  var canImprove = function (nodeVer) {\n    return 'can improve web3\\'s peformance when running Node.js versions older than ' + nodeVer + ' by installing the (deprecated) scrypt package in your project';\n  };\n\n  if (useNodeBuiltin) {\n    var crypto = require('crypto');\n\n    var fallbackCount = 0;\n\n    scrypt = function (key, salt, N, r, p, dkLen) {\n      try {\n        return crypto.scryptSync(key, salt, dkLen, {\n          N: N,\n          r: r,\n          p: p\n        });\n      } catch (e) {\n        if (/scrypt:memory limit exceeded/.test(e.message)) {\n          var scryptPkg = tryScryptPkg();\n\n          if (scryptPkg) {\n            return scryptPkg.hashSync(key, {\n              N: N,\n              r: r,\n              p: p\n            }, dkLen, salt);\n          }\n\n          fallbackCount += 1;\n          console.warn('\\x1b[33m%s\\x1b[0m', 'Memory limit exceeded for Node\\'s built-in crypto.scrypt, falling back to scryptsy (times: ' + fallbackCount + '), if this happens frequently you ' + canImprove(NODE_MIN_VER_INCOMPAT_SCRYPT_PKG));\n          return scryptsy(key, salt, N, r, p, dkLen);\n        }\n\n        throw e;\n      }\n    };\n  } else {\n    var scryptPkg = tryScryptPkg();\n\n    if (scryptPkg) {\n      scrypt = function (key, salt, N, r, p, dkLen) {\n        return scryptPkg.hashSync(key, {\n          N: N,\n          r: r,\n          p: p\n        }, dkLen, salt);\n      };\n    } else {\n      console.warn('\\x1b[33m%s\\x1b[0m', 'You ' + canImprove(NODE_MIN_VER_WITH_BUILTIN_SCRYPT));\n    }\n  }\n}\n\nscrypt = scrypt || scryptsy;\nmodule.exports = scrypt;","map":{"version":3,"names":["scryptsy","require","scrypt","isNode","Object","prototype","toString","call","process","NODE_MIN_VER_WITH_BUILTIN_SCRYPT","NODE_MIN_VER_INCOMPAT_SCRYPT_PKG","semver","useNodeBuiltin","Range","test","version","tryScryptPkg","scryptPkg","undefined","m","e","message","canImprove","nodeVer","crypto","fallbackCount","key","salt","N","r","p","dkLen","scryptSync","hashSync","console","warn","module","exports"],"sources":["C:/Users/mcnl/Desktop/gong/test/SafetyManagement_UI/client/node_modules/truffle-contract/node_modules/web3-eth-accounts/src/scrypt.js"],"sourcesContent":["var scryptsy = require('scryptsy');\n\nvar scrypt;\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nif (isNode) {\n    var NODE_MIN_VER_WITH_BUILTIN_SCRYPT = '10.5.0';\n    var NODE_MIN_VER_INCOMPAT_SCRYPT_PKG = '12.0.0';\n    var semver = require('semver');\n    var useNodeBuiltin = isNode && semver.Range('>=' + NODE_MIN_VER_WITH_BUILTIN_SCRYPT).test(process.version);\n\n    var tryScryptPkg = (function() {\n        var scryptPkg;\n        return function() {\n            if (scryptPkg !== undefined) { return scryptPkg; }\n            try {\n                scryptPkg = (function(m) { return require(m); })('scrypt');\n            } catch (e) {\n                if (/was compiled against a different/.test(e.message)) {\n                    throw e;\n                }\n                scryptPkg = null;\n            }\n            return scryptPkg;\n        };\n    })();\n\n    var canImprove = function(nodeVer) {\n        return 'can improve web3\\'s peformance when running Node.js versions older than ' + nodeVer + ' by installing the (deprecated) scrypt package in your project';\n    };\n\n    if (useNodeBuiltin) {\n        var crypto = require('crypto');\n        var fallbackCount = 0;\n        scrypt = function(key, salt, N, r, p, dkLen) {\n            try {\n                return crypto.scryptSync(key, salt, dkLen, {N: N, r: r, p: p});\n            } catch (e) {\n                if (/scrypt:memory limit exceeded/.test(e.message)) {\n                    var scryptPkg = tryScryptPkg();\n                    if (scryptPkg) {\n                        return scryptPkg.hashSync(key, {N: N, r: r, p: p}, dkLen, salt);\n                    }\n                    fallbackCount += 1;\n                    console.warn(\n                        '\\x1b[33m%s\\x1b[0m',\n                        'Memory limit exceeded for Node\\'s built-in crypto.scrypt, falling back to scryptsy (times: ' + fallbackCount + '), if this happens frequently you ' + canImprove(NODE_MIN_VER_INCOMPAT_SCRYPT_PKG)\n                    );\n                    return scryptsy(key, salt, N, r, p, dkLen);\n                }\n                throw e;\n            }\n        };\n    } else {\n        var scryptPkg = tryScryptPkg();\n        if (scryptPkg) {\n            scrypt = function(key, salt, N, r, p, dkLen) {\n                return scryptPkg.hashSync(key, {N: N, r: r, p: p}, dkLen, salt);\n            };\n        } else {\n            console.warn(\n                '\\x1b[33m%s\\x1b[0m',\n                'You ' + canImprove(NODE_MIN_VER_WITH_BUILTIN_SCRYPT)\n            );\n        }\n    }\n}\n\nscrypt = scrypt || scryptsy;\n\nmodule.exports = scrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
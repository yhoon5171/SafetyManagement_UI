{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar utils = require('web3-utils');\n\nvar Net = require('web3-net');\n\nvar formatters = require('web3-core-helpers').formatters;\n\nvar Personal = function Personal() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments);\n  this.net = new Net(this.currentProvider);\n  var defaultAccount = null;\n  var defaultBlock = 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      } // update defaultBlock\n\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  var methods = [new Method({\n    name: 'getAccounts',\n    call: 'personal_listAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'newAccount',\n    call: 'personal_newAccount',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'unlockAccount',\n    call: 'personal_unlockAccount',\n    params: 3,\n    inputFormatter: [formatters.inputAddressFormatter, null, null]\n  }), new Method({\n    name: 'lockAccount',\n    call: 'personal_lockAccount',\n    params: 1,\n    inputFormatter: [formatters.inputAddressFormatter]\n  }), new Method({\n    name: 'importRawKey',\n    call: 'personal_importRawKey',\n    params: 2\n  }), new Method({\n    name: 'sendTransaction',\n    call: 'personal_sendTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  }), new Method({\n    name: 'signTransaction',\n    call: 'personal_signTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  }), new Method({\n    name: 'sign',\n    call: 'personal_sign',\n    params: 3,\n    inputFormatter: [formatters.inputSignFormatter, formatters.inputAddressFormatter, null]\n  }), new Method({\n    name: 'ecRecover',\n    call: 'personal_ecRecover',\n    params: 2,\n    inputFormatter: [formatters.inputSignFormatter, null]\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n  });\n};\n\ncore.addProviders(Personal);\nmodule.exports = Personal;","map":{"version":3,"names":["core","require","Method","utils","Net","formatters","Personal","_this","packageInit","arguments","net","currentProvider","defaultAccount","defaultBlock","Object","defineProperty","get","set","val","toChecksumAddress","inputAddressFormatter","methods","forEach","method","enumerable","name","call","params","outputFormatter","inputFormatter","inputTransactionFormatter","inputSignFormatter","attachToObject","setRequestManager","_requestManager","addProviders","module","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/truffle-interface-adapter/node_modules/web3-eth-personal/src/index.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar core = require('web3-core');\r\nvar Method = require('web3-core-method');\r\nvar utils = require('web3-utils');\r\nvar Net = require('web3-net');\r\n\r\nvar formatters = require('web3-core-helpers').formatters;\r\n\r\n\r\nvar Personal = function Personal() {\r\n    var _this = this;\r\n\r\n    // sets _requestmanager\r\n    core.packageInit(this, arguments);\r\n\r\n    this.net = new Net(this.currentProvider);\r\n\r\n    var defaultAccount = null;\r\n    var defaultBlock = 'latest';\r\n\r\n    Object.defineProperty(this, 'defaultAccount', {\r\n        get: function () {\r\n            return defaultAccount;\r\n        },\r\n        set: function (val) {\r\n            if(val) {\r\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\r\n            }\r\n\r\n            // update defaultBlock\r\n            methods.forEach(function(method) {\r\n                method.defaultAccount = defaultAccount;\r\n            });\r\n\r\n            return val;\r\n        },\r\n        enumerable: true\r\n    });\r\n    Object.defineProperty(this, 'defaultBlock', {\r\n        get: function () {\r\n            return defaultBlock;\r\n        },\r\n        set: function (val) {\r\n            defaultBlock = val;\r\n\r\n            // update defaultBlock\r\n            methods.forEach(function(method) {\r\n                method.defaultBlock = defaultBlock;\r\n            });\r\n\r\n            return val;\r\n        },\r\n        enumerable: true\r\n    });\r\n\r\n\r\n    var methods = [\r\n        new Method({\r\n            name: 'getAccounts',\r\n            call: 'personal_listAccounts',\r\n            params: 0,\r\n            outputFormatter: utils.toChecksumAddress\r\n        }),\r\n        new Method({\r\n            name: 'newAccount',\r\n            call: 'personal_newAccount',\r\n            params: 1,\r\n            inputFormatter: [null],\r\n            outputFormatter: utils.toChecksumAddress\r\n        }),\r\n        new Method({\r\n            name: 'unlockAccount',\r\n            call: 'personal_unlockAccount',\r\n            params: 3,\r\n            inputFormatter: [formatters.inputAddressFormatter, null, null]\r\n        }),\r\n        new Method({\r\n            name: 'lockAccount',\r\n            call: 'personal_lockAccount',\r\n            params: 1,\r\n            inputFormatter: [formatters.inputAddressFormatter]\r\n        }),\r\n        new Method({\r\n            name: 'importRawKey',\r\n            call: 'personal_importRawKey',\r\n            params: 2\r\n        }),\r\n        new Method({\r\n            name: 'sendTransaction',\r\n            call: 'personal_sendTransaction',\r\n            params: 2,\r\n            inputFormatter: [formatters.inputTransactionFormatter, null]\r\n        }),\r\n        new Method({\r\n            name: 'signTransaction',\r\n            call: 'personal_signTransaction',\r\n            params: 2,\r\n            inputFormatter: [formatters.inputTransactionFormatter, null]\r\n        }),\r\n        new Method({\r\n            name: 'sign',\r\n            call: 'personal_sign',\r\n            params: 3,\r\n            inputFormatter: [formatters.inputSignFormatter, formatters.inputAddressFormatter, null]\r\n        }),\r\n        new Method({\r\n            name: 'ecRecover',\r\n            call: 'personal_ecRecover',\r\n            params: 2,\r\n            inputFormatter: [formatters.inputSignFormatter, null]\r\n        })\r\n    ];\r\n    methods.forEach(function(method) {\r\n        method.attachToObject(_this);\r\n        method.setRequestManager(_this._requestManager);\r\n        method.defaultBlock = _this.defaultBlock;\r\n        method.defaultAccount = _this.defaultAccount;\r\n    });\r\n};\r\n\r\ncore.addProviders(Personal);\r\n\r\n\r\n\r\nmodule.exports = Personal;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _regeneratorRuntime from\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useRef}from\"react\";// import {FileUpload} from './components/FileUpload';\nimport TransactionContract from\"../contracts/Transaction.json\";import Web3 from'web3';import moment from\"moment\";// import Axios from 'axios';\n// import Login from './login';\n// import Signup from './signup';\nimport App from'../App.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Connection(){// const [fileUrl, setFileUrl] = useState(\"\");\n// const [web3, setWeb3] = useState(\"\");\n// const [account, setAccount] = useState(\"\");\n// const [transactionInstance, setTransactionInstance] = useState(\"\");\n// const [loading, setLoading] = useState(false);\n// const [category, setCategory] = useState(\"\");\n// const [name, setName] = useState(\"\");\n// const [ipfsHash, setIpfsHash] = useState(\"\");\n// const [registrant, setRegsitrant] = useState(\"\");\n// const [responsibleManager, setResponsibleManager] = useState(\"\");\n// const [fileType, setFileType] = useState(\"\");\n// const [fileDescription, setFileDescription] = useState(\"\");\n// const [transactionCnt, setTransactionCnt] = useState(\"\");\n// const [time, setTime] = useState(\"\");\n// const [ipfsHash_, setIpfsHash_] = useState(\"\");\n// const [category_, setCategory_] = useState(\"\");\n// const [name_, setName_] = useState(\"\");\n// const [registrant_, setRegsitrant_] = useState(\"\");\n// const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n// const [fileType_, setFileType_] = useState(\"\");\n// const [fileDescription_, setFileDescription_] = useState(\"\");\n// const submitReview = ()=>{\n//   Axios.post('http://localhost:3001/api/insert', {\n//     category: category,\n//     name: name,\n//     time: time,\n//     ipfsHash: ipfsHash,\n//     registrant: registrant,\n//     responsible: responsibleManager,\n//     filetype: fileType,\n//     filedes: fileDescription\n//   }).then(()=>{\n//     alert('등록 완료!');\n//   })\n// };\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),web3=_useState2[0],setWeb3=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),account=_useState4[0],setAccount=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),transactionInstance=_useState6[0],setTransactionInstance=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),block_list=_useState10[0],setblock_list=_useState10[1];useEffect(function(){function componentWillMount(_x){return _componentWillMount.apply(this,arguments);}function _componentWillMount(){_componentWillMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var web3,contract,transaction;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:web3=new Web3(new Web3.providers.HttpProvider('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com::8545'));setWeb3(web3);console.log(web3);contract=require(\"truffle-contract\");transaction=contract(TransactionContract);console.log(web3);transaction.setProvider(web3.currentProvider);web3.eth.getAccounts(function(error,accounts){if(!error){transaction.deployed().then(function(instance){setTransactionInstance(instance);var temp=0;if(sessionStorage.getItem('company')=='SDS')temp=0;else if(sessionStorage.getItem('company')=='KLL')temp=1;else if(sessionStorage.getItem('company')=='KOR')temp=2;else if(sessionStorage.getItem('company')=='LOS')temp=3;setAccount(accounts[temp]);setLoading(true);});}});case 8:case\"end\":return _context.stop();}}},_callee);}));return _componentWillMount.apply(this,arguments);}console.log(transactionInstance);console.log(account);componentWillMount();},[]);var nextId=useRef(1);useEffect(function(){function updateAllTransactions(_x2){return _updateAllTransactions.apply(this,arguments);}function _updateAllTransactions(){_updateAllTransactions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var events,i,time_;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return transactionInstance.getPastEvents('handleTransaction',{fromBlock:0,toBlock:'latest'});case 2:events=_context2.sent;for(i=0;i<events.length;i+=1){time_=moment.unix(events[i].returnValues.time);block_list.push({id:nextId.current,category:events[i].returnValues.category.toString(),name:events[i].returnValues.name.toString(),time:time_.toString(),ipfsHash:events[i].returnValues.ipfs_hash.toString(),registrant:events[i].returnValues.registrant.toString(),responsible:events[i].returnValues.responsible_manager.toString(),filetype:events[i].returnValues.file_type.toString(),filedes:events[i].returnValues.file_description.toString()});nextId.current+=1;console.log(events[i].returnValues);}console.log('events.length = ',events.length);console.log(events);console.log('block_list = ',block_list);console.log(account);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _updateAllTransactions.apply(this,arguments);}if(loading==true)updateAllTransactions();},[loading]);// const sendTransaction = async (e) => {\n//   console.log(web3);\n//   console.log(account);\n//   console.log(transactionInstance);\n//   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n//     from: account,\n//     //value: e.web3.utils.toWei('10', \"ether\"),\n//     gas: 1000000\n//   })\n//   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n//   console.log(events[events.length-1].transactionHash)\n//   //this.updateAllTransactions();\n//   submitReview();\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(App,{block_list:block_list,transactionInstance:transactionInstance,account:account})});}","map":{"version":3,"names":["React","useEffect","useState","useRef","TransactionContract","Web3","moment","App","Connection","web3","setWeb3","account","setAccount","transactionInstance","setTransactionInstance","loading","setLoading","block_list","setblock_list","componentWillMount","e","providers","HttpProvider","console","log","contract","require","transaction","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","temp","sessionStorage","getItem","nextId","updateAllTransactions","getPastEvents","fromBlock","toBlock","events","i","length","time_","unix","returnValues","time","push","id","current","category","toString","name","ipfsHash","ipfs_hash","registrant","responsible","responsible_manager","filetype","file_type","filedes","file_description"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/src/blockchain/connection.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\nimport TransactionContract from \"../contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\nimport App from '../App.jsx';\r\n\r\n\r\n\r\nexport default function Connection() {\r\n  // const [fileUrl, setFileUrl] = useState(\"\");\r\n  // const [web3, setWeb3] = useState(\"\");\r\n  // const [account, setAccount] = useState(\"\");\r\n  // const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  // const [category, setCategory] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  // const [registrant, setRegsitrant] = useState(\"\");\r\n  // const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  // const [fileType, setFileType] = useState(\"\");\r\n  // const [fileDescription, setFileDescription] = useState(\"\");\r\n  // const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  // const [time, setTime] = useState(\"\");\r\n  // const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  // const [category_, setCategory_] = useState(\"\");\r\n  // const [name_, setName_] = useState(\"\");\r\n  // const [registrant_, setRegsitrant_] = useState(\"\");\r\n  // const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  // const [fileType_, setFileType_] = useState(\"\");\r\n  // const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n  // const submitReview = ()=>{\r\n  //   Axios.post('http://localhost:3001/api/insert', {\r\n  //     category: category,\r\n  //     name: name,\r\n  //     time: time,\r\n  //     ipfsHash: ipfsHash,\r\n  //     registrant: registrant,\r\n  //     responsible: responsibleManager,\r\n  //     filetype: fileType,\r\n  //     filedes: fileDescription\r\n  //   }).then(()=>{\r\n  //     alert('등록 완료!');\r\n  //   })\r\n  // };\r\n\r\n\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const [block_list, setblock_list] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com::8545'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            let temp = 0;\r\n            if(sessionStorage.getItem('company') == 'SDS') temp = 0;\r\n            else if(sessionStorage.getItem('company') == 'KLL') temp = 1;\r\n            else if(sessionStorage.getItem('company') == 'KOR') temp = 2;\r\n            else if(sessionStorage.getItem('company') == 'LOS') temp = 3;\r\n            setAccount(accounts[temp]);\r\n            setLoading(true);\r\n          })\r\n        }\r\n      })\r\n      \r\n    }\r\n    console.log(transactionInstance)\r\n    console.log(account)\r\n\r\n    componentWillMount();    \r\n\r\n  }, []);\r\n\r\n  const nextId = useRef(1);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      \r\n\r\n\r\n      for(let i = 0; i < events.length; i += 1){\r\n        \r\n        var time_ = moment.unix(events[i].returnValues.time);\r\n        \r\n        block_list.push({\r\n          id: nextId.current,\r\n          category : events[i].returnValues.category.toString(),\r\n          name : events[i].returnValues.name.toString(),\r\n          time : time_.toString(), \r\n          ipfsHash : events[i].returnValues.ipfs_hash.toString(),\r\n          registrant : events[i].returnValues.registrant.toString(),\r\n          responsible : events[i].returnValues.responsible_manager.toString(),\r\n          filetype : events[i].returnValues.file_type.toString(),\r\n          filedes : events[i].returnValues.file_description.toString()\r\n        }\r\n        )\r\n        \r\n        nextId.current += 1;\r\n\r\n        console.log(events[i].returnValues);\r\n      }\r\n      console.log('events.length = ', events.length);\r\n      console.log(events);\r\n      console.log('block_list = ', block_list);\r\n      console.log(account);\r\n  \r\n    }\r\n\r\n    if (loading == true) updateAllTransactions();\r\n\r\n}, [loading]);\r\n\r\n\r\n\r\n  // const sendTransaction = async (e) => {\r\n  //   console.log(web3);\r\n  //   console.log(account);\r\n  //   console.log(transactionInstance);\r\n  //   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n  //     from: account,\r\n  //     //value: e.web3.utils.toWei('10', \"ether\"),\r\n  //     gas: 1000000\r\n  //   })\r\n    \r\n  //   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n  //   console.log(events[events.length-1].transactionHash)\r\n  //   //this.updateAllTransactions();\r\n\r\n  //   submitReview();\r\n  // }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Login />\r\n      <Signup />\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      {/* <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button> *//*}\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p> */}\r\n      <App block_list={block_list} transactionInstance={transactionInstance} account={account}/>\r\n    </div>\r\n  )\r\n}"],"mappings":"4cAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,OAAnD,CACA;AACA,MAAOC,oBAAP,KAAgC,+BAAhC,CACA,MAAOC,KAAP,KAAiB,MAAjB,CACA,MAAOC,OAAP,KAAmB,QAAnB,CACA;AACA;AACA;AACA,MAAOC,IAAP,KAAgB,YAAhB,C,2CAIA,cAAe,SAASC,WAAT,EAAsB,CACnC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,cAAwBN,QAAQ,CAAC,EAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACA,eAA8BR,QAAQ,CAAC,EAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAsDV,QAAQ,CAAC,EAAD,CAA9D,yCAAOW,mBAAP,eAA4BC,sBAA5B,eACA,eAA8BZ,QAAQ,CAAC,KAAD,CAAtC,yCAAOa,OAAP,eAAgBC,UAAhB,eAEA,eAAoCd,QAAQ,CAAC,EAAD,CAA5C,0CAAOe,UAAP,gBAAmBC,aAAnB,gBAEAjB,SAAS,CAAC,UAAM,SACCkB,mBADD,oKACd,iBAAkCC,CAAlC,kJACQX,IADR,CACe,GAAIJ,KAAJ,CAAS,GAAIA,KAAI,CAACgB,SAAL,CAAeC,YAAnB,CAAgC,qEAAhC,CAAT,CADf,CAEEZ,OAAO,CAACD,IAAD,CAAP,CACAc,OAAO,CAACC,GAAR,CAAYf,IAAZ,EACMgB,QAJR,CAImBC,OAAO,CAAC,kBAAD,CAJ1B,CAKQC,WALR,CAKsBF,QAAQ,CAACrB,mBAAD,CAL9B,CAMEmB,OAAO,CAACC,GAAR,CAAYf,IAAZ,EACAkB,WAAW,CAACC,WAAZ,CAAwBnB,IAAI,CAACoB,eAA7B,EAEApB,IAAI,CAACqB,GAAL,CAASC,WAAT,CAAqB,SAACC,KAAD,CAAQC,QAAR,CAAqB,CACxC,GAAI,CAACD,KAAL,CAAW,CACTL,WAAW,CAACO,QAAZ,GAAuBC,IAAvB,CAA4B,SAAAC,QAAQ,CAAI,CACtCtB,sBAAsB,CAACsB,QAAD,CAAtB,CACA,GAAIC,KAAI,CAAG,CAAX,CACA,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,GAAqC,KAAxC,CAA+CF,IAAI,CAAG,CAAP,CAA/C,IACK,IAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,GAAqC,KAAxC,CAA+CF,IAAI,CAAG,CAAP,CAA/C,IACA,IAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,GAAqC,KAAxC,CAA+CF,IAAI,CAAG,CAAP,CAA/C,IACA,IAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,GAAqC,KAAxC,CAA+CF,IAAI,CAAG,CAAP,CACpDzB,UAAU,CAACqB,QAAQ,CAACI,IAAD,CAAT,CAAV,CACArB,UAAU,CAAC,IAAD,CAAV,CACD,CATD,EAUD,CACF,CAbD,EATF,sDADc,qDA0BdO,OAAO,CAACC,GAAR,CAAYX,mBAAZ,EACAU,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAEAQ,kBAAkB,GAEnB,CA/BQ,CA+BN,EA/BM,CAAT,CAiCA,GAAMqB,OAAM,CAAGrC,MAAM,CAAC,CAAD,CAArB,CAIAF,SAAS,CAAC,UAAM,SAECwC,sBAFD,8KAEd,kBAAqCrB,CAArC,kKACqBP,oBAAmB,CAAC6B,aAApB,CAAkC,mBAAlC,CAAuD,CAACC,SAAS,CAAC,CAAX,CAAcC,OAAO,CAAC,QAAtB,CAAvD,CADrB,QACMC,MADN,gBAKE,IAAQC,CAAR,CAAY,CAAZ,CAAeA,CAAC,CAAGD,MAAM,CAACE,MAA1B,CAAkCD,CAAC,EAAI,CAAvC,CAAyC,CAEnCE,KAFmC,CAE3B1C,MAAM,CAAC2C,IAAP,CAAYJ,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBC,IAAnC,CAF2B,CAIvClC,UAAU,CAACmC,IAAX,CAAgB,CACdC,EAAE,CAAEb,MAAM,CAACc,OADG,CAEdC,QAAQ,CAAGV,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBK,QAAvB,CAAgCC,QAAhC,EAFG,CAGdC,IAAI,CAAGZ,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBO,IAAvB,CAA4BD,QAA5B,EAHO,CAIdL,IAAI,CAAGH,KAAK,CAACQ,QAAN,EAJO,CAKdE,QAAQ,CAAGb,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBS,SAAvB,CAAiCH,QAAjC,EALG,CAMdI,UAAU,CAAGf,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBU,UAAvB,CAAkCJ,QAAlC,EANC,CAOdK,WAAW,CAAGhB,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBY,mBAAvB,CAA2CN,QAA3C,EAPA,CAQdO,QAAQ,CAAGlB,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBc,SAAvB,CAAiCR,QAAjC,EARG,CASdS,OAAO,CAAGpB,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAV,CAAuBgB,gBAAvB,CAAwCV,QAAxC,EATI,CAAhB,EAaAhB,MAAM,CAACc,OAAP,EAAkB,CAAlB,CAEA/B,OAAO,CAACC,GAAR,CAAYqB,MAAM,CAACC,CAAD,CAAN,CAAUI,YAAtB,EACD,CACD3B,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCqB,MAAM,CAACE,MAAvC,EACAxB,OAAO,CAACC,GAAR,CAAYqB,MAAZ,EACAtB,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BP,UAA7B,EACAM,OAAO,CAACC,GAAR,CAAYb,OAAZ,EA7BF,wDAFc,wDAmCd,GAAII,OAAO,EAAI,IAAf,CAAqB0B,qBAAqB,GAE7C,CArCU,CAqCR,CAAC1B,OAAD,CArCQ,CAAT,CAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA,mBACE,kCA4CE,KAAC,GAAD,EAAK,UAAU,CAAEE,UAAjB,CAA6B,mBAAmB,CAAEJ,mBAAlD,CAAuE,OAAO,CAAEF,OAAhF,EA5CF,EADF,CAgDD"},"metadata":{},"sourceType":"module"}
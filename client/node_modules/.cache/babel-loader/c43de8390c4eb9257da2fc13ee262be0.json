{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport getWeb3 from 'web3'; // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null\n//     };\n//   }\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n//   render() {\n//     //const [fileUrl, setFileUrl] = useState(\"\");\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// }\n// const Main = () => {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null\n//     };\n//   }\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n//   render() {\n//     const [fileUrl, setFileUrl] = useState(\"\");\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [fileUrl, setFileUrl] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SiteName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      setUrl: setFileUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), \"FileUrl :\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: fileUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: fileUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionAdd, {\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionShow, {\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"NjQddmqFHvR4lx9dRByEkjhMV04=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","getWeb3","Main","fileUrl","setFileUrl"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport getWeb3 from 'web3';\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null\n//     };\n//   }\n\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n\n//   render() {\n//     //const [fileUrl, setFileUrl] = useState(\"\");\n\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n  \n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// }\n\n// const Main = () => {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null\n//     };\n//   }\n\n//   //Web3를 불러오고 state에 저장한다. this.state.web3를 통해 web3.js를 사용한다.\n//   componentWillMount() {\n//     getWeb3\n//       .then(results => {\n//         this.setState({\n//           web3: results.web3\n//         });\n\n//         this.instantiateContract();\n//       })\n//       .catch(() => {\n//         console.log(\"Error finding web3.\");\n//       });\n//   }\n\n//   //truffle-contract 모듈을 불러온다. 이 모듈은 Truffle에서 작성한 컨트랙트를 Javascript로 불러오고 사용하도록 한다.\n//   instantiateContract() {\n//     const contract = require(\"truffle-contract\");\n//   }\n\n//   render() {\n//     const [fileUrl, setFileUrl] = useState(\"\");\n\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n  \n//         <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//     );\n//   }\n// };\n\nconst Main = () => {\n  const [fileUrl, setFileUrl] = useState(\"\");\n\n  return (\n    <div>\n      \n      <SiteName />\n      <TransactionInput></TransactionInput>\n\n      <FileUpload setUrl={setFileUrl} />\n      FileUrl :{\" \"}\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {fileUrl}\n      </a>\n      <br></br>\n      <TransactionAdd>트랜잭션 추가</TransactionAdd>\n      <TransactionShow>트랜잭션 보기</TransactionShow>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,MAApB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EAEA,oBACE;IAAA,wBAEE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE,QAAC,UAAD;MAAY,MAAM,EAAEU;IAApB;MAAA;MAAA;MAAA;IAAA,QALF,eAMY,GANZ,eAOE;MAAG,IAAI,EAAED,OAAT;MAAkB,MAAM,EAAC,QAAzB;MAAkC,GAAG,EAAC,qBAAtC;MAAA,UACGA;IADH;MAAA;MAAA;MAAA;IAAA,QAPF,eAUE;MAAA;MAAA;MAAA;IAAA,QAVF,eAWE,QAAC,cAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE,QAAC,eAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAnBD;;GAAMD,I;;KAAAA,I;AAqBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}
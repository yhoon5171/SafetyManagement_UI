{"ast":null,"code":"var randomBytes = require('randombytes');\n\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\n\nvar BN = require('bn.js');\n\nvar TWENTYFOUR = new BN(24);\n\nvar MillerRabin = require('miller-rabin');\n\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null) return primes;\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n\n    for (var j = 0; j < i && res[j] <= sqrt; j++) if (k % res[j] === 0) break;\n\n    if (i !== j && res[j] <= sqrt) continue;\n    res[i++] = k;\n  }\n\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++) if (p.modn(primes[i]) === 0) {\n    if (p.cmpn(primes[i]) === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n\n  gen = new BN(gen);\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n\n    n2 = num.shrn(1);\n\n    if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n}","map":{"version":3,"names":["randomBytes","require","module","exports","findPrime","simpleSieve","fermatTest","BN","TWENTYFOUR","MillerRabin","millerRabin","ONE","TWO","FIVE","SIXTEEN","EIGHT","TEN","THREE","SEVEN","ELEVEN","FOUR","TWELVE","primes","_getPrimes","limit","res","i","k","sqrt","Math","ceil","j","p","length","modn","cmpn","red","mont","toRed","redPow","subn","fromRed","bits","gen","num","n2","bitLength","ishrn","isEven","iadd","testn","cmp","mod","shrn","test"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/diffie-hellman/lib/generatePrime.js"],"sourcesContent":["var randomBytes = require('randombytes');\r\nmodule.exports = findPrime;\r\nfindPrime.simpleSieve = simpleSieve;\r\nfindPrime.fermatTest = fermatTest;\r\nvar BN = require('bn.js');\r\nvar TWENTYFOUR = new BN(24);\r\nvar MillerRabin = require('miller-rabin');\r\nvar millerRabin = new MillerRabin();\r\nvar ONE = new BN(1);\r\nvar TWO = new BN(2);\r\nvar FIVE = new BN(5);\r\nvar SIXTEEN = new BN(16);\r\nvar EIGHT = new BN(8);\r\nvar TEN = new BN(10);\r\nvar THREE = new BN(3);\r\nvar SEVEN = new BN(7);\r\nvar ELEVEN = new BN(11);\r\nvar FOUR = new BN(4);\r\nvar TWELVE = new BN(12);\r\nvar primes = null;\r\n\r\nfunction _getPrimes() {\r\n  if (primes !== null)\r\n    return primes;\r\n\r\n  var limit = 0x100000;\r\n  var res = [];\r\n  res[0] = 2;\r\n  for (var i = 1, k = 3; k < limit; k += 2) {\r\n    var sqrt = Math.ceil(Math.sqrt(k));\r\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\r\n      if (k % res[j] === 0)\r\n        break;\r\n\r\n    if (i !== j && res[j] <= sqrt)\r\n      continue;\r\n\r\n    res[i++] = k;\r\n  }\r\n  primes = res;\r\n  return res;\r\n}\r\n\r\nfunction simpleSieve(p) {\r\n  var primes = _getPrimes();\r\n\r\n  for (var i = 0; i < primes.length; i++)\r\n    if (p.modn(primes[i]) === 0) {\r\n      if (p.cmpn(primes[i]) === 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  return true;\r\n}\r\n\r\nfunction fermatTest(p) {\r\n  var red = BN.mont(p);\r\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\r\n}\r\n\r\nfunction findPrime(bits, gen) {\r\n  if (bits < 16) {\r\n    // this is what openssl does\r\n    if (gen === 2 || gen === 5) {\r\n      return new BN([0x8c, 0x7b]);\r\n    } else {\r\n      return new BN([0x8c, 0x27]);\r\n    }\r\n  }\r\n  gen = new BN(gen);\r\n\r\n  var num, n2;\r\n\r\n  while (true) {\r\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\r\n    while (num.bitLength() > bits) {\r\n      num.ishrn(1);\r\n    }\r\n    if (num.isEven()) {\r\n      num.iadd(ONE);\r\n    }\r\n    if (!num.testn(1)) {\r\n      num.iadd(TWO);\r\n    }\r\n    if (!gen.cmp(TWO)) {\r\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\r\n        num.iadd(FOUR);\r\n      }\r\n    } else if (!gen.cmp(FIVE)) {\r\n      while (num.mod(TEN).cmp(THREE)) {\r\n        num.iadd(FOUR);\r\n      }\r\n    }\r\n    n2 = num.shrn(1);\r\n    if (simpleSieve(n2) && simpleSieve(num) &&\r\n      fermatTest(n2) && fermatTest(num) &&\r\n      millerRabin.test(n2) && millerRabin.test(num)) {\r\n      return num;\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nmodule.exports = function base64(alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  var padding = alphabet.indexOf('=') > -1;\n  var url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1;\n  return {\n    encode: function encode(input) {\n      var output = '';\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64');\n      } else {\n        output = input.toString('base64');\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_');\n      }\n\n      var pad = output.indexOf('=');\n\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad);\n      }\n\n      return output;\n    },\n    decode: function decode(input) {\n      var _iterator = _createForOfIteratorHelper(input),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var char = _step.value;\n\n          if (alphabet.indexOf(char) < 0) {\n            throw new Error('invalid base64 character');\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return Buffer.from(input, 'base64');\n    }\n  };\n};","map":{"version":3,"names":["require","Buffer","module","exports","base64","alphabet","padding","indexOf","url","encode","input","output","from","toString","replace","pad","substring","decode","char","Error"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/multibase/src/base64.js"],"sourcesContent":["'use strict'\r\nconst { Buffer } = require('buffer')\r\n\r\nmodule.exports = function base64 (alphabet) {\r\n  // The alphabet is only used to know:\r\n  //   1. If padding is enabled (must contain '=')\r\n  //   2. If the output must be url-safe (must contain '-' and '_')\r\n  //   3. If the input of the output function is valid\r\n  // The alphabets from RFC 4648 are always used.\r\n  const padding = alphabet.indexOf('=') > -1\r\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\r\n\r\n  return {\r\n    encode (input) {\r\n      let output = ''\r\n\r\n      if (typeof input === 'string') {\r\n        output = Buffer.from(input).toString('base64')\r\n      } else {\r\n        output = input.toString('base64')\r\n      }\r\n\r\n      if (url) {\r\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\r\n      }\r\n\r\n      const pad = output.indexOf('=')\r\n      if (pad > 0 && !padding) {\r\n        output = output.substring(0, pad)\r\n      }\r\n\r\n      return output\r\n    },\r\n    decode (input) {\r\n      for (const char of input) {\r\n        if (alphabet.indexOf(char) < 0) {\r\n          throw new Error('invalid base64 character')\r\n        }\r\n      }\r\n\r\n      return Buffer.from(input, 'base64')\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA;;;;AACA,eAAmBA,OAAO,CAAC,QAAD,CAA1B;AAAA,IAAQC,MAAR,YAAQA,MAAR;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAiBC,QAAjB,EAA2B;EAC1C;EACA;EACA;EACA;EACA;EACA,IAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,GAAjB,IAAwB,CAAC,CAAzC;EACA,IAAMC,GAAG,GAAGH,QAAQ,CAACE,OAAT,CAAiB,GAAjB,IAAwB,CAAC,CAAzB,IAA8BF,QAAQ,CAACE,OAAT,CAAiB,GAAjB,IAAwB,CAAC,CAAnE;EAEA,OAAO;IACLE,MADK,kBACGC,KADH,EACU;MACb,IAAIC,MAAM,GAAG,EAAb;;MAEA,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;QAC7BC,MAAM,GAAGV,MAAM,CAACW,IAAP,CAAYF,KAAZ,EAAmBG,QAAnB,CAA4B,QAA5B,CAAT;MACD,CAFD,MAEO;QACLF,MAAM,GAAGD,KAAK,CAACG,QAAN,CAAe,QAAf,CAAT;MACD;;MAED,IAAIL,GAAJ,EAAS;QACPG,MAAM,GAAGA,MAAM,CAACG,OAAP,CAAe,KAAf,EAAsB,GAAtB,EAA2BA,OAA3B,CAAmC,KAAnC,EAA0C,GAA1C,CAAT;MACD;;MAED,IAAMC,GAAG,GAAGJ,MAAM,CAACJ,OAAP,CAAe,GAAf,CAAZ;;MACA,IAAIQ,GAAG,GAAG,CAAN,IAAW,CAACT,OAAhB,EAAyB;QACvBK,MAAM,GAAGA,MAAM,CAACK,SAAP,CAAiB,CAAjB,EAAoBD,GAApB,CAAT;MACD;;MAED,OAAOJ,MAAP;IACD,CApBI;IAqBLM,MArBK,kBAqBGP,KArBH,EAqBU;MAAA,2CACMA,KADN;MAAA;;MAAA;QACb,oDAA0B;UAAA,IAAfQ,IAAe;;UACxB,IAAIb,QAAQ,CAACE,OAAT,CAAiBW,IAAjB,IAAyB,CAA7B,EAAgC;YAC9B,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;UACD;QACF;MALY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOlB,MAAM,CAACW,IAAP,CAAYF,KAAZ,EAAmB,QAAnB,CAAP;IACD;EA7BI,CAAP;AA+BD,CAxCD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst LOAD_CODEC = codeOrName => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`));\n\nclass Multicodecs {\n  constructor(options) {\n    this._codecsByName = {};\n    this._codecsByCode = {};\n    this._loadCodec = options.loadCodec || LOAD_CODEC;\n\n    for (const codec of options.codecs) {\n      this.addCodec(codec);\n    }\n  }\n\n  addCodec(codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`);\n    }\n\n    this._codecsByName[codec.name] = codec;\n    this._codecsByCode[codec.code] = codec;\n  }\n\n  removeCodec(codec) {\n    delete this._codecsByName[codec.name];\n    delete this._codecsByCode[codec.code];\n  }\n\n  async getCodec(code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode;\n\n    if (table[code]) {\n      return table[code];\n    }\n\n    const codec = await this._loadCodec(code);\n\n    if (table[code] == null) {\n      this.addCodec(codec);\n    }\n\n    return codec;\n  }\n\n  listCodecs() {\n    return Object.values(this._codecsByName);\n  }\n\n}\n\nexports.Multicodecs = Multicodecs;","map":{"version":3,"names":["Object","defineProperty","exports","value","LOAD_CODEC","codeOrName","Promise","reject","Error","Multicodecs","constructor","options","_codecsByName","_codecsByCode","_loadCodec","loadCodec","codec","codecs","addCodec","name","code","removeCodec","getCodec","table","listCodecs","values"],"sources":["C:/Users/mcnl/Desktop/gong/test/SafetyManagement_UI/client/node_modules/ipfs-core-utils/cjs/src/multicodecs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst LOAD_CODEC = codeOrName => Promise.reject(new Error(`No codec found for \"${ codeOrName }\"`));\nclass Multicodecs {\n  constructor(options) {\n    this._codecsByName = {};\n    this._codecsByCode = {};\n    this._loadCodec = options.loadCodec || LOAD_CODEC;\n    for (const codec of options.codecs) {\n      this.addCodec(codec);\n    }\n  }\n  addCodec(codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${ codec.name }\"`);\n    }\n    this._codecsByName[codec.name] = codec;\n    this._codecsByCode[codec.code] = codec;\n  }\n  removeCodec(codec) {\n    delete this._codecsByName[codec.name];\n    delete this._codecsByCode[codec.code];\n  }\n  async getCodec(code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode;\n    if (table[code]) {\n      return table[code];\n    }\n    const codec = await this._loadCodec(code);\n    if (table[code] == null) {\n      this.addCodec(codec);\n    }\n    return codec;\n  }\n  listCodecs() {\n    return Object.values(this._codecsByName);\n  }\n}\n\nexports.Multicodecs = Multicodecs;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,MAAMC,UAAU,GAAGC,UAAU,IAAIC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAW,uBAAuBH,UAAY,GAA9C,CAAf,CAAjC;;AACA,MAAMI,WAAN,CAAkB;EAChBC,WAAW,CAACC,OAAD,EAAU;IACnB,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKC,UAAL,GAAkBH,OAAO,CAACI,SAAR,IAAqBX,UAAvC;;IACA,KAAK,MAAMY,KAAX,IAAoBL,OAAO,CAACM,MAA5B,EAAoC;MAClC,KAAKC,QAAL,CAAcF,KAAd;IACD;EACF;;EACDE,QAAQ,CAACF,KAAD,EAAQ;IACd,IAAI,KAAKJ,aAAL,CAAmBI,KAAK,CAACG,IAAzB,KAAkC,KAAKN,aAAL,CAAmBG,KAAK,CAACI,IAAzB,CAAtC,EAAsE;MACpE,MAAM,IAAIZ,KAAJ,CAAW,sCAAsCQ,KAAK,CAACG,IAAM,GAA7D,CAAN;IACD;;IACD,KAAKP,aAAL,CAAmBI,KAAK,CAACG,IAAzB,IAAiCH,KAAjC;IACA,KAAKH,aAAL,CAAmBG,KAAK,CAACI,IAAzB,IAAiCJ,KAAjC;EACD;;EACDK,WAAW,CAACL,KAAD,EAAQ;IACjB,OAAO,KAAKJ,aAAL,CAAmBI,KAAK,CAACG,IAAzB,CAAP;IACA,OAAO,KAAKN,aAAL,CAAmBG,KAAK,CAACI,IAAzB,CAAP;EACD;;EACa,MAARE,QAAQ,CAACF,IAAD,EAAO;IACnB,MAAMG,KAAK,GAAG,OAAOH,IAAP,KAAgB,QAAhB,GAA2B,KAAKR,aAAhC,GAAgD,KAAKC,aAAnE;;IACA,IAAIU,KAAK,CAACH,IAAD,CAAT,EAAiB;MACf,OAAOG,KAAK,CAACH,IAAD,CAAZ;IACD;;IACD,MAAMJ,KAAK,GAAG,MAAM,KAAKF,UAAL,CAAgBM,IAAhB,CAApB;;IACA,IAAIG,KAAK,CAACH,IAAD,CAAL,IAAe,IAAnB,EAAyB;MACvB,KAAKF,QAAL,CAAcF,KAAd;IACD;;IACD,OAAOA,KAAP;EACD;;EACDQ,UAAU,GAAG;IACX,OAAOxB,MAAM,CAACyB,MAAP,CAAc,KAAKb,aAAnB,CAAP;EACD;;AAjCe;;AAoClBV,OAAO,CAACO,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nconst decodePin = _ref => {\n  let {\n    Name: name,\n    Status: status,\n    Cid: cid$1\n  } = _ref;\n  return {\n    cid: cid.CID.parse(cid$1),\n    name,\n    status\n  };\n};\n\nconst encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n\nconst encodeCID = cid$1 => {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid$1}`);\n  }\n};\n\nconst encodeQuery = _ref2 => {\n  let {\n    service,\n    cid,\n    name,\n    status,\n    all\n  } = _ref2;\n  const query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n\n  return query;\n};\n\nconst encodeAddParams = _ref3 => {\n  let {\n    cid,\n    service,\n    background,\n    name,\n    origins\n  } = _ref3;\n  const params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n\n  return params;\n};\n\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","toUrlSearchParams","decodePin","Name","name","Status","status","Cid","cid$1","CID","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","append","encodeAddParams","background","origins","params","arg","origin"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/pin/remote/utils.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar cid = require('multiformats/cid');\r\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\r\n\r\nconst decodePin = ({\r\n  Name: name,\r\n  Status: status,\r\n  Cid: cid$1\r\n}) => {\r\n  return {\r\n    cid: cid.CID.parse(cid$1),\r\n    name,\r\n    status\r\n  };\r\n};\r\nconst encodeService = service => {\r\n  if (typeof service === 'string' && service !== '') {\r\n    return service;\r\n  } else {\r\n    throw new TypeError('service name must be passed');\r\n  }\r\n};\r\nconst encodeCID = cid$1 => {\r\n  if (cid.CID.asCID(cid$1)) {\r\n    return cid$1.toString();\r\n  } else {\r\n    throw new TypeError(`CID instance expected instead of ${ typeof cid$1 }`);\r\n  }\r\n};\r\nconst encodeQuery = ({service, cid, name, status, all}) => {\r\n  const query = toUrlSearchParams.toUrlSearchParams({\r\n    service: encodeService(service),\r\n    name,\r\n    force: all ? true : undefined\r\n  });\r\n  if (cid) {\r\n    for (const value of cid) {\r\n      query.append('cid', encodeCID(value));\r\n    }\r\n  }\r\n  if (status) {\r\n    for (const value of status) {\r\n      query.append('status', value);\r\n    }\r\n  }\r\n  return query;\r\n};\r\nconst encodeAddParams = ({cid, service, background, name, origins}) => {\r\n  const params = toUrlSearchParams.toUrlSearchParams({\r\n    arg: encodeCID(cid),\r\n    service: encodeService(service),\r\n    name,\r\n    background: background ? true : undefined\r\n  });\r\n  if (origins) {\r\n    for (const origin of origins) {\r\n      params.append('origin', origin.toString());\r\n    }\r\n  }\r\n  return params;\r\n};\r\n\r\nexports.decodePin = decodePin;\r\nexports.encodeAddParams = encodeAddParams;\r\nexports.encodeCID = encodeCID;\r\nexports.encodeQuery = encodeQuery;\r\nexports.encodeService = encodeService;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mCAAD,CAA/B;;AAEA,MAAME,SAAS,GAAG,QAIZ;EAAA,IAJa;IACjBC,IAAI,EAAEC,IADW;IAEjBC,MAAM,EAAEC,MAFS;IAGjBC,GAAG,EAAEC;EAHY,CAIb;EACJ,OAAO;IACLT,GAAG,EAAEA,GAAG,CAACU,GAAJ,CAAQC,KAAR,CAAcF,KAAd,CADA;IAELJ,IAFK;IAGLE;EAHK,CAAP;AAKD,CAVD;;AAWA,MAAMK,aAAa,GAAGC,OAAO,IAAI;EAC/B,IAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,EAA/C,EAAmD;IACjD,OAAOA,OAAP;EACD,CAFD,MAEO;IACL,MAAM,IAAIC,SAAJ,CAAc,6BAAd,CAAN;EACD;AACF,CAND;;AAOA,MAAMC,SAAS,GAAGN,KAAK,IAAI;EACzB,IAAIT,GAAG,CAACU,GAAJ,CAAQM,KAAR,CAAcP,KAAd,CAAJ,EAA0B;IACxB,OAAOA,KAAK,CAACQ,QAAN,EAAP;EACD,CAFD,MAEO;IACL,MAAM,IAAIH,SAAJ,CAAe,oCAAoC,OAAOL,KAAO,EAAjE,CAAN;EACD;AACF,CAND;;AAOA,MAAMS,WAAW,GAAG,SAAuC;EAAA,IAAtC;IAACL,OAAD;IAAUb,GAAV;IAAeK,IAAf;IAAqBE,MAArB;IAA6BY;EAA7B,CAAsC;EACzD,MAAMC,KAAK,GAAGlB,iBAAiB,CAACA,iBAAlB,CAAoC;IAChDW,OAAO,EAAED,aAAa,CAACC,OAAD,CAD0B;IAEhDR,IAFgD;IAGhDgB,KAAK,EAAEF,GAAG,GAAG,IAAH,GAAUG;EAH4B,CAApC,CAAd;;EAKA,IAAItB,GAAJ,EAAS;IACP,KAAK,MAAMD,KAAX,IAAoBC,GAApB,EAAyB;MACvBoB,KAAK,CAACG,MAAN,CAAa,KAAb,EAAoBR,SAAS,CAAChB,KAAD,CAA7B;IACD;EACF;;EACD,IAAIQ,MAAJ,EAAY;IACV,KAAK,MAAMR,KAAX,IAAoBQ,MAApB,EAA4B;MAC1Ba,KAAK,CAACG,MAAN,CAAa,QAAb,EAAuBxB,KAAvB;IACD;EACF;;EACD,OAAOqB,KAAP;AACD,CAjBD;;AAkBA,MAAMI,eAAe,GAAG,SAA+C;EAAA,IAA9C;IAACxB,GAAD;IAAMa,OAAN;IAAeY,UAAf;IAA2BpB,IAA3B;IAAiCqB;EAAjC,CAA8C;EACrE,MAAMC,MAAM,GAAGzB,iBAAiB,CAACA,iBAAlB,CAAoC;IACjD0B,GAAG,EAAEb,SAAS,CAACf,GAAD,CADmC;IAEjDa,OAAO,EAAED,aAAa,CAACC,OAAD,CAF2B;IAGjDR,IAHiD;IAIjDoB,UAAU,EAAEA,UAAU,GAAG,IAAH,GAAUH;EAJiB,CAApC,CAAf;;EAMA,IAAII,OAAJ,EAAa;IACX,KAAK,MAAMG,MAAX,IAAqBH,OAArB,EAA8B;MAC5BC,MAAM,CAACJ,MAAP,CAAc,QAAd,EAAwBM,MAAM,CAACZ,QAAP,EAAxB;IACD;EACF;;EACD,OAAOU,MAAP;AACD,CAbD;;AAeA7B,OAAO,CAACK,SAAR,GAAoBA,SAApB;AACAL,OAAO,CAAC0B,eAAR,GAA0BA,eAA1B;AACA1B,OAAO,CAACiB,SAAR,GAAoBA,SAApB;AACAjB,OAAO,CAACoB,WAAR,GAAsBA,WAAtB;AACApB,OAAO,CAACc,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file ENS.js\r\n *\r\n * @author Samuel Furter <samuel@ethereum.org>\r\n * @date 2018\r\n */\n\"use strict\";\n\nvar config = require('./config');\n\nvar Registry = require('./contracts/Registry');\n\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\n/**\r\n * Constructs a new instance of ENS\r\n *\r\n * @method ENS\r\n * @param {Object} eth\r\n * @constructor\r\n */\n\n\nfunction ENS(eth) {\n  this.eth = eth;\n}\n\nObject.defineProperty(ENS.prototype, 'registry', {\n  get: function () {\n    return new Registry(this);\n  },\n  enumerable: true\n});\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\n  get: function () {\n    return new ResolverMethodHandler(this.registry);\n  },\n  enumerable: true\n});\n/**\r\n * @param {string} name\r\n * @returns {Promise<Contract>}\r\n */\n\nENS.prototype.resolver = function (name) {\n  return this.registry.resolver(name);\n};\n/**\r\n * Returns the address record associated with a name.\r\n *\r\n * @method getAddress\r\n * @param {string} name\r\n * @param {function} callback\r\n * @return {eventifiedPromise}\r\n */\n\n\nENS.prototype.getAddress = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n/**\r\n * Sets a new address\r\n *\r\n * @method setAddress\r\n * @param {string} name\r\n * @param {string} address\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n};\n/**\r\n * Returns the public key\r\n *\r\n * @method getPubkey\r\n * @param {string} name\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.getPubkey = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\n};\n/**\r\n * Set the new public key\r\n *\r\n * @method setPubkey\r\n * @param {string} name\r\n * @param {string} x\r\n * @param {string} y\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n};\n/**\r\n * Returns the content\r\n *\r\n * @method getContent\r\n * @param {string} name\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.getContent = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n/**\r\n * Set the content\r\n *\r\n * @method setContent\r\n * @param {string} name\r\n * @param {string} hash\r\n * @param {function} callback\r\n * @param {Object} sendOptions\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n};\n/**\r\n * Get the multihash\r\n *\r\n * @method getMultihash\r\n * @param {string} name\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.getMultihash = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n/**\r\n * Set the multihash\r\n *\r\n * @method setMultihash\r\n * @param {string} name\r\n * @param {string} hash\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n};\n/**\r\n * Checks if the current used network is synced and looks for ENS support there.\r\n * Throws an error if not.\r\n *\r\n * @returns {Promise<Block>}\r\n */\n\n\nENS.prototype.checkNetwork = function () {\n  var self = this;\n  return self.eth.getBlock('latest').then(function (block) {\n    var headAge = new Date() / 1000 - block.timestamp;\n\n    if (headAge > 3600) {\n      throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n    }\n\n    return self.eth.net.getNetworkType();\n  }).then(function (networkType) {\n    var addr = config.addresses[networkType];\n\n    if (typeof addr === 'undefined') {\n      throw new Error(\"ENS is not supported on network \" + networkType);\n    }\n\n    return addr;\n  });\n};\n\nmodule.exports = ENS;","map":{"version":3,"names":["config","require","Registry","ResolverMethodHandler","ENS","eth","Object","defineProperty","prototype","get","enumerable","registry","resolver","name","getAddress","callback","resolverMethodHandler","method","call","setAddress","address","sendOptions","send","getPubkey","setPubkey","x","y","getContent","setContent","hash","getMultihash","setMultihash","checkNetwork","self","getBlock","then","block","headAge","Date","timestamp","Error","net","getNetworkType","networkType","addr","addresses","module","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/truffle-contract/node_modules/web3-eth-ens/src/ENS.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file ENS.js\r\n *\r\n * @author Samuel Furter <samuel@ethereum.org>\r\n * @date 2018\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar config = require('./config');\r\nvar Registry = require('./contracts/Registry');\r\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\r\n\r\n/**\r\n * Constructs a new instance of ENS\r\n *\r\n * @method ENS\r\n * @param {Object} eth\r\n * @constructor\r\n */\r\nfunction ENS(eth) {\r\n    this.eth = eth;\r\n}\r\n\r\nObject.defineProperty(ENS.prototype, 'registry', {\r\n    get: function () {\r\n        return new Registry(this);\r\n    },\r\n    enumerable: true\r\n});\r\n\r\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\r\n    get: function () {\r\n        return new ResolverMethodHandler(this.registry);\r\n    },\r\n    enumerable: true\r\n});\r\n\r\n/**\r\n * @param {string} name\r\n * @returns {Promise<Contract>}\r\n */\r\nENS.prototype.resolver = function (name) {\r\n    return this.registry.resolver(name);\r\n};\r\n\r\n/**\r\n * Returns the address record associated with a name.\r\n *\r\n * @method getAddress\r\n * @param {string} name\r\n * @param {function} callback\r\n * @return {eventifiedPromise}\r\n */\r\nENS.prototype.getAddress = function (name, callback) {\r\n    return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\r\n};\r\n\r\n/**\r\n * Sets a new address\r\n *\r\n * @method setAddress\r\n * @param {string} name\r\n * @param {string} address\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\r\n    return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\r\n};\r\n\r\n/**\r\n * Returns the public key\r\n *\r\n * @method getPubkey\r\n * @param {string} name\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.getPubkey = function (name, callback) {\r\n    return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\r\n};\r\n\r\n/**\r\n * Set the new public key\r\n *\r\n * @method setPubkey\r\n * @param {string} name\r\n * @param {string} x\r\n * @param {string} y\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\r\n    return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\r\n};\r\n\r\n/**\r\n * Returns the content\r\n *\r\n * @method getContent\r\n * @param {string} name\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.getContent = function (name, callback) {\r\n    return this.resolverMethodHandler.method(name, 'content', []).call(callback);\r\n};\r\n\r\n/**\r\n * Set the content\r\n *\r\n * @method setContent\r\n * @param {string} name\r\n * @param {string} hash\r\n * @param {function} callback\r\n * @param {Object} sendOptions\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\r\n    return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\r\n};\r\n\r\n/**\r\n * Get the multihash\r\n *\r\n * @method getMultihash\r\n * @param {string} name\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.getMultihash = function (name, callback) {\r\n    return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\r\n};\r\n\r\n/**\r\n * Set the multihash\r\n *\r\n * @method setMultihash\r\n * @param {string} name\r\n * @param {string} hash\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\r\n    return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\r\n};\r\n\r\n/**\r\n * Checks if the current used network is synced and looks for ENS support there.\r\n * Throws an error if not.\r\n *\r\n * @returns {Promise<Block>}\r\n */\r\nENS.prototype.checkNetwork = function () {\r\n    var self = this;\r\n    return self.eth.getBlock('latest').then(function (block) {\r\n        var headAge = new Date() / 1000 - block.timestamp;\r\n        if (headAge > 3600) {\r\n            throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\r\n        }\r\n        return self.eth.net.getNetworkType();\r\n    }).then(function (networkType) {\r\n        var addr = config.addresses[networkType];\r\n        if (typeof addr === 'undefined') {\r\n            throw new Error(\"ENS is not supported on network \" + networkType);\r\n        }\r\n\r\n        return addr;\r\n    });\r\n};\r\n\r\nmodule.exports = ENS;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
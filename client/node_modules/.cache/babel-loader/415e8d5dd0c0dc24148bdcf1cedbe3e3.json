{"ast":null,"code":"const crypto = require('crypto');\n\nconst MAX_VALUE = 0x7fffffff;\nconst DEFAULT_PROMISE_INTERVAL = 5000;\n/* eslint-disable camelcase */\n\nfunction checkAndInit(key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & N - 1) !== 0) throw Error('N must be > 0 and a power of 2');\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large');\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large');\n  let XY = Buffer.alloc(256 * r);\n  let V = Buffer.alloc(128 * r * N); // pseudo global\n\n  let B32 = new Int32Array(16); // salsa20_8\n\n  let x = new Int32Array(16); // salsa20_8\n\n  let _X = Buffer.alloc(64); // blockmix_salsa8\n  // pseudo global\n\n\n  let B = crypto.pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256');\n  let tickCallback;\n\n  if (progressCallback) {\n    let totalOps = p * N * 2;\n    let currentOp = 0;\n\n    tickCallback = function () {\n      ++currentOp; // send progress notifications once every 1,000 ops\n\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: currentOp / totalOps * 100.0\n        });\n      }\n    };\n  }\n\n  return {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  };\n}\n\nasync function smix(B, Bi, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval) {\n  promiseInterval = promiseInterval || DEFAULT_PROMISE_INTERVAL;\n  let Xi = 0;\n  let Yi = 128 * r;\n  let i;\n  B.copy(XY, Xi, Bi, Bi + Yi);\n\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi);\n\n    if (i % promiseInterval === 0) {\n      await new Promise(resolve => setImmediate(resolve));\n    }\n\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n    if (tickCallback) tickCallback();\n  }\n\n  for (i = 0; i < N; i++) {\n    let offset = Xi + (2 * r - 1) * 64;\n    let j = XY.readUInt32LE(offset) & N - 1;\n    blockxor(V, j * Yi, XY, Xi, Yi);\n\n    if (i % promiseInterval === 0) {\n      await new Promise(resolve => setImmediate(resolve));\n    }\n\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n    if (tickCallback) tickCallback();\n  }\n\n  XY.copy(B, Bi, Xi, Xi + Yi);\n}\n\nfunction smixSync(B, Bi, r, N, V, XY, _X, B32, x, tickCallback) {\n  let Xi = 0;\n  let Yi = 128 * r;\n  let i;\n  B.copy(XY, Xi, Bi, Bi + Yi);\n\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi);\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n    if (tickCallback) tickCallback();\n  }\n\n  for (i = 0; i < N; i++) {\n    let offset = Xi + (2 * r - 1) * 64;\n    let j = XY.readUInt32LE(offset) & N - 1;\n    blockxor(V, j * Yi, XY, Xi, Yi);\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n    if (tickCallback) tickCallback();\n  }\n\n  XY.copy(B, Bi, Xi, Xi + Yi);\n}\n\nfunction blockmix_salsa8(BY, Bi, Yi, r, _X, B32, x) {\n  let i;\n  arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64);\n\n  for (i = 0; i < 2 * r; i++) {\n    blockxor(BY, i * 64, _X, 0, 64);\n    salsa20_8(_X, B32, x);\n    arraycopy(_X, 0, BY, Yi + i * 64, 64);\n  }\n\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + i * 2 * 64, BY, Bi + i * 64, 64);\n  }\n\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64);\n  }\n}\n\nfunction R(a, b) {\n  return a << b | a >>> 32 - b;\n}\n\nfunction salsa20_8(B, B32, x) {\n  let i;\n\n  for (i = 0; i < 16; i++) {\n    B32[i] = (B[i * 4 + 0] & 0xff) << 0;\n    B32[i] |= (B[i * 4 + 1] & 0xff) << 8;\n    B32[i] |= (B[i * 4 + 2] & 0xff) << 16;\n    B32[i] |= (B[i * 4 + 3] & 0xff) << 24; // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n  }\n\n  arraycopy(B32, 0, x, 0, 16);\n\n  for (i = 8; i > 0; i -= 2) {\n    x[4] ^= R(x[0] + x[12], 7);\n    x[8] ^= R(x[4] + x[0], 9);\n    x[12] ^= R(x[8] + x[4], 13);\n    x[0] ^= R(x[12] + x[8], 18);\n    x[9] ^= R(x[5] + x[1], 7);\n    x[13] ^= R(x[9] + x[5], 9);\n    x[1] ^= R(x[13] + x[9], 13);\n    x[5] ^= R(x[1] + x[13], 18);\n    x[14] ^= R(x[10] + x[6], 7);\n    x[2] ^= R(x[14] + x[10], 9);\n    x[6] ^= R(x[2] + x[14], 13);\n    x[10] ^= R(x[6] + x[2], 18);\n    x[3] ^= R(x[15] + x[11], 7);\n    x[7] ^= R(x[3] + x[15], 9);\n    x[11] ^= R(x[7] + x[3], 13);\n    x[15] ^= R(x[11] + x[7], 18);\n    x[1] ^= R(x[0] + x[3], 7);\n    x[2] ^= R(x[1] + x[0], 9);\n    x[3] ^= R(x[2] + x[1], 13);\n    x[0] ^= R(x[3] + x[2], 18);\n    x[6] ^= R(x[5] + x[4], 7);\n    x[7] ^= R(x[6] + x[5], 9);\n    x[4] ^= R(x[7] + x[6], 13);\n    x[5] ^= R(x[4] + x[7], 18);\n    x[11] ^= R(x[10] + x[9], 7);\n    x[8] ^= R(x[11] + x[10], 9);\n    x[9] ^= R(x[8] + x[11], 13);\n    x[10] ^= R(x[9] + x[8], 18);\n    x[12] ^= R(x[15] + x[14], 7);\n    x[13] ^= R(x[12] + x[15], 9);\n    x[14] ^= R(x[13] + x[12], 13);\n    x[15] ^= R(x[14] + x[13], 18);\n  }\n\n  for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i];\n\n  for (i = 0; i < 16; i++) {\n    let bi = i * 4;\n    B[bi + 0] = B32[i] >> 0 & 0xff;\n    B[bi + 1] = B32[i] >> 8 & 0xff;\n    B[bi + 2] = B32[i] >> 16 & 0xff;\n    B[bi + 3] = B32[i] >> 24 & 0xff; // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n  }\n} // naive approach... going back to loop unrolling may yield additional performance\n\n\nfunction blockxor(S, Si, D, Di, len) {\n  for (let i = 0; i < len; i++) {\n    D[Di + i] ^= S[Si + i];\n  }\n}\n\nfunction arraycopy(src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length);\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++];\n    }\n  }\n}\n\nmodule.exports = {\n  checkAndInit,\n  smix,\n  smixSync\n};","map":{"version":3,"names":["crypto","require","MAX_VALUE","DEFAULT_PROMISE_INTERVAL","checkAndInit","key","salt","N","r","p","dkLen","progressCallback","Error","XY","Buffer","alloc","V","B32","Int32Array","x","_X","B","pbkdf2Sync","tickCallback","totalOps","currentOp","current","total","percent","smix","Bi","promiseInterval","Xi","Yi","i","copy","Promise","resolve","setImmediate","blockmix_salsa8","offset","j","readUInt32LE","blockxor","smixSync","BY","arraycopy","salsa20_8","R","a","b","bi","S","Si","D","Di","len","src","srcPos","dest","destPos","length","isBuffer","module","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/scryptsy/lib/utils.js"],"sourcesContent":["const crypto = require('crypto')\r\nconst MAX_VALUE = 0x7fffffff\r\nconst DEFAULT_PROMISE_INTERVAL = 5000\r\n/* eslint-disable camelcase */\r\n\r\nfunction checkAndInit (key, salt, N, r, p, dkLen, progressCallback) {\r\n  if (N === 0 || (N & (N - 1)) !== 0) throw Error('N must be > 0 and a power of 2')\r\n\r\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large')\r\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large')\r\n\r\n  let XY = Buffer.alloc(256 * r)\r\n  let V = Buffer.alloc(128 * r * N)\r\n\r\n  // pseudo global\r\n  let B32 = new Int32Array(16) // salsa20_8\r\n  let x = new Int32Array(16) // salsa20_8\r\n  let _X = Buffer.alloc(64) // blockmix_salsa8\r\n\r\n  // pseudo global\r\n  let B = crypto.pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256')\r\n\r\n  let tickCallback\r\n  if (progressCallback) {\r\n    let totalOps = p * N * 2\r\n    let currentOp = 0\r\n\r\n    tickCallback = function () {\r\n      ++currentOp\r\n\r\n      // send progress notifications once every 1,000 ops\r\n      if (currentOp % 1000 === 0) {\r\n        progressCallback({\r\n          current: currentOp,\r\n          total: totalOps,\r\n          percent: (currentOp / totalOps) * 100.0\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    XY,\r\n    V,\r\n    B32,\r\n    x,\r\n    _X,\r\n    B,\r\n    tickCallback\r\n  }\r\n}\r\n\r\nasync function smix (B, Bi, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval) {\r\n  promiseInterval = promiseInterval || DEFAULT_PROMISE_INTERVAL\r\n  let Xi = 0\r\n  let Yi = 128 * r\r\n  let i\r\n\r\n  B.copy(XY, Xi, Bi, Bi + Yi)\r\n\r\n  for (i = 0; i < N; i++) {\r\n    XY.copy(V, i * Yi, Xi, Xi + Yi)\r\n    if (i % promiseInterval === 0) {\r\n      await new Promise(resolve => setImmediate(resolve))\r\n    }\r\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\r\n\r\n    if (tickCallback) tickCallback()\r\n  }\r\n\r\n  for (i = 0; i < N; i++) {\r\n    let offset = Xi + (2 * r - 1) * 64\r\n    let j = XY.readUInt32LE(offset) & (N - 1)\r\n    blockxor(V, j * Yi, XY, Xi, Yi)\r\n    if (i % promiseInterval === 0) {\r\n      await new Promise(resolve => setImmediate(resolve))\r\n    }\r\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\r\n\r\n    if (tickCallback) tickCallback()\r\n  }\r\n\r\n  XY.copy(B, Bi, Xi, Xi + Yi)\r\n}\r\n\r\nfunction smixSync (B, Bi, r, N, V, XY, _X, B32, x, tickCallback) {\r\n  let Xi = 0\r\n  let Yi = 128 * r\r\n  let i\r\n\r\n  B.copy(XY, Xi, Bi, Bi + Yi)\r\n\r\n  for (i = 0; i < N; i++) {\r\n    XY.copy(V, i * Yi, Xi, Xi + Yi)\r\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\r\n\r\n    if (tickCallback) tickCallback()\r\n  }\r\n\r\n  for (i = 0; i < N; i++) {\r\n    let offset = Xi + (2 * r - 1) * 64\r\n    let j = XY.readUInt32LE(offset) & (N - 1)\r\n    blockxor(V, j * Yi, XY, Xi, Yi)\r\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\r\n\r\n    if (tickCallback) tickCallback()\r\n  }\r\n\r\n  XY.copy(B, Bi, Xi, Xi + Yi)\r\n}\r\n\r\nfunction blockmix_salsa8 (BY, Bi, Yi, r, _X, B32, x) {\r\n  let i\r\n\r\n  arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64)\r\n\r\n  for (i = 0; i < 2 * r; i++) {\r\n    blockxor(BY, i * 64, _X, 0, 64)\r\n    salsa20_8(_X, B32, x)\r\n    arraycopy(_X, 0, BY, Yi + (i * 64), 64)\r\n  }\r\n\r\n  for (i = 0; i < r; i++) {\r\n    arraycopy(BY, Yi + (i * 2) * 64, BY, Bi + (i * 64), 64)\r\n  }\r\n\r\n  for (i = 0; i < r; i++) {\r\n    arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64)\r\n  }\r\n}\r\n\r\nfunction R (a, b) {\r\n  return (a << b) | (a >>> (32 - b))\r\n}\r\n\r\nfunction salsa20_8 (B, B32, x) {\r\n  let i\r\n\r\n  for (i = 0; i < 16; i++) {\r\n    B32[i] = (B[i * 4 + 0] & 0xff) << 0\r\n    B32[i] |= (B[i * 4 + 1] & 0xff) << 8\r\n    B32[i] |= (B[i * 4 + 2] & 0xff) << 16\r\n    B32[i] |= (B[i * 4 + 3] & 0xff) << 24\r\n    // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\r\n  }\r\n\r\n  arraycopy(B32, 0, x, 0, 16)\r\n\r\n  for (i = 8; i > 0; i -= 2) {\r\n    x[4] ^= R(x[0] + x[12], 7)\r\n    x[8] ^= R(x[4] + x[0], 9)\r\n    x[12] ^= R(x[8] + x[4], 13)\r\n    x[0] ^= R(x[12] + x[8], 18)\r\n    x[9] ^= R(x[5] + x[1], 7)\r\n    x[13] ^= R(x[9] + x[5], 9)\r\n    x[1] ^= R(x[13] + x[9], 13)\r\n    x[5] ^= R(x[1] + x[13], 18)\r\n    x[14] ^= R(x[10] + x[6], 7)\r\n    x[2] ^= R(x[14] + x[10], 9)\r\n    x[6] ^= R(x[2] + x[14], 13)\r\n    x[10] ^= R(x[6] + x[2], 18)\r\n    x[3] ^= R(x[15] + x[11], 7)\r\n    x[7] ^= R(x[3] + x[15], 9)\r\n    x[11] ^= R(x[7] + x[3], 13)\r\n    x[15] ^= R(x[11] + x[7], 18)\r\n    x[1] ^= R(x[0] + x[3], 7)\r\n    x[2] ^= R(x[1] + x[0], 9)\r\n    x[3] ^= R(x[2] + x[1], 13)\r\n    x[0] ^= R(x[3] + x[2], 18)\r\n    x[6] ^= R(x[5] + x[4], 7)\r\n    x[7] ^= R(x[6] + x[5], 9)\r\n    x[4] ^= R(x[7] + x[6], 13)\r\n    x[5] ^= R(x[4] + x[7], 18)\r\n    x[11] ^= R(x[10] + x[9], 7)\r\n    x[8] ^= R(x[11] + x[10], 9)\r\n    x[9] ^= R(x[8] + x[11], 13)\r\n    x[10] ^= R(x[9] + x[8], 18)\r\n    x[12] ^= R(x[15] + x[14], 7)\r\n    x[13] ^= R(x[12] + x[15], 9)\r\n    x[14] ^= R(x[13] + x[12], 13)\r\n    x[15] ^= R(x[14] + x[13], 18)\r\n  }\r\n\r\n  for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i]\r\n\r\n  for (i = 0; i < 16; i++) {\r\n    let bi = i * 4\r\n    B[bi + 0] = (B32[i] >> 0 & 0xff)\r\n    B[bi + 1] = (B32[i] >> 8 & 0xff)\r\n    B[bi + 2] = (B32[i] >> 16 & 0xff)\r\n    B[bi + 3] = (B32[i] >> 24 & 0xff)\r\n    // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\r\n  }\r\n}\r\n\r\n// naive approach... going back to loop unrolling may yield additional performance\r\nfunction blockxor (S, Si, D, Di, len) {\r\n  for (let i = 0; i < len; i++) {\r\n    D[Di + i] ^= S[Si + i]\r\n  }\r\n}\r\n\r\nfunction arraycopy (src, srcPos, dest, destPos, length) {\r\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\r\n    src.copy(dest, destPos, srcPos, srcPos + length)\r\n  } else {\r\n    while (length--) {\r\n      dest[destPos++] = src[srcPos++]\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  checkAndInit,\r\n  smix,\r\n  smixSync\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
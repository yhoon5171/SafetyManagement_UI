{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport { useEffect } from \"react\"; // const App = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {// render() {\n  //   return (\n  //     <div>\n  //       <input type=\"text\" placeholder=\"Type\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Name\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Time\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Registrant\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"File Type\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"File Description\"></input>\n  //       <br></br>\n  //       <p>Your account: {this.state.account}</p>\n  //       <br></br>\n  //       <button onClick={() => this.sendTransaction()}>\n  //         트랜잭션 추가\n  //       </button>\n  //       <br></br>\n  //       <p>{this.state.ttype}</p>\n  //     </div>\n  //   )\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      myAccount: null,\n      transactionInstance: null,\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(\"http://127.0.0.1:8545\");\n    const accounts = await web3.eth.getAccounts();\n    console.log(web3);\n    console.log(accounts);\n    this.setState({\n      account: accounts[0]\n    }); //this.instantiateContract();\n  } // instantiateContract() {\n  //   const contract = require(\"truffle-contract\");\n  //   const transaction = contract(TransactionContract);\n  //   transaction.setProvider(this.state.web3.currentProvider);\n  //   this.state.web3.eth.getAccounts((error, accounts) => {\n  //     if (!error){\n  //       transaction.deployed().then(instance => {\n  //         this.setState({transactionInstance: instance, myAccount: accounts[0]});\n  //         this.viewTransaction();\n  //       })\n  //     }\n  //   })\n  // }\n  // sendTransaction() {\n  //   this.state.transactionInstance.sendTransaction({\n  //     from: this.state.myAvvount,\n  //     gas: 900000\n  //   })\n  // }\n  // //ttype에다가 일단 transaction 정보 다 넣기\n  // viewTransaction() {\n  //   this.state.transactionInstance.viewTransaction.then(result => {\n  //     this.setState ({ttype: result})\n  //   })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: true,\n      children: [/*#__PURE__*/_jsxDEV(SiteName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionAdd, {\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionShow, {\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData()\n//   }\n//   async loadBlockchainData() {\n//     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//     const accounts = await web3.eth.getAccounts()\n//     this.setState({ account: accounts[0] })\n//   }\n//   constructor(props) {\n//     super(props)\n//     this.state = { account: '' }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//   )};\n// }\n// export default App;","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","useEffect","App","constructor","props","state","web3","myAccount","transactionInstance","ttype","name","timestamp","ipfs_hash","registrant","responsible_manager","file_type","file_description","componentWillMount","loadBlockchainData","accounts","eth","getAccounts","console","log","setState","account","render"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\n\n// const App = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      web3: null,\n      myAccount: null,\n      transactionInstance: null,\n\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(\"http://127.0.0.1:8545\");\n    const accounts = await web3.eth.getAccounts();\n    console.log(web3);\n    console.log(accounts);\n    this.setState({ account: accounts[0] });\n    //this.instantiateContract();\n  }\n\n  // instantiateContract() {\n  //   const contract = require(\"truffle-contract\");\n  //   const transaction = contract(TransactionContract);\n  //   transaction.setProvider(this.state.web3.currentProvider);\n\n  //   this.state.web3.eth.getAccounts((error, accounts) => {\n  //     if (!error){\n  //       transaction.deployed().then(instance => {\n  //         this.setState({transactionInstance: instance, myAccount: accounts[0]});\n  //         this.viewTransaction();\n  //       })\n  //     }\n  //   })\n  // }\n\n  // sendTransaction() {\n  //   this.state.transactionInstance.sendTransaction({\n  //     from: this.state.myAvvount,\n  //     gas: 900000\n  //   })\n  // }\n\n  // //ttype에다가 일단 transaction 정보 다 넣기\n  // viewTransaction() {\n  //   this.state.transactionInstance.viewTransaction.then(result => {\n  //     this.setState ({ttype: result})\n  //   })\n  // }\n\n  render() {\n    return (\n      <div className>\n        <SiteName />\n        <TransactionInput></TransactionInput>\n\n        {/* <FileUpload setUrl={setFileUrl} />\n        FileUrl :{\" \"}\n        <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          {fileUrl}\n        </a> */}\n        <p>Your account: {this.state.account}</p>\n        <br></br>\n        <TransactionAdd>트랜잭션 추가</TransactionAdd>\n        <TransactionShow>트랜잭션 보기</TransactionShow>\n      </div>\n  )};\n\n  // render() {\n  //   return (\n  //     <div>\n  //       <input type=\"text\" placeholder=\"Type\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Name\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Time\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Registrant\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"File Type\"></input>\n  //       <br></br>\n  //       <input type=\"text\" placeholder=\"File Description\"></input>\n  //       <br></br>\n        \n  //       <p>Your account: {this.state.account}</p>\n  //       <br></br>\n\n  //       <button onClick={() => this.sendTransaction()}>\n  //         트랜잭션 추가\n  //       </button>\n  //       <br></br>\n\n  //       <p>{this.state.ttype}</p>\n  //     </div>\n  //   )\n  // }\n}\n\nexport default App;\n\n\n\n\n\n\n// class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData()\n//   }\n\n//   async loadBlockchainData() {\n//     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//     const accounts = await web3.eth.getAccounts()\n//     this.setState({ account: accounts[0] })\n//   }\n\n//   constructor(props) {\n//     super(props)\n//     this.state = { account: '' }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//   )};\n// }\n\n// export default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,WAAP;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B,CAgF1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EA9GAU,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAE,IADK;MAEXC,SAAS,EAAE,IAFA;MAGXC,mBAAmB,EAAE,IAHV;MAKXC,KAAK,EAAE,IALI;MAMXC,IAAI,EAAE,IANK;MAOXC,SAAS,EAAE,IAPA;MAQXC,SAAS,EAAE,IARA;MASXC,UAAU,EAAE,IATD;MAUXC,mBAAmB,EAAE,IAVV;MAWXC,SAAS,EAAE,IAXA;MAYXC,gBAAgB,EAAE;IAZP,CAAb;EAcD;;EAEDC,kBAAkB,GAAG;IACnB,KAAKC,kBAAL;EACD;;EAEuB,MAAlBA,kBAAkB,GAAG;IACzB,MAAMZ,IAAI,GAAG,IAAIN,IAAJ,CAAS,uBAAT,CAAb;IACA,MAAMmB,QAAQ,GAAG,MAAMb,IAAI,CAACc,GAAL,CAASC,WAAT,EAAvB;IACAC,OAAO,CAACC,GAAR,CAAYjB,IAAZ;IACAgB,OAAO,CAACC,GAAR,CAAYJ,QAAZ;IACA,KAAKK,QAAL,CAAc;MAAEC,OAAO,EAAEN,QAAQ,CAAC,CAAD;IAAnB,CAAd,EALyB,CAMzB;EACD,CA/ByB,CAiC1B;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;;EAEAO,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,MAAd;MAAA,wBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,gBAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAA,6BAAkB,KAAKrB,KAAL,CAAWoB,OAA7B;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAUE;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE,QAAC,cAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE,QAAC,eAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAeA;;AA9EwB;;AAkH5B,eAAevB,GAAf,C,CAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}
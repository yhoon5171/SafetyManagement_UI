{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport var AddressCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(AddressCoder, _Coder);\n\n  var _super = _createSuper(AddressCoder);\n\n  function AddressCoder(localName) {\n    _classCallCheck(this, AddressCoder);\n\n    return _super.call(this, \"address\", \"address\", localName, false);\n  }\n\n  _createClass(AddressCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return \"0x0000000000000000000000000000000000000000\";\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      try {\n        value = getAddress(value);\n      } catch (error) {\n        this._throwError(error.message, value);\n      }\n\n      return writer.writeValue(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n  }]);\n\n  return AddressCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/address.ts"],"names":[],"mappings":"AAAA;;;;;;AAEA,SAAS,UAAT,QAA2B,wBAA3B;AACA,SAAS,UAAT,QAA2B,sBAA3B;AAEA,SAAS,KAAT,QAAsC,kBAAtC;AAEA,WAAa,YAAb;EAAA;;EAAA;;EAEI,sBAAY,SAAZ,EAA6B;IAAA;;IAAA,yBACnB,SADmB,EACR,SADQ,EACG,SADH,EACc,KADd;EAE5B;;EAJL;IAAA;IAAA,OAMI,wBAAY;MACR,OAAO,4CAAP;IACH;EARL;IAAA;IAAA,OAUI,gBAAO,MAAP,EAAuB,KAAvB,EAAoC;MAChC,IAAI;QACA,KAAK,GAAG,UAAU,CAAC,KAAD,CAAlB;MACH,CAFD,CAEE,OAAO,KAAP,EAAc;QACZ,KAAK,WAAL,CAAiB,KAAK,CAAC,OAAvB,EAAgC,KAAhC;MACH;;MACD,OAAO,MAAM,CAAC,UAAP,CAAkB,KAAlB,CAAP;IACH;EAjBL;IAAA;IAAA,OAmBI,gBAAO,MAAP,EAAqB;MACjB,OAAO,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,SAAP,GAAmB,WAAnB,EAAD,EAAmC,EAAnC,CAAX,CAAjB;IACH;EArBL;;EAAA;AAAA,EAAkC,KAAlC","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map"]},"metadata":{},"sourceType":"module"}
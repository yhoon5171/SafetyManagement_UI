{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar hasher = require('./hasher.js');\n\nvar sha = function sha(name) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = Uint8Array;\n              _context.next = 3;\n              return crypto.subtle.digest(name, data);\n\n            case 3:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nvar sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\nexports.sha256 = sha256;\nexports.sha512 = sha512;","map":{"version":3,"names":["Object","defineProperty","exports","value","hasher","require","sha","name","data","Uint8Array","crypto","subtle","digest","sha256","from","code","encode","sha512"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/multiformats/cjs/src/hashes/sha2-browser.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar hasher = require('./hasher.js');\n\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nconst sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nconst sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\n\nexports.sha256 = sha256;\nexports.sha512 = sha512;\n"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,IAAI;EAAA;IAAA,sEAAI,iBAAMC,IAAN;MAAA;QAAA;UAAA;YAAA;cAAA,cAAkBC,UAAlB;cAAA;cAAA,OAAmCC,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqBL,IAArB,EAA2BC,IAA3B,CAAnC;;YAAA;cAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAJ;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAhB;;AACA,IAAMK,MAAM,GAAGT,MAAM,CAACU,IAAP,CAAY;EACzBP,IAAI,EAAE,UADmB;EAEzBQ,IAAI,EAAE,EAFmB;EAGzBC,MAAM,EAAEV,GAAG,CAAC,SAAD;AAHc,CAAZ,CAAf;AAKA,IAAMW,MAAM,GAAGb,MAAM,CAACU,IAAP,CAAY;EACzBP,IAAI,EAAE,UADmB;EAEzBQ,IAAI,EAAE,EAFmB;EAGzBC,MAAM,EAAEV,GAAG,CAAC,SAAD;AAHc,CAAZ,CAAf;AAMAJ,OAAO,CAACW,MAAR,GAAiBA,MAAjB;AACAX,OAAO,CAACe,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\r\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\r\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\r\n * |  d  | Day of month                   |  D  | Day of year                    |\r\n * |  e  | Local day of week              |  E  | Day of week                    |\r\n * |  f  |                                |  F* | Day of week in month           |\r\n * |  g* | Modified Julian day            |  G  | Era                            |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  i! | ISO day of week                |  I! | ISO week of year               |\r\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\r\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\r\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  n  |                                |  N  |                                |\r\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\r\n * |  p! | Long localized time            |  P! | Long localized date            |\r\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\r\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\r\n * |  u  | Extended year                  |  U* | Cyclic year                    |\r\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\r\n * |  w  | Local week of year             |  W* | Week of month                  |\r\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\r\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\r\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n *\r\n * Letters marked by ! are non-standard, but implemented by date-fns:\r\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\r\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\r\n *   i.e. 7 for Sunday, 1 for Monday, etc.\r\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\r\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\r\n *   `R` is supposed to be used in conjunction with `I` and `i`\r\n *   for universal ISO week-numbering date, whereas\r\n *   `Y` is supposed to be used in conjunction with `w` and `e`\r\n *   for week-numbering date specific to the locale.\r\n * - `P` is long localized date format\r\n * - `p` is long localized time format\r\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","map":{"version":3,"names":["getUTCDayOfYear","getUTCISOWeek","getUTCISOWeekYear","getUTCWeek","getUTCWeekYear","addLeadingZeros","lightFormatters","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","length","R","isoWeekYear","u","Q","quarter","Math","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","toLowerCase","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","floor","getTime","T","offset","dirtyDelimiter","sign","absOffset","abs","minutes","delimiter"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/date-fns/esm/_lib/format/formatters/index.js"],"sourcesContent":["import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\r\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\r\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\r\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\r\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\r\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\r\nimport lightFormatters from \"../lightFormatters/index.js\";\r\nvar dayPeriodEnum = {\r\n  am: 'am',\r\n  pm: 'pm',\r\n  midnight: 'midnight',\r\n  noon: 'noon',\r\n  morning: 'morning',\r\n  afternoon: 'afternoon',\r\n  evening: 'evening',\r\n  night: 'night'\r\n};\r\n\r\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\r\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\r\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\r\n * |  d  | Day of month                   |  D  | Day of year                    |\r\n * |  e  | Local day of week              |  E  | Day of week                    |\r\n * |  f  |                                |  F* | Day of week in month           |\r\n * |  g* | Modified Julian day            |  G  | Era                            |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  i! | ISO day of week                |  I! | ISO week of year               |\r\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\r\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\r\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  n  |                                |  N  |                                |\r\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\r\n * |  p! | Long localized time            |  P! | Long localized date            |\r\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\r\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\r\n * |  u  | Extended year                  |  U* | Cyclic year                    |\r\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\r\n * |  w  | Local week of year             |  W* | Week of month                  |\r\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\r\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\r\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n *\r\n * Letters marked by ! are non-standard, but implemented by date-fns:\r\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\r\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\r\n *   i.e. 7 for Sunday, 1 for Monday, etc.\r\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\r\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\r\n *   `R` is supposed to be used in conjunction with `I` and `i`\r\n *   for universal ISO week-numbering date, whereas\r\n *   `Y` is supposed to be used in conjunction with `w` and `e`\r\n *   for week-numbering date specific to the locale.\r\n * - `P` is long localized date format\r\n * - `p` is long localized time format\r\n */\r\nvar formatters = {\r\n  // Era\r\n  G: function (date, token, localize) {\r\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\r\n\r\n    switch (token) {\r\n      // AD, BC\r\n      case 'G':\r\n      case 'GG':\r\n      case 'GGG':\r\n        return localize.era(era, {\r\n          width: 'abbreviated'\r\n        });\r\n      // A, B\r\n\r\n      case 'GGGGG':\r\n        return localize.era(era, {\r\n          width: 'narrow'\r\n        });\r\n      // Anno Domini, Before Christ\r\n\r\n      case 'GGGG':\r\n      default:\r\n        return localize.era(era, {\r\n          width: 'wide'\r\n        });\r\n    }\r\n  },\r\n  // Year\r\n  y: function (date, token, localize) {\r\n    // Ordinal number\r\n    if (token === 'yo') {\r\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\r\n\r\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\r\n      return localize.ordinalNumber(year, {\r\n        unit: 'year'\r\n      });\r\n    }\r\n\r\n    return lightFormatters.y(date, token);\r\n  },\r\n  // Local week-numbering year\r\n  Y: function (date, token, localize, options) {\r\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\r\n\r\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\r\n\r\n    if (token === 'YY') {\r\n      var twoDigitYear = weekYear % 100;\r\n      return addLeadingZeros(twoDigitYear, 2);\r\n    } // Ordinal number\r\n\r\n\r\n    if (token === 'Yo') {\r\n      return localize.ordinalNumber(weekYear, {\r\n        unit: 'year'\r\n      });\r\n    } // Padding\r\n\r\n\r\n    return addLeadingZeros(weekYear, token.length);\r\n  },\r\n  // ISO week-numbering year\r\n  R: function (date, token) {\r\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\r\n\r\n    return addLeadingZeros(isoWeekYear, token.length);\r\n  },\r\n  // Extended year. This is a single number designating the year of this calendar system.\r\n  // The main difference between `y` and `u` localizers are B.C. years:\r\n  // | Year | `y` | `u` |\r\n  // |------|-----|-----|\r\n  // | AC 1 |   1 |   1 |\r\n  // | BC 1 |   1 |   0 |\r\n  // | BC 2 |   2 |  -1 |\r\n  // Also `yy` always returns the last two digits of a year,\r\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\r\n  u: function (date, token) {\r\n    var year = date.getUTCFullYear();\r\n    return addLeadingZeros(year, token.length);\r\n  },\r\n  // Quarter\r\n  Q: function (date, token, localize) {\r\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\r\n\r\n    switch (token) {\r\n      // 1, 2, 3, 4\r\n      case 'Q':\r\n        return String(quarter);\r\n      // 01, 02, 03, 04\r\n\r\n      case 'QQ':\r\n        return addLeadingZeros(quarter, 2);\r\n      // 1st, 2nd, 3rd, 4th\r\n\r\n      case 'Qo':\r\n        return localize.ordinalNumber(quarter, {\r\n          unit: 'quarter'\r\n        });\r\n      // Q1, Q2, Q3, Q4\r\n\r\n      case 'QQQ':\r\n        return localize.quarter(quarter, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\r\n\r\n      case 'QQQQQ':\r\n        return localize.quarter(quarter, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n      // 1st quarter, 2nd quarter, ...\r\n\r\n      case 'QQQQ':\r\n      default:\r\n        return localize.quarter(quarter, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // Stand-alone quarter\r\n  q: function (date, token, localize) {\r\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\r\n\r\n    switch (token) {\r\n      // 1, 2, 3, 4\r\n      case 'q':\r\n        return String(quarter);\r\n      // 01, 02, 03, 04\r\n\r\n      case 'qq':\r\n        return addLeadingZeros(quarter, 2);\r\n      // 1st, 2nd, 3rd, 4th\r\n\r\n      case 'qo':\r\n        return localize.ordinalNumber(quarter, {\r\n          unit: 'quarter'\r\n        });\r\n      // Q1, Q2, Q3, Q4\r\n\r\n      case 'qqq':\r\n        return localize.quarter(quarter, {\r\n          width: 'abbreviated',\r\n          context: 'standalone'\r\n        });\r\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\r\n\r\n      case 'qqqqq':\r\n        return localize.quarter(quarter, {\r\n          width: 'narrow',\r\n          context: 'standalone'\r\n        });\r\n      // 1st quarter, 2nd quarter, ...\r\n\r\n      case 'qqqq':\r\n      default:\r\n        return localize.quarter(quarter, {\r\n          width: 'wide',\r\n          context: 'standalone'\r\n        });\r\n    }\r\n  },\r\n  // Month\r\n  M: function (date, token, localize) {\r\n    var month = date.getUTCMonth();\r\n\r\n    switch (token) {\r\n      case 'M':\r\n      case 'MM':\r\n        return lightFormatters.M(date, token);\r\n      // 1st, 2nd, ..., 12th\r\n\r\n      case 'Mo':\r\n        return localize.ordinalNumber(month + 1, {\r\n          unit: 'month'\r\n        });\r\n      // Jan, Feb, ..., Dec\r\n\r\n      case 'MMM':\r\n        return localize.month(month, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n      // J, F, ..., D\r\n\r\n      case 'MMMMM':\r\n        return localize.month(month, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n      // January, February, ..., December\r\n\r\n      case 'MMMM':\r\n      default:\r\n        return localize.month(month, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // Stand-alone month\r\n  L: function (date, token, localize) {\r\n    var month = date.getUTCMonth();\r\n\r\n    switch (token) {\r\n      // 1, 2, ..., 12\r\n      case 'L':\r\n        return String(month + 1);\r\n      // 01, 02, ..., 12\r\n\r\n      case 'LL':\r\n        return addLeadingZeros(month + 1, 2);\r\n      // 1st, 2nd, ..., 12th\r\n\r\n      case 'Lo':\r\n        return localize.ordinalNumber(month + 1, {\r\n          unit: 'month'\r\n        });\r\n      // Jan, Feb, ..., Dec\r\n\r\n      case 'LLL':\r\n        return localize.month(month, {\r\n          width: 'abbreviated',\r\n          context: 'standalone'\r\n        });\r\n      // J, F, ..., D\r\n\r\n      case 'LLLLL':\r\n        return localize.month(month, {\r\n          width: 'narrow',\r\n          context: 'standalone'\r\n        });\r\n      // January, February, ..., December\r\n\r\n      case 'LLLL':\r\n      default:\r\n        return localize.month(month, {\r\n          width: 'wide',\r\n          context: 'standalone'\r\n        });\r\n    }\r\n  },\r\n  // Local week of year\r\n  w: function (date, token, localize, options) {\r\n    var week = getUTCWeek(date, options);\r\n\r\n    if (token === 'wo') {\r\n      return localize.ordinalNumber(week, {\r\n        unit: 'week'\r\n      });\r\n    }\r\n\r\n    return addLeadingZeros(week, token.length);\r\n  },\r\n  // ISO week of year\r\n  I: function (date, token, localize) {\r\n    var isoWeek = getUTCISOWeek(date);\r\n\r\n    if (token === 'Io') {\r\n      return localize.ordinalNumber(isoWeek, {\r\n        unit: 'week'\r\n      });\r\n    }\r\n\r\n    return addLeadingZeros(isoWeek, token.length);\r\n  },\r\n  // Day of the month\r\n  d: function (date, token, localize) {\r\n    if (token === 'do') {\r\n      return localize.ordinalNumber(date.getUTCDate(), {\r\n        unit: 'date'\r\n      });\r\n    }\r\n\r\n    return lightFormatters.d(date, token);\r\n  },\r\n  // Day of year\r\n  D: function (date, token, localize) {\r\n    var dayOfYear = getUTCDayOfYear(date);\r\n\r\n    if (token === 'Do') {\r\n      return localize.ordinalNumber(dayOfYear, {\r\n        unit: 'dayOfYear'\r\n      });\r\n    }\r\n\r\n    return addLeadingZeros(dayOfYear, token.length);\r\n  },\r\n  // Day of week\r\n  E: function (date, token, localize) {\r\n    var dayOfWeek = date.getUTCDay();\r\n\r\n    switch (token) {\r\n      // Tue\r\n      case 'E':\r\n      case 'EE':\r\n      case 'EEE':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n      // T\r\n\r\n      case 'EEEEE':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n      // Tu\r\n\r\n      case 'EEEEEE':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'short',\r\n          context: 'formatting'\r\n        });\r\n      // Tuesday\r\n\r\n      case 'EEEE':\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // Local day of week\r\n  e: function (date, token, localize, options) {\r\n    var dayOfWeek = date.getUTCDay();\r\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\r\n\r\n    switch (token) {\r\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\r\n      case 'e':\r\n        return String(localDayOfWeek);\r\n      // Padded numerical value\r\n\r\n      case 'ee':\r\n        return addLeadingZeros(localDayOfWeek, 2);\r\n      // 1st, 2nd, ..., 7th\r\n\r\n      case 'eo':\r\n        return localize.ordinalNumber(localDayOfWeek, {\r\n          unit: 'day'\r\n        });\r\n\r\n      case 'eee':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n      // T\r\n\r\n      case 'eeeee':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n      // Tu\r\n\r\n      case 'eeeeee':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'short',\r\n          context: 'formatting'\r\n        });\r\n      // Tuesday\r\n\r\n      case 'eeee':\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // Stand-alone local day of week\r\n  c: function (date, token, localize, options) {\r\n    var dayOfWeek = date.getUTCDay();\r\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\r\n\r\n    switch (token) {\r\n      // Numerical value (same as in `e`)\r\n      case 'c':\r\n        return String(localDayOfWeek);\r\n      // Padded numerical value\r\n\r\n      case 'cc':\r\n        return addLeadingZeros(localDayOfWeek, token.length);\r\n      // 1st, 2nd, ..., 7th\r\n\r\n      case 'co':\r\n        return localize.ordinalNumber(localDayOfWeek, {\r\n          unit: 'day'\r\n        });\r\n\r\n      case 'ccc':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'abbreviated',\r\n          context: 'standalone'\r\n        });\r\n      // T\r\n\r\n      case 'ccccc':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'narrow',\r\n          context: 'standalone'\r\n        });\r\n      // Tu\r\n\r\n      case 'cccccc':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'short',\r\n          context: 'standalone'\r\n        });\r\n      // Tuesday\r\n\r\n      case 'cccc':\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: 'wide',\r\n          context: 'standalone'\r\n        });\r\n    }\r\n  },\r\n  // ISO day of week\r\n  i: function (date, token, localize) {\r\n    var dayOfWeek = date.getUTCDay();\r\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\r\n\r\n    switch (token) {\r\n      // 2\r\n      case 'i':\r\n        return String(isoDayOfWeek);\r\n      // 02\r\n\r\n      case 'ii':\r\n        return addLeadingZeros(isoDayOfWeek, token.length);\r\n      // 2nd\r\n\r\n      case 'io':\r\n        return localize.ordinalNumber(isoDayOfWeek, {\r\n          unit: 'day'\r\n        });\r\n      // Tue\r\n\r\n      case 'iii':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n      // T\r\n\r\n      case 'iiiii':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n      // Tu\r\n\r\n      case 'iiiiii':\r\n        return localize.day(dayOfWeek, {\r\n          width: 'short',\r\n          context: 'formatting'\r\n        });\r\n      // Tuesday\r\n\r\n      case 'iiii':\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // AM or PM\r\n  a: function (date, token, localize) {\r\n    var hours = date.getUTCHours();\r\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\r\n\r\n    switch (token) {\r\n      case 'a':\r\n      case 'aa':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n\r\n      case 'aaa':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        }).toLowerCase();\r\n\r\n      case 'aaaaa':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n\r\n      case 'aaaa':\r\n      default:\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // AM, PM, midnight, noon\r\n  b: function (date, token, localize) {\r\n    var hours = date.getUTCHours();\r\n    var dayPeriodEnumValue;\r\n\r\n    if (hours === 12) {\r\n      dayPeriodEnumValue = dayPeriodEnum.noon;\r\n    } else if (hours === 0) {\r\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\r\n    } else {\r\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\r\n    }\r\n\r\n    switch (token) {\r\n      case 'b':\r\n      case 'bb':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n\r\n      case 'bbb':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        }).toLowerCase();\r\n\r\n      case 'bbbbb':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n\r\n      case 'bbbb':\r\n      default:\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // in the morning, in the afternoon, in the evening, at night\r\n  B: function (date, token, localize) {\r\n    var hours = date.getUTCHours();\r\n    var dayPeriodEnumValue;\r\n\r\n    if (hours >= 17) {\r\n      dayPeriodEnumValue = dayPeriodEnum.evening;\r\n    } else if (hours >= 12) {\r\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\r\n    } else if (hours >= 4) {\r\n      dayPeriodEnumValue = dayPeriodEnum.morning;\r\n    } else {\r\n      dayPeriodEnumValue = dayPeriodEnum.night;\r\n    }\r\n\r\n    switch (token) {\r\n      case 'B':\r\n      case 'BB':\r\n      case 'BBB':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'abbreviated',\r\n          context: 'formatting'\r\n        });\r\n\r\n      case 'BBBBB':\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'narrow',\r\n          context: 'formatting'\r\n        });\r\n\r\n      case 'BBBB':\r\n      default:\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: 'wide',\r\n          context: 'formatting'\r\n        });\r\n    }\r\n  },\r\n  // Hour [1-12]\r\n  h: function (date, token, localize) {\r\n    if (token === 'ho') {\r\n      var hours = date.getUTCHours() % 12;\r\n      if (hours === 0) hours = 12;\r\n      return localize.ordinalNumber(hours, {\r\n        unit: 'hour'\r\n      });\r\n    }\r\n\r\n    return lightFormatters.h(date, token);\r\n  },\r\n  // Hour [0-23]\r\n  H: function (date, token, localize) {\r\n    if (token === 'Ho') {\r\n      return localize.ordinalNumber(date.getUTCHours(), {\r\n        unit: 'hour'\r\n      });\r\n    }\r\n\r\n    return lightFormatters.H(date, token);\r\n  },\r\n  // Hour [0-11]\r\n  K: function (date, token, localize) {\r\n    var hours = date.getUTCHours() % 12;\r\n\r\n    if (token === 'Ko') {\r\n      return localize.ordinalNumber(hours, {\r\n        unit: 'hour'\r\n      });\r\n    }\r\n\r\n    return addLeadingZeros(hours, token.length);\r\n  },\r\n  // Hour [1-24]\r\n  k: function (date, token, localize) {\r\n    var hours = date.getUTCHours();\r\n    if (hours === 0) hours = 24;\r\n\r\n    if (token === 'ko') {\r\n      return localize.ordinalNumber(hours, {\r\n        unit: 'hour'\r\n      });\r\n    }\r\n\r\n    return addLeadingZeros(hours, token.length);\r\n  },\r\n  // Minute\r\n  m: function (date, token, localize) {\r\n    if (token === 'mo') {\r\n      return localize.ordinalNumber(date.getUTCMinutes(), {\r\n        unit: 'minute'\r\n      });\r\n    }\r\n\r\n    return lightFormatters.m(date, token);\r\n  },\r\n  // Second\r\n  s: function (date, token, localize) {\r\n    if (token === 'so') {\r\n      return localize.ordinalNumber(date.getUTCSeconds(), {\r\n        unit: 'second'\r\n      });\r\n    }\r\n\r\n    return lightFormatters.s(date, token);\r\n  },\r\n  // Fraction of second\r\n  S: function (date, token) {\r\n    return lightFormatters.S(date, token);\r\n  },\r\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\r\n  X: function (date, token, _localize, options) {\r\n    var originalDate = options._originalDate || date;\r\n    var timezoneOffset = originalDate.getTimezoneOffset();\r\n\r\n    if (timezoneOffset === 0) {\r\n      return 'Z';\r\n    }\r\n\r\n    switch (token) {\r\n      // Hours and optional minutes\r\n      case 'X':\r\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\r\n      // Hours, minutes and optional seconds without `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `XX`\r\n\r\n      case 'XXXX':\r\n      case 'XX':\r\n        // Hours and minutes without `:` delimiter\r\n        return formatTimezone(timezoneOffset);\r\n      // Hours, minutes and optional seconds with `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `XXX`\r\n\r\n      case 'XXXXX':\r\n      case 'XXX': // Hours and minutes with `:` delimiter\r\n\r\n      default:\r\n        return formatTimezone(timezoneOffset, ':');\r\n    }\r\n  },\r\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\r\n  x: function (date, token, _localize, options) {\r\n    var originalDate = options._originalDate || date;\r\n    var timezoneOffset = originalDate.getTimezoneOffset();\r\n\r\n    switch (token) {\r\n      // Hours and optional minutes\r\n      case 'x':\r\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\r\n      // Hours, minutes and optional seconds without `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `xx`\r\n\r\n      case 'xxxx':\r\n      case 'xx':\r\n        // Hours and minutes without `:` delimiter\r\n        return formatTimezone(timezoneOffset);\r\n      // Hours, minutes and optional seconds with `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `xxx`\r\n\r\n      case 'xxxxx':\r\n      case 'xxx': // Hours and minutes with `:` delimiter\r\n\r\n      default:\r\n        return formatTimezone(timezoneOffset, ':');\r\n    }\r\n  },\r\n  // Timezone (GMT)\r\n  O: function (date, token, _localize, options) {\r\n    var originalDate = options._originalDate || date;\r\n    var timezoneOffset = originalDate.getTimezoneOffset();\r\n\r\n    switch (token) {\r\n      // Short\r\n      case 'O':\r\n      case 'OO':\r\n      case 'OOO':\r\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\r\n      // Long\r\n\r\n      case 'OOOO':\r\n      default:\r\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\r\n    }\r\n  },\r\n  // Timezone (specific non-location)\r\n  z: function (date, token, _localize, options) {\r\n    var originalDate = options._originalDate || date;\r\n    var timezoneOffset = originalDate.getTimezoneOffset();\r\n\r\n    switch (token) {\r\n      // Short\r\n      case 'z':\r\n      case 'zz':\r\n      case 'zzz':\r\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\r\n      // Long\r\n\r\n      case 'zzzz':\r\n      default:\r\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\r\n    }\r\n  },\r\n  // Seconds timestamp\r\n  t: function (date, token, _localize, options) {\r\n    var originalDate = options._originalDate || date;\r\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\r\n    return addLeadingZeros(timestamp, token.length);\r\n  },\r\n  // Milliseconds timestamp\r\n  T: function (date, token, _localize, options) {\r\n    var originalDate = options._originalDate || date;\r\n    var timestamp = originalDate.getTime();\r\n    return addLeadingZeros(timestamp, token.length);\r\n  }\r\n};\r\n\r\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\r\n  var sign = offset > 0 ? '-' : '+';\r\n  var absOffset = Math.abs(offset);\r\n  var hours = Math.floor(absOffset / 60);\r\n  var minutes = absOffset % 60;\r\n\r\n  if (minutes === 0) {\r\n    return sign + String(hours);\r\n  }\r\n\r\n  var delimiter = dirtyDelimiter || '';\r\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\r\n}\r\n\r\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\r\n  if (offset % 60 === 0) {\r\n    var sign = offset > 0 ? '-' : '+';\r\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\r\n  }\r\n\r\n  return formatTimezone(offset, dirtyDelimiter);\r\n}\r\n\r\nfunction formatTimezone(offset, dirtyDelimiter) {\r\n  var delimiter = dirtyDelimiter || '';\r\n  var sign = offset > 0 ? '-' : '+';\r\n  var absOffset = Math.abs(offset);\r\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\r\n  var minutes = addLeadingZeros(absOffset % 60, 2);\r\n  return sign + hours + delimiter + minutes;\r\n}\r\n\r\nexport default formatters;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
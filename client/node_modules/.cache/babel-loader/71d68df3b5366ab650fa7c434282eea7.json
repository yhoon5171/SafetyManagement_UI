{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\Capstone test\\\\SafetyManagement_UI\\\\client\\\\src\\\\App.jsx\";\n// import React, { useEffect, useState } from \"react\";\n// import {FileUpload} from './components/FileUpload';\n// import \"./App.css\";\n// import TransactionContract from \"../src/contracts/Transaction.json\"\n// import Web3 from 'web3';\n// import moment from \"moment\";\n// import Axios from 'axios';\n// import Login from './login';\n// import Signup from './signup';\n// export default function App() {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   const [web3, setWeb3] = useState(\"\");\n//   const [account, setAccount] = useState(\"\");\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [category, setCategory] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\n//   const [registrant, setRegsitrant] = useState(\"\");\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\n//   const [fileType, setFileType] = useState(\"\");\n//   const [fileDescription, setFileDescription] = useState(\"\");\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\n//   const [category_, setCategory_] = useState(\"\");\n//   const [name_, setName_] = useState(\"\");\n//   const [registrant_, setRegsitrant_] = useState(\"\");\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n//   const [fileType_, setFileType_] = useState(\"\");\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\n//   const submitReview = ()=>{\n//     Axios.post('http://localhost:3001/api/insert', {\n//       category: category,\n//       name: name,\n//       time: time,\n//       ipfsHash: ipfsHash,\n//       registrant: registrant,\n//       responsible: responsibleManager,\n//       filetype: fileType,\n//       filedes: fileDescription\n//     }).then(()=>{\n//       alert('등록 완료!');\n//     })\n//   };\n//   useEffect(() => {\n//     async function componentWillMount(e) {\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//       setWeb3(web3);\n//       console.log(web3)\n//       const contract = require(\"truffle-contract\");\n//       const transaction = contract(TransactionContract);\n//       console.log(web3);\n//       transaction.setProvider(web3.currentProvider);\n//       web3.eth.getAccounts((error, accounts) => {\n//         if (!error){\n//           transaction.deployed().then(instance => {\n//             setTransactionInstance(instance);\n//             setAccount(accounts[0]);\n//             setLoading(true);\n//           })\n//         }\n//       })\n//     }\n//     componentWillMount();\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\n//     // updateAllTransactions();\n//   }, []);\n//   useEffect(() => {\n//     async function updateAllTransactions(e){\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n//       for(let i=0; i<events.length; i+=1){\n//         const record = {};\n//         var time_ = moment.unix(events[i].returnValues.time);\n//         setCategory_(events[i].returnValues.category.toString());\n//         setName_(events[i].returnValues.name.toString());\n//         setTime(time_.toString());\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\n//         setFileType_(events[i].returnValues.file_type.toString());\n//         setFileDescription_(events[i].returnValues.file_description.toString());\n//         setTransactionCnt(transactionInstance.cntTransactions());\n//         console.log(events[i].returnValues);\n//       }\n//       console.log(events.length);\n//       console.log(events);\n//     }\n//     if (loading == true) updateAllTransactions();\n// }, [loading]);\n//   const sendTransaction = async (e) => {\n//     console.log(web3);\n//     console.log(account);\n//     console.log(transactionInstance);\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n//       from: account,\n//       //value: e.web3.utils.toWei('10', \"ether\"),\n//       gas: 1000000\n//     })\n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n//     console.log(events[events.length-1].transactionHash)\n//     //this.updateAllTransactions();\n//     submitReview();\n//   }\n//   return (\n//     <div>\n//       <Login />\n//       <Signup />\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\n//       <br></br>\n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <p>Your account: {account}</p>\n//       <br></br>\n//       <button onClick={sendTransaction}>\n//         트랜잭션 추가\n//       </button>\n//       {/* <button onClick={updateAllTransactions}>\n//         트랜잭션 보여주기\n//       </button> */}\n//       <br></br>\n//       <p>all transactions:</p>\n//       <br></br>\n//       <p>Category: {category_}</p>\n//       <p>File Name: {name_}</p>\n//       <p>Time: {time}</p>\n//       <p>IPFS Hash: {ipfsHash_}</p>\n//       <p>Registrant: {registrant_}</p>\n//       <p>Responsible Manager: {responsibleManager_}</p>\n//       <p>File Type: {fileType_}</p>\n//       <p>File Description: {fileDescription_}</p>\n//     </div>\n//   )\n// }\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\nimport Ray from \"./components/pages/Ray\";\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\nimport CCTV from \"./components/pages/CCTV\";\nimport All from \"./components/pages/All\";\nimport Pressure from \"./components/pages/Pressure\";\nimport Temp from \"./components/pages/Temp\";\nimport CheckList from \"./components/pages/CheckList\";\nimport Documents from \"./components/pages/Documents\";\nimport { Container, Row, Col } from \"shards-react\";\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\nimport MainFooter from \"./components/layout/MainFooter\";\nimport WriteTransaction from \"./components/pages/WriteTransaction\";\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport moment from \"moment\";\nimport Search_Result from \"./components/pages/search_result\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(_ref) {\n  let {\n    block_list,\n    transactionInstance,\n    account\n  } = _ref;\n  console.log(\"App!!!\");\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(MainSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"main-content p-0\",\n        lg: {\n          size: 10,\n          offset: 2\n        },\n        md: {\n          size: 9,\n          offset: 3\n        },\n        sm: \"12\",\n        tag: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(MainNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/all\",\n            element: /*#__PURE__*/_jsxDEV(All, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cctv\",\n            element: /*#__PURE__*/_jsxDEV(CCTV, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/documents\",\n            element: /*#__PURE__*/_jsxDEV(Documents, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/checklist\",\n            element: /*#__PURE__*/_jsxDEV(CheckList, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/search_result\",\n            element: /*#__PURE__*/_jsxDEV(Search_Result, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/temp\",\n            element: /*#__PURE__*/_jsxDEV(Temp, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/pressure\",\n            element: /*#__PURE__*/_jsxDEV(Pressure, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/ray\",\n            element: /*#__PURE__*/_jsxDEV(Ray, {\n              transactionInstance: transactionInstance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/writetransaction\",\n            element: /*#__PURE__*/_jsxDEV(WriteTransaction, {\n              transactionInstance: transactionInstance,\n              account: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(MainFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 7\n  }, this);\n}\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Route","Routes","Navigate","Ray","MainSidebar","CCTV","All","Pressure","Temp","CheckList","Documents","Container","Row","Col","MainNavbar","MainFooter","WriteTransaction","TransactionContract","Web3","moment","Search_Result","App","block_list","transactionInstance","account","console","log","size","offset"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/src/App.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\n// import \"./App.css\";\r\n// import TransactionContract from \"../src/contracts/Transaction.json\"\r\n// import Web3 from 'web3';\r\n// import moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\n\r\n\r\n\r\n// export default function App() {\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n//   const [web3, setWeb3] = useState(\"\");\r\n//   const [account, setAccount] = useState(\"\");\r\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\r\n//   const [registrant, setRegsitrant] = useState(\"\");\r\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n//   const [fileType, setFileType] = useState(\"\");\r\n//   const [fileDescription, setFileDescription] = useState(\"\");\r\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n//   const [time, setTime] = useState(\"\");\r\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n//   const [category_, setCategory_] = useState(\"\");\r\n//   const [name_, setName_] = useState(\"\");\r\n//   const [registrant_, setRegsitrant_] = useState(\"\");\r\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n//   const [fileType_, setFileType_] = useState(\"\");\r\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n//   const submitReview = ()=>{\r\n//     Axios.post('http://localhost:3001/api/insert', {\r\n//       category: category,\r\n//       name: name,\r\n//       time: time,\r\n//       ipfsHash: ipfsHash,\r\n//       registrant: registrant,\r\n//       responsible: responsibleManager,\r\n//       filetype: fileType,\r\n//       filedes: fileDescription\r\n//     }).then(()=>{\r\n//       alert('등록 완료!');\r\n//     })\r\n//   };\r\n\r\n\r\n//   useEffect(() => {\r\n//     async function componentWillMount(e) {\r\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n//       setWeb3(web3);\r\n//       console.log(web3)\r\n//       const contract = require(\"truffle-contract\");\r\n//       const transaction = contract(TransactionContract);\r\n//       console.log(web3);\r\n//       transaction.setProvider(web3.currentProvider);\r\n  \r\n//       web3.eth.getAccounts((error, accounts) => {\r\n//         if (!error){\r\n//           transaction.deployed().then(instance => {\r\n//             setTransactionInstance(instance);\r\n//             setAccount(accounts[0]);\r\n//             setLoading(true);\r\n//           })\r\n//         }\r\n//       })\r\n      \r\n//     }\r\n\r\n//     componentWillMount();\r\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\r\n//     // updateAllTransactions();\r\n\r\n    \r\n\r\n//   }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     async function updateAllTransactions(e){\r\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n//       for(let i=0; i<events.length; i+=1){\r\n//         const record = {};\r\n//         var time_ = moment.unix(events[i].returnValues.time);\r\n\r\n//         setCategory_(events[i].returnValues.category.toString());\r\n//         setName_(events[i].returnValues.name.toString());\r\n//         setTime(time_.toString());\r\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\r\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\r\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\r\n//         setFileType_(events[i].returnValues.file_type.toString());\r\n//         setFileDescription_(events[i].returnValues.file_description.toString());\r\n//         setTransactionCnt(transactionInstance.cntTransactions());\r\n//         console.log(events[i].returnValues);\r\n//       }\r\n//       console.log(events.length);\r\n//       console.log(events);\r\n  \r\n//     }\r\n\r\n//     if (loading == true) updateAllTransactions();\r\n\r\n// }, [loading]);\r\n\r\n\r\n//   const sendTransaction = async (e) => {\r\n//     console.log(web3);\r\n//     console.log(account);\r\n//     console.log(transactionInstance);\r\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n//       from: account,\r\n//       //value: e.web3.utils.toWei('10', \"ether\"),\r\n//       gas: 1000000\r\n//     })\r\n    \r\n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n//     console.log(events[events.length-1].transactionHash)\r\n//     //this.updateAllTransactions();\r\n\r\n//     submitReview();\r\n//   }\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <Login />\r\n//       <Signup />\r\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n//       <br></br>\r\n      \r\n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n//       FileUrl :{\" \"}\r\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//         {fileUrl}\r\n//       </a>\r\n//       <br></br>\r\n\r\n//       <p>Your account: {account}</p>\r\n//       <br></br>\r\n\r\n//       <button onClick={sendTransaction}>\r\n//         트랜잭션 추가\r\n//       </button>\r\n//       {/* <button onClick={updateAllTransactions}>\r\n//         트랜잭션 보여주기\r\n//       </button> */}\r\n//       <br></br>\r\n\r\n//       <p>all transactions:</p>\r\n//       <br></br>\r\n//       <p>Category: {category_}</p>\r\n//       <p>File Name: {name_}</p>\r\n//       <p>Time: {time}</p>\r\n//       <p>IPFS Hash: {ipfsHash_}</p>\r\n//       <p>Registrant: {registrant_}</p>\r\n//       <p>Responsible Manager: {responsibleManager_}</p>\r\n//       <p>File Type: {fileType_}</p>\r\n//       <p>File Description: {fileDescription_}</p>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { Route, Routes,  Navigate } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nimport Ray from \"./components/pages/Ray\";\r\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\r\nimport CCTV from \"./components/pages/CCTV\";\r\nimport All from \"./components/pages/All\";\r\nimport Pressure from \"./components/pages/Pressure\";\r\nimport Temp from \"./components/pages/Temp\";\r\nimport CheckList from \"./components/pages/CheckList\";\r\nimport Documents from \"./components/pages/Documents\";\r\n\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\r\nimport MainFooter from \"./components/layout/MainFooter\";\r\n\r\nimport WriteTransaction from \"./components/pages/WriteTransaction\"\r\n\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\nimport Search_Result from \"./components/pages/search_result\";\r\n\r\nexport default function App({block_list, transactionInstance, account}) {\r\n  \r\n  console.log(\"App!!!\")\r\n\r\n  return(\r\n      <Container fluid>\r\n        <Row>\r\n          <MainSidebar/>\r\n          <Col\r\n            className=\"main-content p-0\"\r\n            lg={{ size: 10, offset: 2 }}\r\n            md={{ size: 9, offset: 3 }}\r\n            sm=\"12\"\r\n            tag=\"main\"\r\n          >\r\n            {<MainNavbar />}\r\n            <Routes>\r\n              <Route path=\"/\" element={<Navigate to=\"/all\"/>} />\r\n              <Route path=\"/all\" element={<All transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/cctv\" element={<CCTV transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/documents\" element={<Documents transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/checklist\" element={<CheckList transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/search_result\" element={<Search_Result transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/temp\" element={<Temp transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/pressure\" element={<Pressure transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/ray\" element={<Ray transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/writetransaction\" element={<WriteTransaction transactionInstance={transactionInstance} account={account} />}/>\r\n            </Routes>\r\n            <br></br><br></br>\r\n            {<MainFooter />}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n  )\r\n};"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAyBC,QAAzB,QAAyC,kBAAzC;AAEA,OAAO,sCAAP;AACA,OAAO,0CAAP;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,cAApC;AACA,OAAOC,UAAP,MAA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"},"metadata":{},"sourceType":"module"}
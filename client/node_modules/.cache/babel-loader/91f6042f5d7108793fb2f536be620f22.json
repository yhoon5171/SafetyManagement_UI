{"ast":null,"code":"var _regeneratorRuntime = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar crypto = require('crypto');\n\nvar _require = require('./utils'),\n    checkAndInit = _require.checkAndInit,\n    smix = _require.smix; // N = Cpu cost, r = Memory cost, p = parallelization cost\n\n\nfunction scrypt(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _scrypt.apply(this, arguments);\n}\n\nfunction _scrypt() {\n  _scrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, salt, N, r, p, dkLen, progressCallback, promiseInterval) {\n    var _checkAndInit, XY, V, B32, x, _X, B, tickCallback, i;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _checkAndInit = checkAndInit(key, salt, N, r, p, dkLen, progressCallback), XY = _checkAndInit.XY, V = _checkAndInit.V, B32 = _checkAndInit.B32, x = _checkAndInit.x, _X = _checkAndInit._X, B = _checkAndInit.B, tickCallback = _checkAndInit.tickCallback;\n            i = 0;\n\n          case 2:\n            if (!(i < p)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 5;\n            return smix(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval);\n\n          case 5:\n            i++;\n            _context.next = 2;\n            break;\n\n          case 8:\n            return _context.abrupt(\"return\", crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256'));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _scrypt.apply(this, arguments);\n}\n\nmodule.exports = scrypt;","map":{"version":3,"names":["crypto","require","checkAndInit","smix","scrypt","key","salt","N","r","p","dkLen","progressCallback","promiseInterval","XY","V","B32","x","_X","B","tickCallback","i","pbkdf2Sync","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/scryptsy/lib/scrypt.js"],"sourcesContent":["const crypto = require('crypto')\r\nconst {\r\n  checkAndInit,\r\n  smix\r\n} = require('./utils')\r\n\r\n// N = Cpu cost, r = Memory cost, p = parallelization cost\r\nasync function scrypt (key, salt, N, r, p, dkLen, progressCallback, promiseInterval) {\r\n  const {\r\n    XY,\r\n    V,\r\n    B32,\r\n    x,\r\n    _X,\r\n    B,\r\n    tickCallback\r\n  } = checkAndInit(key, salt, N, r, p, dkLen, progressCallback)\r\n\r\n  for (var i = 0; i < p; i++) {\r\n    await smix(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval)\r\n  }\r\n\r\n  return crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256')\r\n}\r\n\r\nmodule.exports = scrypt\r\n"],"mappings":";;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,eAGIA,OAAO,CAAC,SAAD,CAHX;AAAA,IACEC,YADF,YACEA,YADF;AAAA,IAEEC,IAFF,YAEEA,IAFF,C,CAKA;;;SACeC,M;;;;;uEAAf,iBAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,CAAlC,EAAqCC,CAArC,EAAwCC,CAAxC,EAA2CC,KAA3C,EAAkDC,gBAAlD,EAAoEC,eAApE;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,gBASMV,YAAY,CAACG,GAAD,EAAMC,IAAN,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,KAArB,EAA4BC,gBAA5B,CATlB,EAEIE,EAFJ,iBAEIA,EAFJ,EAGIC,CAHJ,iBAGIA,CAHJ,EAIIC,GAJJ,iBAIIA,GAJJ,EAKIC,CALJ,iBAKIA,CALJ,EAMIC,EANJ,iBAMIA,EANJ,EAOIC,CAPJ,iBAOIA,CAPJ,EAQIC,YARJ,iBAQIA,YARJ;YAWWC,CAXX,GAWe,CAXf;;UAAA;YAAA,MAWkBA,CAAC,GAAGX,CAXtB;cAAA;cAAA;YAAA;;YAAA;YAAA,OAYUN,IAAI,CAACe,CAAD,EAAIE,CAAC,GAAG,GAAJ,GAAUZ,CAAd,EAAiBA,CAAjB,EAAoBD,CAApB,EAAuBO,CAAvB,EAA0BD,EAA1B,EAA8BI,EAA9B,EAAkCF,GAAlC,EAAuCC,CAAvC,EAA0CG,YAA1C,EAAwDP,eAAxD,CAZd;;UAAA;YAWyBQ,CAAC,EAX1B;YAAA;YAAA;;UAAA;YAAA,iCAeSpB,MAAM,CAACqB,UAAP,CAAkBhB,GAAlB,EAAuBa,CAAvB,EAA0B,CAA1B,EAA6BR,KAA7B,EAAoC,QAApC,CAfT;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAkBAY,MAAM,CAACC,OAAP,GAAiBnB,MAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcnl\\\\Desktop\\\\gong\\\\BlockchainSafetyManagement\\\\client\\\\src\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [inputId, setInputId] = useState('');\n  const [inputPw, setInputPw] = useState(''); // input data 의 변화가 있을 때마다 value 값을 변경해서 useState 해준다\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n  };\n\n  const handleInputPw = e => {\n    setInputPw(e.target.value);\n  }; // login 버튼 클릭 이벤트\n\n\n  const onClickLogin = () => {\n    console.log('click login');\n  }; // 페이지 렌더링 후 가장 처음 호출되는 함수\n\n\n  useEffect(() => {\n    axios.get('/user_inform/login').then(res => console.log(res)).catch();\n  }, // 페이지 호출 후 처음 한번만 호출될 수 있도록 [] 추가\n  []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input_id\",\n        children: \"ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"input_id\",\n        value: inputId,\n        onChange: handleInputId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input_pw\",\n        children: \"PW : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"input_pw\",\n        value: inputPw,\n        onChange: handleInputPw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClickLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"MZXKHYHzLZg/xEGI15lDAVI7qmw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","Login","inputId","setInputId","inputPw","setInputPw","handleInputId","e","target","value","handleInputPw","onClickLogin","console","log","get","then","res","catch"],"sources":["C:/Users/mcnl/Desktop/gong/BlockchainSafetyManagement/client/src/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n \r\nfunction Login() {\r\n    const [inputId, setInputId] = useState('')\r\n    const [inputPw, setInputPw] = useState('')\r\n \r\n\t// input data 의 변화가 있을 때마다 value 값을 변경해서 useState 해준다\r\n    const handleInputId = (e) => {\r\n        setInputId(e.target.value)\r\n    }\r\n \r\n    const handleInputPw = (e) => {\r\n        setInputPw(e.target.value)\r\n    }\r\n \r\n\t// login 버튼 클릭 이벤트\r\n    const onClickLogin = () => {\r\n        console.log('click login')\r\n    }\r\n \r\n\t// 페이지 렌더링 후 가장 처음 호출되는 함수\r\n    useEffect(() => {\r\n        axios.get('/user_inform/login')\r\n        .then(res => console.log(res))\r\n        .catch()\r\n    },\r\n    // 페이지 호출 후 처음 한번만 호출될 수 있도록 [] 추가\r\n    [])\r\n \r\n    return(\r\n        <div>\r\n            <h2>Login</h2>\r\n            <div>\r\n                <label htmlFor='input_id'>ID : </label>\r\n                <input type='text' name='input_id' value={inputId} onChange={handleInputId} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='input_pw'>PW : </label>\r\n                <input type='password' name='input_pw' value={inputPw} onChange={handleInputPw} />\r\n            </div>\r\n            <div>\r\n                <button type='button' onClick={onClickLogin}>Login</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Login;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAIhB;;EACG,MAAMQ,aAAa,GAAIC,CAAD,IAAO;IACzBJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;EACH,CAFD;;EAIA,MAAMC,aAAa,GAAIH,CAAD,IAAO;IACzBF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;EACH,CAFD,CATa,CAahB;;;EACG,MAAME,YAAY,GAAG,MAAM;IACvBC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACH,CAFD,CAda,CAkBhB;;;EACGd,SAAS,CAAC,MAAM;IACZC,KAAK,CAACc,GAAN,CAAU,oBAAV,EACCC,IADD,CACMC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CADb,EAECC,KAFD;EAGH,CAJQ,EAKT;EACA,EANS,CAAT;EAQA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,wBACI;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,UAAxB;QAAmC,KAAK,EAAEf,OAA1C;QAAmD,QAAQ,EAAEI;MAA7D;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAMI;MAAA,wBACI;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,UAAZ;QAAuB,IAAI,EAAC,UAA5B;QAAuC,KAAK,EAAEF,OAA9C;QAAuD,QAAQ,EAAEM;MAAjE;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAUI;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEC,YAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GA3CQV,K;;KAAAA,K;AA6CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
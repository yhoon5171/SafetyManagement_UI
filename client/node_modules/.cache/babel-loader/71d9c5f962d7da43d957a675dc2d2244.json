{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3'; // export default function App() {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   const [web3, setWeb3] = useState(\"\");\n//   const [account, setAccount] = useState(\"\");\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\n//   const [ttype, setTtype] = useState(\"\");\n//   const componentWillMount = async() => {\n//     const wweb3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     setWeb3((web3) => wweb3);\n//     this.instantiateContract();\n//     // this.setState({\n//     //   web3: web3s\n//     // }, () => {\n//     //   this.instantiateContract();\n//     // })\n//     console.log(web3)\n//   }\n//   const instantiateContract = async() => {\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(web3);\n//     transaction.setProvider(web3.currentProvider);\n//     web3.eth.getAccount((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           setTransactionInstance((transactionInstance) => instance);\n//           setAccount((account) => accounts[0]);\n//         })\n//       }\n//     })\n//   }\n//   const sendTransaction = async() => {\n//     transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n// // updateAllTransactions() {\n// //   this.state.transactionInstance.getAllTransactions.then(result => {\n// //     this.setState ({ttype: result})\n// //   })\n// // }\n//   return (\n//     componentWillMount(),\n//     <div>\n//       <input type=\"text\" placeholder=\"Type\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Name\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Time\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Registrant\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Type\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Description\"></input>\n//       <br></br>\n//       {/* <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br> */}\n//       <p>Your account: {account}</p>\n//       <br></br>\n//       <button onClick={() => this.sendTransaction()}>\n//         트랜잭션 추가\n//       </button>\n//       <br></br>\n//       <p>all transactions:</p>\n//       <br></br>\n//       <p>{ttype}</p>\n//     </div>\n//   )\n// }\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n// updateAllTransactions() {\n//   this.state.transactionInstance.getAllTransactions.then(result => {\n//     this.setState ({ttype: result})\n//   })\n// }\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      account: null,\n      transactionInstance: null,\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  }\n\n  async componentWillMount() {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    this.setState({\n      web3: web3\n    }, () => {\n      this.instantiateContract();\n    });\n    console.log(web3);\n  }\n\n  async instantiateContract() {\n    const contract = require(\"truffle-contract\");\n\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error) {\n        transaction.deployed().then(instance => {\n          this.setState({\n            transactionInstance: instance,\n            account: accounts[0]\n          }); //this.updateAllTransactions();\n        });\n      }\n    });\n  }\n\n  async sendTransaction() {\n    await this.state.transactionInstance.sendTransaction({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\"),\n      gas: 100000\n    });\n    this.updateAllTransactions();\n  }\n\n  async updateAllTransactions() {\n    await this.state.transactionInstance.getAllTransactions().then(result => {\n      this.setState({\n        ttype: result\n      });\n      console.log(this.state.ttype);\n    });\n  }\n\n  async render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"IPFS Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Registrant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Responsible Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => this.sendTransaction(),\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => this.updateAllTransactions(),\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uC5EC\\uC8FC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"all transactions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.ttype\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","App","constructor","props","state","web3","account","transactionInstance","ttype","name","timestamp","ipfs_hash","registrant","responsible_manager","file_type","file_description","componentWillMount","providers","HttpProvider","setState","instantiateContract","console","log","contract","require","transaction","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","sendTransaction","from","value","utils","toWei","gas","updateAllTransactions","getAllTransactions","result","render"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\n\n\n// export default function App() {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   const [web3, setWeb3] = useState(\"\");\n//   const [account, setAccount] = useState(\"\");\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\n//   const [ttype, setTtype] = useState(\"\");\n\n//   const componentWillMount = async() => {\n//     const wweb3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n\n//     setWeb3((web3) => wweb3);\n//     this.instantiateContract();\n//     // this.setState({\n//     //   web3: web3s\n//     // }, () => {\n//     //   this.instantiateContract();\n//     // })\n//     console.log(web3)\n//   }\n\n//   const instantiateContract = async() => {\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(web3);\n//     transaction.setProvider(web3.currentProvider);\n//     web3.eth.getAccount((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           setTransactionInstance((transactionInstance) => instance);\n//           setAccount((account) => accounts[0]);\n//         })\n//       }\n//     })\n//   }\n\n//   const sendTransaction = async() => {\n//     transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n\n// // updateAllTransactions() {\n// //   this.state.transactionInstance.getAllTransactions.then(result => {\n// //     this.setState ({ttype: result})\n// //   })\n// // }\n\n//   return (\n//     componentWillMount(),\n\n//     <div>\n//       <input type=\"text\" placeholder=\"Type\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Name\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Time\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Registrant\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Type\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Description\"></input>\n//       <br></br>\n      \n//       {/* <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br> */}\n\n//       <p>Your account: {account}</p>\n//       <br></br>\n\n//       <button onClick={() => this.sendTransaction()}>\n//         트랜잭션 추가\n//       </button>\n//       <br></br>\n\n//       <p>all transactions:</p>\n//       <br></br>\n//       <p>{ttype}</p>\n//     </div>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n\n// updateAllTransactions() {\n//   this.state.transactionInstance.getAllTransactions.then(result => {\n//     this.setState ({ttype: result})\n//   })\n// }\n\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n        \n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      web3: null,\n      account: null,\n      transactionInstance: null,\n\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  }\n\n  async componentWillMount() {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    this.setState({\n      web3: web3\n    }, () => {\n      this.instantiateContract();\n    })\n    console.log(web3)\n  }\n\n  async instantiateContract(){\n    const contract = require(\"truffle-contract\");\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error){\n        transaction.deployed().then(instance => {\n          this.setState({transactionInstance: instance, account: accounts[0]});\n          //this.updateAllTransactions();\n        })\n      }\n    })\n  }\n\n  async sendTransaction() {\n    await this.state.transactionInstance.sendTransaction({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\"),\n      gas: 100000\n    })\n    this.updateAllTransactions();\n  }\n\nasync updateAllTransactions() {\n  await this.state.transactionInstance.getAllTransactions().then(result => {\n    this.setState ({ttype: result})\n    console.log(this.state.ttype);\n  })\n}\n\n  async render() {\n    return (\n      <div>\n        <input type=\"text\" placeholder=\"Type\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Name\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Time\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Registrant\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"File Type\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"File Description\"></input>\n        <br></br>\n        \n        {/* <FileUpload setUrl={setFileUrl} />\n        FileUrl :{\" \"}\n        <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          {fileUrl}\n        </a>\n        <br></br> */}\n\n        <p>Your account: {this.state.account}</p>\n        <br></br>\n\n        <button onClick={async () => this.sendTransaction()}>\n          트랜잭션 추가\n        </button>\n        <button onClick={async () => this.updateAllTransactions()}>\n          트랜잭션 보여주기\n        </button>\n        <br></br>\n\n        <p>all transactions:</p>\n        <br></br>\n        <p>{this.state.ttype}</p>\n      </div>\n    )\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,WAAP;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAcA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;EAC1BS,W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"},"metadata":{},"sourceType":"module"}
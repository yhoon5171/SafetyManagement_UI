{"ast":null,"code":"'use strict';\n\nvar basics = require('multiformats/basics');\n\nvar alloc = require('../alloc.js');\n\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  };\n}\n\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = alloc.allocUnsafe(str.length);\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: basics.bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...basics.bases\n};\nmodule.exports = BASES;","map":{"version":3,"names":["basics","require","alloc","createCodec","name","prefix","encode","decode","encoder","decoder","string","buf","TextDecoder","str","TextEncoder","substring","ascii","i","length","String","fromCharCode","allocUnsafe","charCodeAt","BASES","utf8","hex","bases","base16","latin1","binary","module","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/uint8arrays/cjs/src/util/bases.js"],"sourcesContent":["'use strict';\r\n\r\nvar basics = require('multiformats/basics');\r\nvar alloc = require('../alloc.js');\r\n\r\nfunction createCodec(name, prefix, encode, decode) {\r\n  return {\r\n    name,\r\n    prefix,\r\n    encoder: {\r\n      name,\r\n      prefix,\r\n      encode\r\n    },\r\n    decoder: { decode }\r\n  };\r\n}\r\nconst string = createCodec('utf8', 'u', buf => {\r\n  const decoder = new TextDecoder('utf8');\r\n  return 'u' + decoder.decode(buf);\r\n}, str => {\r\n  const encoder = new TextEncoder();\r\n  return encoder.encode(str.substring(1));\r\n});\r\nconst ascii = createCodec('ascii', 'a', buf => {\r\n  let string = 'a';\r\n  for (let i = 0; i < buf.length; i++) {\r\n    string += String.fromCharCode(buf[i]);\r\n  }\r\n  return string;\r\n}, str => {\r\n  str = str.substring(1);\r\n  const buf = alloc.allocUnsafe(str.length);\r\n  for (let i = 0; i < str.length; i++) {\r\n    buf[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n});\r\nconst BASES = {\r\n  utf8: string,\r\n  'utf-8': string,\r\n  hex: basics.bases.base16,\r\n  latin1: ascii,\r\n  ascii: ascii,\r\n  binary: ascii,\r\n  ...basics.bases\r\n};\r\n\r\nmodule.exports = BASES;\r\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AAEA,SAASE,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,MAA3C,EAAmD;EACjD,OAAO;IACLH,IADK;IAELC,MAFK;IAGLG,OAAO,EAAE;MACPJ,IADO;MAEPC,MAFO;MAGPC;IAHO,CAHJ;IAQLG,OAAO,EAAE;MAAEF;IAAF;EARJ,CAAP;AAUD;;AACD,MAAMG,MAAM,GAAGP,WAAW,CAAC,MAAD,EAAS,GAAT,EAAcQ,GAAG,IAAI;EAC7C,MAAMF,OAAO,GAAG,IAAIG,WAAJ,CAAgB,MAAhB,CAAhB;EACA,OAAO,MAAMH,OAAO,CAACF,MAAR,CAAeI,GAAf,CAAb;AACD,CAHyB,EAGvBE,GAAG,IAAI;EACR,MAAML,OAAO,GAAG,IAAIM,WAAJ,EAAhB;EACA,OAAON,OAAO,CAACF,MAAR,CAAeO,GAAG,CAACE,SAAJ,CAAc,CAAd,CAAf,CAAP;AACD,CANyB,CAA1B;AAOA,MAAMC,KAAK,GAAGb,WAAW,CAAC,OAAD,EAAU,GAAV,EAAeQ,GAAG,IAAI;EAC7C,IAAID,MAAM,GAAG,GAAb;;EACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACO,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;IACnCP,MAAM,IAAIS,MAAM,CAACC,YAAP,CAAoBT,GAAG,CAACM,CAAD,CAAvB,CAAV;EACD;;EACD,OAAOP,MAAP;AACD,CANwB,EAMtBG,GAAG,IAAI;EACRA,GAAG,GAAGA,GAAG,CAACE,SAAJ,CAAc,CAAd,CAAN;EACA,MAAMJ,GAAG,GAAGT,KAAK,CAACmB,WAAN,CAAkBR,GAAG,CAACK,MAAtB,CAAZ;;EACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;IACnCN,GAAG,CAACM,CAAD,CAAH,GAASJ,GAAG,CAACS,UAAJ,CAAeL,CAAf,CAAT;EACD;;EACD,OAAON,GAAP;AACD,CAbwB,CAAzB;AAcA,MAAMY,KAAK,GAAG;EACZC,IAAI,EAAEd,MADM;EAEZ,SAASA,MAFG;EAGZe,GAAG,EAAEzB,MAAM,CAAC0B,KAAP,CAAaC,MAHN;EAIZC,MAAM,EAAEZ,KAJI;EAKZA,KAAK,EAAEA,KALK;EAMZa,MAAM,EAAEb,KANI;EAOZ,GAAGhB,MAAM,CAAC0B;AAPE,CAAd;AAUAI,MAAM,CAACC,OAAP,GAAiBR,KAAjB"},"metadata":{},"sourceType":"script"}
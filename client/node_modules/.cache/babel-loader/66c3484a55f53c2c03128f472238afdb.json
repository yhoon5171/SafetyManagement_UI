{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n  constructor(localName) {\n    super(\"address\", \"address\", localName, false);\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000\";\n  }\n\n  encode(writer, value) {\n    try {\n      value = getAddress(value);\n    } catch (error) {\n      this._throwError(error.message, value);\n    }\n\n    return writer.writeValue(value);\n  }\n\n  decode(reader) {\n    return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n  }\n\n}","map":{"version":3,"sources":["../../src.ts/coders/address.ts"],"names":[],"mappings":"AAAA;;AAEA,SAAS,UAAT,QAA2B,wBAA3B;AACA,SAAS,UAAT,QAA2B,sBAA3B;AAEA,SAAS,KAAT,QAAsC,kBAAtC;AAEA,OAAM,MAAO,YAAP,SAA4B,KAA5B,CAAiC;EAEnC,WAAA,CAAY,SAAZ,EAA6B;IACzB,MAAM,SAAN,EAAiB,SAAjB,EAA4B,SAA5B,EAAuC,KAAvC;EACH;;EAED,YAAY,GAAA;IACR,OAAO,4CAAP;EACH;;EAED,MAAM,CAAC,MAAD,EAAiB,KAAjB,EAA8B;IAChC,IAAI;MACA,KAAK,GAAG,UAAU,CAAC,KAAD,CAAlB;IACH,CAFD,CAEE,OAAO,KAAP,EAAc;MACZ,KAAK,WAAL,CAAiB,KAAK,CAAC,OAAvB,EAAgC,KAAhC;IACH;;IACD,OAAO,MAAM,CAAC,UAAP,CAAkB,KAAlB,CAAP;EACH;;EAED,MAAM,CAAC,MAAD,EAAe;IACjB,OAAO,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,SAAP,GAAmB,WAAnB,EAAD,EAAmC,EAAnC,CAAX,CAAjB;EACH;;AArBkC","sourceRoot":"","sourcesContent":["\"use strict\";\r\nimport { getAddress } from \"@ethersproject/address\";\r\nimport { hexZeroPad } from \"@ethersproject/bytes\";\r\nimport { Coder } from \"./abstract-coder\";\r\nexport class AddressCoder extends Coder {\r\n    constructor(localName) {\r\n        super(\"address\", \"address\", localName, false);\r\n    }\r\n    defaultValue() {\r\n        return \"0x0000000000000000000000000000000000000000\";\r\n    }\r\n    encode(writer, value) {\r\n        try {\r\n            value = getAddress(value);\r\n        }\r\n        catch (error) {\r\n            this._throwError(error.message, value);\r\n        }\r\n        return writer.writeValue(value);\r\n    }\r\n    decode(reader) {\r\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\r\n    }\r\n}\r\n//# sourceMappingURL=address.js.map"]},"metadata":{},"sourceType":"module"}
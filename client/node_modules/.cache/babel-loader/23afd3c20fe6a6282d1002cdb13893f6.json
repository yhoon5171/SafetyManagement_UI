{"ast":null,"code":"var Blockchain = {\n  getBlockByNumber: function getBlockByNumber(blockNumber, provider, callback) {\n    var params = [blockNumber, true];\n    provider.send({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBlockByNumber\",\n      params: params,\n      id: Date.now()\n    }, callback);\n  },\n  getBlockByHash: function getBlockByHash(blockHash, provider, callback) {\n    var params = [blockHash, true];\n    provider.send({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBlockByHash\",\n      params: params,\n      id: Date.now()\n    }, callback);\n  },\n  parse: function parse(uri) {\n    var parsed = {};\n    if (uri.indexOf(\"blockchain://\") !== 0) return parsed;\n    var cleanUri = uri.replace(\"blockchain://\", \"\");\n    var pieces = cleanUri.split(\"/block/\");\n    parsed.genesis_hash = \"0x\".concat(pieces[0]);\n    parsed.block_hash = \"0x\".concat(pieces[1]);\n    return parsed;\n  },\n  asURI: function asURI(provider, callback) {\n    var _this = this;\n\n    var genesis, latest;\n    this.getBlockByNumber(\"0x0\", provider, function (err, _ref) {\n      var result = _ref.result;\n      if (err) return callback(err);\n      genesis = result;\n\n      _this.getBlockByNumber(\"latest\", provider, function (err, _ref2) {\n        var result = _ref2.result;\n        if (err) return callback(err);\n        latest = result;\n        var url = \"blockchain://\".concat(genesis.hash.replace(\"0x\", \"\"), \"/block/\").concat(latest.hash.replace(\"0x\", \"\"));\n        callback(null, url);\n      });\n    });\n  },\n  matches: function matches(uri, provider, callback) {\n    var _this2 = this;\n\n    var parsedUri = this.parse(uri);\n    var expected_genesis = parsedUri.genesis_hash;\n    var expected_block = parsedUri.block_hash;\n    this.getBlockByNumber(\"0x0\", provider, function (err, _ref3) {\n      var result = _ref3.result;\n      if (err) return callback(err);\n      var block = result;\n      if (block.hash !== expected_genesis) return callback(null, false);\n\n      _this2.getBlockByHash(expected_block, provider, function (err, _ref4) {\n        var result = _ref4.result;\n        // Treat an error as if the block didn't exist. This is because\n        // some clients respond differently.\n        var block = result;\n\n        if (err || block == null) {\n          return callback(null, false);\n        }\n\n        callback(null, true);\n      });\n    });\n  }\n};\nmodule.exports = Blockchain;","map":{"version":3,"names":["Blockchain","getBlockByNumber","blockNumber","provider","callback","params","send","jsonrpc","method","id","Date","now","getBlockByHash","blockHash","parse","uri","parsed","indexOf","cleanUri","replace","pieces","split","genesis_hash","block_hash","asURI","genesis","latest","err","result","url","hash","matches","parsedUri","expected_genesis","expected_block","block","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/@truffle/blockchain-utils/index.js"],"sourcesContent":["const Blockchain = {\r\n  getBlockByNumber(blockNumber, provider, callback) {\r\n    const params = [blockNumber, true];\r\n    provider.send(\r\n      {\r\n        jsonrpc: \"2.0\",\r\n        method: \"eth_getBlockByNumber\",\r\n        params,\r\n        id: Date.now()\r\n      },\r\n      callback\r\n    );\r\n  },\r\n\r\n  getBlockByHash(blockHash, provider, callback) {\r\n    const params = [blockHash, true];\r\n    provider.send(\r\n      {\r\n        jsonrpc: \"2.0\",\r\n        method: \"eth_getBlockByHash\",\r\n        params,\r\n        id: Date.now()\r\n      },\r\n      callback\r\n    );\r\n  },\r\n\r\n  parse(uri) {\r\n    const parsed = {};\r\n    if (uri.indexOf(\"blockchain://\") !== 0) return parsed;\r\n\r\n    const cleanUri = uri.replace(\"blockchain://\", \"\");\r\n\r\n    const pieces = cleanUri.split(\"/block/\");\r\n\r\n    parsed.genesis_hash = `0x${pieces[0]}`;\r\n    parsed.block_hash = `0x${pieces[1]}`;\r\n\r\n    return parsed;\r\n  },\r\n\r\n  asURI(provider, callback) {\r\n    let genesis, latest;\r\n\r\n    this.getBlockByNumber(\"0x0\", provider, (err, { result }) => {\r\n      if (err) return callback(err);\r\n      genesis = result;\r\n\r\n      this.getBlockByNumber(\"latest\", provider, (err, { result }) => {\r\n        if (err) return callback(err);\r\n        latest = result;\r\n        const url = `blockchain://${genesis.hash.replace(\r\n          \"0x\",\r\n          \"\"\r\n        )}/block/${latest.hash.replace(\"0x\", \"\")}`;\r\n        callback(null, url);\r\n      });\r\n    });\r\n  },\r\n\r\n  matches(uri, provider, callback) {\r\n    const parsedUri = this.parse(uri);\r\n\r\n    const expected_genesis = parsedUri.genesis_hash;\r\n    const expected_block = parsedUri.block_hash;\r\n\r\n    this.getBlockByNumber(\"0x0\", provider, (err, { result }) => {\r\n      if (err) return callback(err);\r\n      const block = result;\r\n      if (block.hash !== expected_genesis) return callback(null, false);\r\n\r\n      this.getBlockByHash(expected_block, provider, (err, { result }) => {\r\n        // Treat an error as if the block didn't exist. This is because\r\n        // some clients respond differently.\r\n        const block = result;\r\n        if (err || block == null) {\r\n          return callback(null, false);\r\n        }\r\n\r\n        callback(null, true);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nmodule.exports = Blockchain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createLocalAddrs = configure.configure(function (api) {\n  function localAddrs() {\n    return _localAddrs.apply(this, arguments);\n  }\n\n  function _localAddrs() {\n    _localAddrs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n          res,\n          _yield$res$json,\n          Strings,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('swarm/addrs/local', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Strings = _yield$res$json.Strings;\n              return _context.abrupt(\"return\", (Strings || []).map(function (a) {\n                return new multiaddr.Multiaddr(a);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _localAddrs.apply(this, arguments);\n  }\n\n  return localAddrs;\n});\nexports.createLocalAddrs = createLocalAddrs;","map":{"version":3,"names":["Object","defineProperty","exports","value","multiaddr","require","configure","toUrlSearchParams","createLocalAddrs","api","localAddrs","options","post","signal","searchParams","headers","res","json","Strings","map","a","Multiaddr"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/swarm/local-addrs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createLocalAddrs = configure.configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return (Strings || []).map(a => new multiaddr.Multiaddr(a));\n  }\n  return localAddrs;\n});\n\nexports.createLocalAddrs = createLocalAddrs;\n"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAMG,gBAAgB,GAAGF,SAAS,CAACA,SAAV,CAAoB,UAAAG,GAAG,EAAI;EAAA,SACnCC,UADmC;IAAA;EAAA;;EAAA;IAAA,yEAClD;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAA0BC,OAA1B,2DAAoC,EAApC;cAAA;cAAA,OACoBF,GAAG,CAACG,IAAJ,CAAS,mBAAT,EAA8B;gBAC9CC,MAAM,EAAEF,OAAO,CAACE,MAD8B;gBAE9CC,YAAY,EAAEP,iBAAiB,CAACA,iBAAlB,CAAoCI,OAApC,CAFgC;gBAG9CI,OAAO,EAAEJ,OAAO,CAACI;cAH6B,CAA9B,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OAM0BA,GAAG,CAACC,IAAJ,EAN1B;;YAAA;cAAA;cAMSC,OANT,mBAMSA,OANT;cAAA,iCAOS,CAACA,OAAO,IAAI,EAAZ,EAAgBC,GAAhB,CAAoB,UAAAC,CAAC;gBAAA,OAAI,IAAIhB,SAAS,CAACiB,SAAd,CAAwBD,CAAxB,CAAJ;cAAA,CAArB,CAPT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CADkD;IAAA;EAAA;;EAUlD,OAAOV,UAAP;AACD,CAXwB,CAAzB;AAaAR,OAAO,CAACM,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}
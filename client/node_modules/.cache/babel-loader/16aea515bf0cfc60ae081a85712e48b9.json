{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file ResolverMethodHandler.js\r\n *\r\n * @author Samuel Furter <samuel@ethereum.org>\r\n * @date 2018\r\n */\n\"use strict\";\n\nvar PromiEvent = require('web3-core-promievent');\n\nvar namehash = require('eth-ens-namehash');\n\nvar _ = require('underscore');\n/**\r\n * @param {Registry} registry\r\n * @constructor\r\n */\n\n\nfunction ResolverMethodHandler(registry) {\n  this.registry = registry;\n}\n/**\r\n * Executes an resolver method and returns an eventifiedPromise\r\n *\r\n * @param {string} ensName\r\n * @param {string} methodName\r\n * @param {array} methodArguments\r\n * @param {function} callback\r\n * @returns {Object}\r\n */\n\n\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, callback) {\n  return {\n    call: this.call.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this\n    }),\n    send: this.send.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this\n    })\n  };\n};\n/**\r\n * Executes call\r\n *\r\n * @returns {eventifiedPromise}\r\n */\n\n\nResolverMethodHandler.prototype.call = function (callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  this.parent.registry.resolver(this.ensName).then(function (resolver) {\n    self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, callback);\n  }).catch(function (error) {\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\r\n * Executes send\r\n *\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  this.parent.registry.resolver(this.ensName).then(function (resolver) {\n    self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n  }).catch(function (error) {\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\r\n * Handles a call method\r\n *\r\n * @param {eventifiedPromise} promiEvent\r\n * @param {function} method\r\n * @param {array} preparedArguments\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, callback) {\n  method.apply(this, preparedArguments).call().then(function (receipt) {\n    promiEvent.resolve(receipt);\n\n    if (_.isFunction(callback)) {\n      callback(receipt);\n    }\n  }).catch(function (error) {\n    promiEvent.reject(error);\n\n    if (_.isFunction(callback)) {\n      callback(error);\n    }\n  });\n  return promiEvent;\n};\n/**\r\n * Handles a send method\r\n *\r\n * @param {eventifiedPromise} promiEvent\r\n * @param {function} method\r\n * @param {array} preparedArguments\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\n\n\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n  method.apply(this, preparedArguments).send(sendOptions).on('transactionHash', function (hash) {\n    promiEvent.eventEmitter.emit('transactionHash', hash);\n  }).on('confirmation', function (confirmationNumber, receipt) {\n    promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n  }).on('receipt', function (receipt) {\n    promiEvent.eventEmitter.emit('receipt', receipt);\n    promiEvent.resolve(receipt);\n\n    if (_.isFunction(callback)) {\n      callback(receipt);\n    }\n  }).on('error', function (error) {\n    promiEvent.eventEmitter.emit('error', error);\n    promiEvent.reject(error);\n\n    if (_.isFunction(callback)) {\n      callback(error);\n    }\n  });\n  return promiEvent;\n};\n/**\r\n * Adds the ENS node to the arguments\r\n *\r\n * @param {string} name\r\n * @param {array} methodArguments\r\n * @returns {array}\r\n */\n\n\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n  var node = namehash.hash(name);\n\n  if (methodArguments.length > 0) {\n    methodArguments.unshift(node);\n    return methodArguments;\n  }\n\n  return [node];\n};\n\nmodule.exports = ResolverMethodHandler;","map":{"version":3,"names":["PromiEvent","require","namehash","_","ResolverMethodHandler","registry","prototype","method","ensName","methodName","methodArguments","callback","call","bind","parent","send","self","promiEvent","preparedArguments","prepareArguments","resolver","then","handleCall","methods","catch","error","reject","eventEmitter","sendOptions","handleSend","apply","receipt","resolve","isFunction","on","hash","emit","confirmationNumber","name","node","length","unshift","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/truffle-interface-adapter/node_modules/web3-eth-ens/src/lib/ResolverMethodHandler.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file ResolverMethodHandler.js\r\n *\r\n * @author Samuel Furter <samuel@ethereum.org>\r\n * @date 2018\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar PromiEvent = require('web3-core-promievent');\r\nvar namehash = require('eth-ens-namehash');\r\nvar _ = require('underscore');\r\n\r\n/**\r\n * @param {Registry} registry\r\n * @constructor\r\n */\r\nfunction ResolverMethodHandler(registry) {\r\n    this.registry = registry;\r\n}\r\n\r\n/**\r\n * Executes an resolver method and returns an eventifiedPromise\r\n *\r\n * @param {string} ensName\r\n * @param {string} methodName\r\n * @param {array} methodArguments\r\n * @param {function} callback\r\n * @returns {Object}\r\n */\r\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, callback) {\r\n    return {\r\n        call: this.call.bind({\r\n            ensName: ensName,\r\n            methodName: methodName,\r\n            methodArguments: methodArguments,\r\n            callback: callback,\r\n            parent: this\r\n        }),\r\n        send: this.send.bind({\r\n            ensName: ensName,\r\n            methodName: methodName,\r\n            methodArguments: methodArguments,\r\n            callback: callback,\r\n            parent: this\r\n        })\r\n    };\r\n};\r\n\r\n/**\r\n * Executes call\r\n *\r\n * @returns {eventifiedPromise}\r\n */\r\nResolverMethodHandler.prototype.call = function (callback) {\r\n    var self = this;\r\n    var promiEvent = new PromiEvent();\r\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\r\n\r\n    this.parent.registry.resolver(this.ensName).then(function (resolver) {\r\n        self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, callback);\r\n    }).catch(function (error) {\r\n        promiEvent.reject(error);\r\n    });\r\n\r\n    return promiEvent.eventEmitter;\r\n};\r\n\r\n\r\n/**\r\n * Executes send\r\n *\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\r\n    var self = this;\r\n    var promiEvent = new PromiEvent();\r\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\r\n\r\n    this.parent.registry.resolver(this.ensName).then(function (resolver) {\r\n        self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\r\n    }).catch(function (error) {\r\n        promiEvent.reject(error);\r\n    });\r\n\r\n    return promiEvent.eventEmitter;\r\n};\r\n\r\n/**\r\n * Handles a call method\r\n *\r\n * @param {eventifiedPromise} promiEvent\r\n * @param {function} method\r\n * @param {array} preparedArguments\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, callback) {\r\n    method.apply(this, preparedArguments).call()\r\n        .then(function (receipt) {\r\n            promiEvent.resolve(receipt);\r\n\r\n            if (_.isFunction(callback)) {\r\n                callback(receipt);\r\n            }\r\n        }).catch(function (error) {\r\n            promiEvent.reject(error);\r\n\r\n            if (_.isFunction(callback)) {\r\n                callback(error);\r\n            }\r\n        });\r\n\r\n    return promiEvent;\r\n};\r\n\r\n/**\r\n * Handles a send method\r\n *\r\n * @param {eventifiedPromise} promiEvent\r\n * @param {function} method\r\n * @param {array} preparedArguments\r\n * @param {Object} sendOptions\r\n * @param {function} callback\r\n * @returns {eventifiedPromise}\r\n */\r\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\r\n    method.apply(this, preparedArguments).send(sendOptions)\r\n        .on('transactionHash', function (hash) {\r\n            promiEvent.eventEmitter.emit('transactionHash', hash);\r\n        })\r\n        .on('confirmation', function (confirmationNumber, receipt) {\r\n            promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\r\n        })\r\n        .on('receipt', function (receipt) {\r\n            promiEvent.eventEmitter.emit('receipt', receipt);\r\n            promiEvent.resolve(receipt);\r\n\r\n            if (_.isFunction(callback)) {\r\n                callback(receipt);\r\n            }\r\n        })\r\n        .on('error', function (error) {\r\n            promiEvent.eventEmitter.emit('error', error);\r\n            promiEvent.reject(error);\r\n\r\n            if (_.isFunction(callback)) {\r\n                callback(error);\r\n            }\r\n        });\r\n\r\n    return promiEvent;\r\n};\r\n\r\n/**\r\n * Adds the ENS node to the arguments\r\n *\r\n * @param {string} name\r\n * @param {array} methodArguments\r\n * @returns {array}\r\n */\r\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\r\n    var node = namehash.hash(name);\r\n\r\n    if (methodArguments.length > 0) {\r\n        methodArguments.unshift(node);\r\n\r\n        return methodArguments;\r\n    }\r\n\r\n    return [node];\r\n};\r\n\r\nmodule.exports = ResolverMethodHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
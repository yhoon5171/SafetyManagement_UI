{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createPeers = configure.configure(api => {\n  async function peers() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {\n      Peers\n    } = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new multiaddr.Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n\n  return peers;\n});\nexports.createPeers = createPeers;","map":{"version":3,"names":["Object","defineProperty","exports","value","multiaddr","require","configure","toUrlSearchParams","createPeers","api","peers","options","res","post","signal","searchParams","headers","Peers","json","map","peer","addr","Multiaddr","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","undefined"],"sources":["C:/Users/mcnl/Desktop/gong/test/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/swarm/peers.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createPeers = configure.configure(api => {\n  async function peers(options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new multiaddr.Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});\n\nexports.createPeers = createPeers;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAMG,WAAW,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;EAC7C,eAAeC,KAAf,GAAmC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;MACxCC,MAAM,EAAEH,OAAO,CAACG,MADwB;MAExCC,YAAY,EAAER,iBAAiB,CAACA,iBAAlB,CAAoCI,OAApC,CAF0B;MAGxCK,OAAO,EAAEL,OAAO,CAACK;IAHuB,CAAxB,CAAlB;IAKA,MAAM;MAACC;IAAD,IAAU,MAAML,GAAG,CAACM,IAAJ,EAAtB;IACA,OAAO,CAACD,KAAK,IAAI,EAAV,EAAcE,GAAd,CAAkBC,IAAI,IAAI;MAC/B,OAAO;QACLC,IAAI,EAAE,IAAIjB,SAAS,CAACkB,SAAd,CAAwBF,IAAI,CAACG,IAA7B,CADD;QAELH,IAAI,EAAEA,IAAI,CAACI,IAFN;QAGLC,KAAK,EAAEL,IAAI,CAACM,KAHP;QAILC,OAAO,EAAEP,IAAI,CAACQ,OAJT;QAKLC,OAAO,EAAET,IAAI,CAACU,OALT;QAMLC,SAAS,EAAEX,IAAI,CAACY,SAAL,IAAkB,IAAlB,GAAyBC,SAAzB,GAAqCb,IAAI,CAACY,SAAL,KAAmB,CAAnB,GAAuB,SAAvB,GAAmC;MAN9E,CAAP;IAQD,CATM,CAAP;EAUD;;EACD,OAAOtB,KAAP;AACD,CApBmB,CAApB;AAsBAR,OAAO,CAACM,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/**\r\n * Turns a browser readable stream into an async iterable. Async iteration over\r\n * returned iterable will lock give stream, preventing any other consumer from\r\n * acquiring a reader. The lock will be released if iteration loop is broken. To\r\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\r\n * as a second argument.\r\n * @template T\r\n * @param {ReadableStream<T>} stream\r\n * @param {Object} [options]\r\n * @param {boolean} [options.preventCancel=boolean]\r\n * @returns {AsyncIterable<T>}\r\n */\n\nvar _regeneratorRuntime = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _awaitAsyncGenerator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nfunction browserReadableStreamToIt(_x) {\n  return _browserReadableStreamToIt.apply(this, arguments);\n}\n\nfunction _browserReadableStreamToIt() {\n  _browserReadableStreamToIt = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(stream) {\n    var options,\n        reader,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            reader = stream.getReader();\n            _context.prev = 2;\n\n          case 3:\n            if (!true) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 6;\n            return _awaitAsyncGenerator(reader.read());\n\n          case 6:\n            result = _context.sent;\n\n            if (!result.done) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 9:\n            _context.next = 11;\n            return result.value;\n\n          case 11:\n            _context.next = 3;\n            break;\n\n          case 13:\n            _context.prev = 13;\n\n            if (options.preventCancel !== true) {\n              reader.cancel();\n            }\n\n            reader.releaseLock();\n            return _context.finish(13);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2,, 13, 17]]);\n  }));\n  return _browserReadableStreamToIt.apply(this, arguments);\n}\n\nmodule.exports = browserReadableStreamToIt;","map":{"version":3,"names":["browserReadableStreamToIt","stream","options","reader","getReader","read","result","done","value","preventCancel","cancel","releaseLock","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/browser-readablestream-to-it/index.js"],"sourcesContent":["'use strict'\r\n\r\n/**\r\n * Turns a browser readable stream into an async iterable. Async iteration over\r\n * returned iterable will lock give stream, preventing any other consumer from\r\n * acquiring a reader. The lock will be released if iteration loop is broken. To\r\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\r\n * as a second argument.\r\n * @template T\r\n * @param {ReadableStream<T>} stream\r\n * @param {Object} [options]\r\n * @param {boolean} [options.preventCancel=boolean]\r\n * @returns {AsyncIterable<T>}\r\n */\r\nasync function * browserReadableStreamToIt (stream, options = {}) {\r\n  const reader = stream.getReader()\r\n\r\n  try {\r\n    while (true) {\r\n      const result = await reader.read()\r\n\r\n      if (result.done) {\r\n        return\r\n      }\r\n\r\n      yield result.value\r\n    }\r\n  } finally {\r\n    if (options.preventCancel !== true) {\r\n      reader.cancel()\r\n    }\r\n\r\n    reader.releaseLock()\r\n  }\r\n}\r\n\r\nmodule.exports = browserReadableStreamToIt\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;SACiBA,yB;;;;;4FAAjB,iBAA4CC,MAA5C;IAAA;IAAA;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;YAAoDC,OAApD,2DAA8D,EAA9D;YACQC,MADR,GACiBF,MAAM,CAACG,SAAP,EADjB;YAAA;;UAAA;YAAA,KAIW,IAJX;cAAA;cAAA;YAAA;;YAAA;YAAA,4BAK2BD,MAAM,CAACE,IAAP,EAL3B;;UAAA;YAKYC,MALZ;;YAAA,KAOUA,MAAM,CAACC,IAPjB;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;YAWM,OAAMD,MAAM,CAACE,KAAb;;UAXN;YAAA;YAAA;;UAAA;YAAA;;YAcI,IAAIN,OAAO,CAACO,aAAR,KAA0B,IAA9B,EAAoC;cAClCN,MAAM,CAACO,MAAP;YACD;;YAEDP,MAAM,CAACQ,WAAP;YAlBJ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAsBAC,MAAM,CAACC,OAAP,GAAiBb,yBAAjB"},"metadata":{},"sourceType":"script"}
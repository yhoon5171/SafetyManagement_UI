{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcnl\\\\Desktop\\\\gong\\\\BlockchainSafetyManagement\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [web3, setWeb3] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  const [registrant, setRegsitrant] = useState(\"\");\n  const [responsibleManager, setResponsibleManager] = useState(\"\");\n  const [fileType, setFileType] = useState(\"\");\n  const [fileDescription, setFileDescription] = useState(\"\");\n  const [transactionCnt, setTransactionCnt] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [ipfsHash_, setIpfsHash_] = useState(\"\");\n  const [category_, setCategory_] = useState(\"\");\n  const [name_, setName_] = useState(\"\");\n  const [registrant_, setRegsitrant_] = useState(\"\");\n  const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n  const [fileType_, setFileType_] = useState(\"\");\n  const [fileDescription_, setFileDescription_] = useState(\"\");\n  useEffect(() => {\n    async function componentWillMount(e) {\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n      setWeb3(web3);\n      console.log(web3);\n\n      const contract = require(\"truffle-contract\");\n\n      const transaction = contract(TransactionContract);\n      console.log(web3);\n      transaction.setProvider(web3.currentProvider);\n      web3.eth.getAccounts((error, accounts) => {\n        if (!error) {\n          transaction.deployed().then(instance => {\n            setTransactionInstance(instance);\n            setAccount(accounts[0]); //this.updateAllTransactions();\n          });\n        }\n      });\n    }\n\n    componentWillMount();\n  }, []);\n\n  const sendTransaction = async e => {\n    // console.log(web3);\n    // console.log(account);\n    // console.log(transactionInstance);\n    await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription, {\n      from: account,\n      //value: e.web3.utils.toWei('10', \"ether\"),\n      gas: 1000000\n    }); //this.updateAllTransactions();\n  };\n\n  const updateAllTransactions = async e => {\n    await transactionInstance.getAllTransactions().then(result => {\n      setCategory_(result.category);\n      setName_(result.name);\n      setTime(result.timestamp);\n      setIpfsHash_(result.ipfs_hash);\n      setRegsitrant_(result.registrant);\n      setResponsibleManager_(result.responsible_manager);\n      setFileType_(result.file_type);\n      setFileDescription_(result.file_description);\n      setTransactionCnt(transactionInstance.cntTransactions());\n      let events = transactionInstance.getPastEvents('handleTransaction', {\n        fromBlock: 0,\n        toBlock: 'latest'\n      });\n      console.log(events);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type\",\n      onChange: event => setCategory(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      onChange: event => setName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Registrant\",\n      onChange: event => setRegsitrant(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Responsible Manager\",\n      onChange: event => setResponsibleManager(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"File Type\",\n      onChange: event => setFileType(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"File Description\",\n      onChange: event => setFileDescription(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      setUrl: setFileUrl,\n      setIpfs: setIpfsHash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), \"FileUrl :\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: fileUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: fileUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendTransaction,\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateAllTransactions,\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uC5EC\\uC8FC\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"all transactions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Category: \", category_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File Name: \", name_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"IPFS Hash: \", ipfsHash_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Registrant: \", registrant_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Responsible Manager: \", responsibleManager_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File Type: \", fileType_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File Description: \", fileDescription_]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n} // import React, { useEffect, useState, Component } from \"react\";\n// import {FileUpload} from './components/FileUpload';\n// import \"./App.css\";\n// import TransactionContract from \"../src/contracts/Transaction.json\"\n// import Web3 from 'web3';\n// const fileComponent = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   return (\n//       <div>\n//         <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br>\n//       </div>\n//   )\n// }\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n//   async componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n//   async instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n//   async sendTransaction() {\n//     await this.state.transactionInstance.sendTrans({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       gas: 1000000\n//     })\n//     //this.updateAllTransactions();\n//   }\n// async updateAllTransactions() {\n//   await this.state.transactionInstance.getAllTransactions().then(result => {\n//     this.setState ({ttype: result})\n//     console.log(this.state.ttype);\n//   })\n// }\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n//         {/* <FileUpload setUrl='{setFileUrl}' />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <button onClick={() => this.updateAllTransactions()}>\n//           트랜잭션 보여주기\n//         </button>\n//         <br></br>\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n\n_s(App, \"RG0i/3sNsQB3mVIX6sO72+jbIbs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FileUpload","TransactionContract","Web3","App","fileUrl","setFileUrl","web3","setWeb3","account","setAccount","transactionInstance","setTransactionInstance","category","setCategory","name","setName","ipfsHash","setIpfsHash","registrant","setRegsitrant","responsibleManager","setResponsibleManager","fileType","setFileType","fileDescription","setFileDescription","transactionCnt","setTransactionCnt","time","setTime","ipfsHash_","setIpfsHash_","category_","setCategory_","name_","setName_","registrant_","setRegsitrant_","responsibleManager_","setResponsibleManager_","fileType_","setFileType_","fileDescription_","setFileDescription_","componentWillMount","e","providers","HttpProvider","console","log","contract","require","transaction","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","sendTransaction","sendTrans","from","gas","updateAllTransactions","getAllTransactions","result","timestamp","ipfs_hash","responsible_manager","file_type","file_description","cntTransactions","events","getPastEvents","fromBlock","toBlock","event","target","value"],"sources":["C:/Users/mcnl/Desktop/gong/BlockchainSafetyManagement/client/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {FileUpload} from './components/FileUpload';\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  const [registrant, setRegsitrant] = useState(\"\");\r\n  const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  const [fileType, setFileType] = useState(\"\");\r\n  const [fileDescription, setFileDescription] = useState(\"\");\r\n  const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  const [time, setTime] = useState(\"\");\r\n  const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  const [category_, setCategory_] = useState(\"\");\r\n  const [name_, setName_] = useState(\"\");\r\n  const [registrant_, setRegsitrant_] = useState(\"\");\r\n  const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  const [fileType_, setFileType_] = useState(\"\");\r\n  const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            setAccount(accounts[0]);\r\n            //this.updateAllTransactions();\r\n          })\r\n        }\r\n      })\r\n    }\r\n    componentWillMount();\r\n  }, []);\r\n\r\n  const sendTransaction = async (e) => {\r\n    // console.log(web3);\r\n    // console.log(account);\r\n    // console.log(transactionInstance);\r\n    await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    //this.updateAllTransactions();\r\n  }\r\n\r\n  const updateAllTransactions = async (e) => {\r\n    await transactionInstance.getAllTransactions().then(result => {\r\n      setCategory_(result.category);\r\n      setName_(result.name);\r\n      setTime(result.timestamp);\r\n      setIpfsHash_(result.ipfs_hash);\r\n      setRegsitrant_(result.registrant);\r\n      setResponsibleManager_(result.responsible_manager);\r\n      setFileType_(result.file_type);\r\n      setFileDescription_(result.file_description);\r\n      setTransactionCnt(transactionInstance.cntTransactions());\r\n\r\n      let events = transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      console.log(events);\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button>\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState, Component } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\n// import \"./App.css\";\r\n// import TransactionContract from \"../src/contracts/Transaction.json\"\r\n// import Web3 from 'web3';\r\n\r\n// const fileComponent = () => {\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n\r\n//   return (\r\n//       <div>\r\n//         <FileUpload setUrl={setFileUrl} />\r\n//         FileUrl :{\" \"}\r\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           {fileUrl}\r\n//         </a>\r\n//         <br></br>\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       web3: null,\r\n//       account: null,\r\n//       transactionInstance: null,\r\n\r\n//       ttype: null,\r\n//       name: null,\r\n//       timestamp: null,\r\n//       ipfs_hash: null,\r\n//       registrant: null,\r\n//       responsible_manager: null,\r\n//       file_type: null,\r\n//       file_description: null\r\n//     };\r\n//   }\r\n\r\n//   async componentWillMount() {\r\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n//     this.setState({\r\n//       web3: web3\r\n//     }, () => {\r\n//       this.instantiateContract();\r\n//     })\r\n//     console.log(web3)\r\n//   }\r\n\r\n//   async instantiateContract(){\r\n//     const contract = require(\"truffle-contract\");\r\n//     const transaction = contract(TransactionContract);\r\n//     console.log(this.state.web3);\r\n//     transaction.setProvider(this.state.web3.currentProvider);\r\n\r\n//     this.state.web3.eth.getAccounts((error, accounts) => {\r\n//       if (!error){\r\n//         transaction.deployed().then(instance => {\r\n//           this.setState({transactionInstance: instance, account: accounts[0]});\r\n//           //this.updateAllTransactions();\r\n//         })\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   async sendTransaction() {\r\n//     await this.state.transactionInstance.sendTrans({\r\n//       from: this.state.account,\r\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\r\n//       gas: 1000000\r\n//     })\r\n//     //this.updateAllTransactions();\r\n//   }\r\n\r\n// async updateAllTransactions() {\r\n//   await this.state.transactionInstance.getAllTransactions().then(result => {\r\n//     this.setState ({ttype: result})\r\n//     console.log(this.state.ttype);\r\n//   })\r\n// }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <input type=\"text\" placeholder=\"Type\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Name\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Time\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"File Type\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"File Description\"></input>\r\n//         <br></br>\r\n        \r\n//         {/* <FileUpload setUrl='{setFileUrl}' />\r\n//         FileUrl :{\" \"}\r\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           {fileUrl}\r\n//         </a>\r\n//         <br></br> */}\r\n\r\n//         <p>Your account: {this.state.account}</p>\r\n//         <br></br>\r\n\r\n//         <button onClick={() => this.sendTransaction()}>\r\n//           트랜잭션 추가\r\n//         </button>\r\n//         <button onClick={() => this.updateAllTransactions()}>\r\n//           트랜잭션 보여주기\r\n//         </button>\r\n//         <br></br>\r\n\r\n//         <p>all transactions:</p>\r\n//         <br></br>\r\n//         <p>{this.state.ttype}</p>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default App;"],"mappings":"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A,0BAAeE,KAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QAnCF,eAoCE;MAAA,qBAAUN,IAAV;IAAA;MAAA;MAAA;MAAA;IAAA,QApCF,eAqCE;MAAA,0BAAeE,SAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QArCF,eAsCE;MAAA,2BAAgBM,WAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAtCF,eAuCE;MAAA,oCAAyBE,mBAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAvCF,eAwCE;MAAA,0BAAeE,SAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QAxCF,eAyCE;MAAA,iCAAsBE,gBAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QAzCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD,C,CAQD;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GAtQwBvC,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockchainSafetyManagement\\\\client\\\\src\\\\App.jsx\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3'; // export default function App() {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   const [web3, setWeb3] = useState(\"\");\n//   const [account, setAccount] = useState(\"\");\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\n//   const [ttype, setTtype] = useState(\"\");\n//   const componentWillMount = async() => {\n//     const wweb3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     setWeb3((web3) => wweb3);\n//     this.instantiateContract();\n//     // this.setState({\n//     //   web3: web3s\n//     // }, () => {\n//     //   this.instantiateContract();\n//     // })\n//     console.log(web3)\n//   }\n//   const instantiateContract = async() => {\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(web3);\n//     transaction.setProvider(web3.currentProvider);\n//     web3.eth.getAccount((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           setTransactionInstance((transactionInstance) => instance);\n//           setAccount((account) => accounts[0]);\n//         })\n//       }\n//     })\n//   }\n//   const sendTransaction = async() => {\n//     transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n// // updateAllTransactions() {\n// //   this.state.transactionInstance.getAllTransactions.then(result => {\n// //     this.setState ({ttype: result})\n// //   })\n// // }\n//   return (\n//     componentWillMount(),\n//     <div>\n//       <input type=\"text\" placeholder=\"Type\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Name\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Time\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Registrant\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Type\"></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Description\"></input>\n//       <br></br>\n//       {/* <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br> */}\n//       <p>Your account: {account}</p>\n//       <br></br>\n//       <button onClick={() => this.sendTransaction()}>\n//         트랜잭션 추가\n//       </button>\n//       <br></br>\n//       <p>all transactions:</p>\n//       <br></br>\n//       <p>{ttype}</p>\n//     </div>\n//   )\n// }\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n// updateAllTransactions() {\n//   this.state.transactionInstance.getAllTransactions.then(result => {\n//     this.setState ({ttype: result})\n//   })\n// }\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [fileUrl, setFileUrl] = useState(\"\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      account: null,\n      transactionInstance: null,\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  }\n\n  async componentWillMount() {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    this.setState({\n      web3: web3\n    }, () => {\n      this.instantiateContract();\n    });\n    console.log(web3);\n  }\n\n  async instantiateContract() {\n    const contract = require(\"truffle-contract\");\n\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error) {\n        transaction.deployed().then(instance => {\n          this.setState({\n            transactionInstance: instance,\n            account: accounts[0]\n          }); //this.updateAllTransactions();\n        });\n      }\n    });\n  }\n\n  async sendTransaction() {\n    await this.state.transactionInstance.sendTrans({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\"),\n      gas: 1000000\n    }); //this.updateAllTransactions();\n  }\n\n  async updateAllTransactions() {\n    await this.state.transactionInstance.getAllTransactions().then(result => {\n      this.setState({\n        ttype: result\n      });\n      console.log(this.state.ttype);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"IPFS Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Registrant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Responsible Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        setUrl: \"123e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), \"FileUrl :\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: fileUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.sendTransaction(),\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.updateAllTransactions(),\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uBCF4\\uC5EC\\uC8FC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"all transactions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.ttype\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","fileUrl","setFileUrl","App","constructor","props","state","web3","account","transactionInstance","ttype","name","timestamp","ipfs_hash","registrant","responsible_manager","file_type","file_description","componentWillMount","providers","HttpProvider","setState","instantiateContract","console","log","contract","require","transaction","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","sendTransaction","sendTrans","from","value","utils","toWei","gas","updateAllTransactions","getAllTransactions","result","render"],"sources":["D:/BlockchainSafetyManagement/client/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\r\nimport {FileUpload} from './components/FileUpload';\r\nimport SiteName from './components/SiteName';\r\nimport TransactionAdd from './components/TransactionAdd';\r\nimport TransactionShow from './components/TransactionShow';\r\nimport TransactionInput from './components/TransactionInput';\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\n\r\n\r\n// export default function App() {\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n//   const [web3, setWeb3] = useState(\"\");\r\n//   const [account, setAccount] = useState(\"\");\r\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n//   const [ttype, setTtype] = useState(\"\");\r\n\r\n//   const componentWillMount = async() => {\r\n//     const wweb3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n\r\n//     setWeb3((web3) => wweb3);\r\n//     this.instantiateContract();\r\n//     // this.setState({\r\n//     //   web3: web3s\r\n//     // }, () => {\r\n//     //   this.instantiateContract();\r\n//     // })\r\n//     console.log(web3)\r\n//   }\r\n\r\n//   const instantiateContract = async() => {\r\n//     const contract = require(\"truffle-contract\");\r\n//     const transaction = contract(TransactionContract);\r\n//     console.log(web3);\r\n//     transaction.setProvider(web3.currentProvider);\r\n//     web3.eth.getAccount((error, accounts) => {\r\n//       if (!error){\r\n//         transaction.deployed().then(instance => {\r\n//           setTransactionInstance((transactionInstance) => instance);\r\n//           setAccount((account) => accounts[0]);\r\n//         })\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   const sendTransaction = async() => {\r\n//     transactionInstance.sendTransaction({\r\n//       from: this.state.account,\r\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\r\n//       //gas: 100000\r\n//     })\r\n//     //this.updateAllTransactions();\r\n//   }\r\n\r\n// // updateAllTransactions() {\r\n// //   this.state.transactionInstance.getAllTransactions.then(result => {\r\n// //     this.setState ({ttype: result})\r\n// //   })\r\n// // }\r\n\r\n//   return (\r\n//     componentWillMount(),\r\n\r\n//     <div>\r\n//       <input type=\"text\" placeholder=\"Type\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Name\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Time\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"IPFS Hash\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Registrant\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Responsible Manager\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Type\"></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Description\"></input>\r\n//       <br></br>\r\n      \r\n//       {/* <FileUpload setUrl={setFileUrl} />\r\n//       FileUrl :{\" \"}\r\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//         {fileUrl}\r\n//       </a>\r\n//       <br></br> */}\r\n\r\n//       <p>Your account: {account}</p>\r\n//       <br></br>\r\n\r\n//       <button onClick={() => this.sendTransaction()}>\r\n//         트랜잭션 추가\r\n//       </button>\r\n//       <br></br>\r\n\r\n//       <p>all transactions:</p>\r\n//       <br></br>\r\n//       <p>{ttype}</p>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       web3: null,\r\n//       account: null,\r\n//       transactionInstance: null,\r\n\r\n//       ttype: null,\r\n//       name: null,\r\n//       timestamp: null,\r\n//       ipfs_hash: null,\r\n//       registrant: null,\r\n//       responsible_manager: null,\r\n//       file_type: null,\r\n//       file_description: null\r\n//     };\r\n//   }\r\n\r\n//   componentWillMount() {\r\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n//     this.setState({\r\n//       web3: web3\r\n//     }, () => {\r\n//       this.instantiateContract();\r\n//     })\r\n//     console.log(web3)\r\n//   }\r\n\r\n//   instantiateContract(){\r\n//     const contract = require(\"truffle-contract\");\r\n//     const transaction = contract(TransactionContract);\r\n//     console.log(this.state.web3);\r\n//     transaction.setProvider(this.state.web3.currentProvider);\r\n\r\n//     this.state.web3.eth.getAccounts((error, accounts) => {\r\n//       if (!error){\r\n//         transaction.deployed().then(instance => {\r\n//           this.setState({transactionInstance: instance, account: accounts[0]});\r\n//           //this.updateAllTransactions();\r\n//         })\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   sendTransaction() {\r\n//     this.state.transactionInstance.sendTransaction({\r\n//       from: this.state.account,\r\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\r\n//       //gas: 100000\r\n//     })\r\n//     //this.updateAllTransactions();\r\n//   }\r\n\r\n// updateAllTransactions() {\r\n//   this.state.transactionInstance.getAllTransactions.then(result => {\r\n//     this.setState ({ttype: result})\r\n//   })\r\n// }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <input type=\"text\" placeholder=\"Type\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Name\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Time\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"File Type\"></input>\r\n//         <br></br>\r\n//         <input type=\"text\" placeholder=\"File Description\"></input>\r\n//         <br></br>\r\n        \r\n//         {/* <FileUpload setUrl={setFileUrl} />\r\n//         FileUrl :{\" \"}\r\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           {fileUrl}\r\n//         </a>\r\n//         <br></br> */}\r\n\r\n//         <p>Your account: {this.state.account}</p>\r\n//         <br></br>\r\n\r\n//         <button onClick={() => this.sendTransaction()}>\r\n//           트랜잭션 추가\r\n//         </button>\r\n//         <br></br>\r\n\r\n//         <p>all transactions:</p>\r\n//         <br></br>\r\n//         <p>{this.state.ttype}</p>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst [fileUrl, setFileUrl] = useState(\"\");\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      web3: null,\r\n      account: null,\r\n      transactionInstance: null,\r\n\r\n      ttype: null,\r\n      name: null,\r\n      timestamp: null,\r\n      ipfs_hash: null,\r\n      registrant: null,\r\n      responsible_manager: null,\r\n      file_type: null,\r\n      file_description: null\r\n    };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n    this.setState({\r\n      web3: web3\r\n    }, () => {\r\n      this.instantiateContract();\r\n    })\r\n    console.log(web3)\r\n  }\r\n\r\n  async instantiateContract(){\r\n    const contract = require(\"truffle-contract\");\r\n    const transaction = contract(TransactionContract);\r\n    console.log(this.state.web3);\r\n    transaction.setProvider(this.state.web3.currentProvider);\r\n\r\n    this.state.web3.eth.getAccounts((error, accounts) => {\r\n      if (!error){\r\n        transaction.deployed().then(instance => {\r\n          this.setState({transactionInstance: instance, account: accounts[0]});\r\n          //this.updateAllTransactions();\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  async sendTransaction() {\r\n    await this.state.transactionInstance.sendTrans({\r\n      from: this.state.account,\r\n      value: this.state.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    //this.updateAllTransactions();\r\n  }\r\n\r\nasync updateAllTransactions() {\r\n  await this.state.transactionInstance.getAllTransactions().then(result => {\r\n    this.setState ({ttype: result})\r\n    console.log(this.state.ttype);\r\n  })\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Type\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"Name\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"Time\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"IPFS Hash\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"Registrant\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"Responsible Manager\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"File Type\"></input>\r\n        <br></br>\r\n        <input type=\"text\" placeholder=\"File Description\"></input>\r\n        <br></br>\r\n        \r\n        <FileUpload setUrl='123e' />\r\n        FileUrl :{\" \"}\r\n        <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {fileUrl}\r\n        </a>\r\n        <br></br>\r\n\r\n        <p>Your account: {this.state.account}</p>\r\n        <br></br>\r\n\r\n        <button onClick={() => this.sendTransaction()}>\r\n          트랜잭션 추가\r\n        </button>\r\n        <button onClick={() => this.updateAllTransactions()}>\r\n          트랜잭션 보여주기\r\n        </button>\r\n        <br></br>\r\n\r\n        <p>all transactions:</p>\r\n        <br></br>\r\n        <p>{this.state.ttype}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
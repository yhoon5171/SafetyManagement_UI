{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _version_1 = require(\"./_version\"); // Unknown Error\n\n\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR'; // Not implemented\n\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED'; // Missing new operator to an object\n//  - name: The name of the class\n\nexports.MISSING_NEW = 'MISSING_NEW'; // Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\n\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION'; // Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\n\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT'; // Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\n\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT'; // Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\n\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT'; // Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\n\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT'; // Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\n\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS'; // Nonce has already been used\n//   - transaction: the transaction attempted\n\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED'; // The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\n\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED'; // Unsupported operation\n//   - operation\n\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false; // @TODO: Enum\n\nfunction throwError(message, code, params) {\n  if (_censorErrors) {\n    throw new Error('unknown error');\n  }\n\n  if (!code) {\n    code = exports.UNKNOWN_ERROR;\n  }\n\n  if (!params) {\n    params = {};\n  }\n\n  var messageDetails = [];\n  Object.keys(params).forEach(function (key) {\n    try {\n      messageDetails.push(key + '=' + JSON.stringify(params[key]));\n    } catch (error) {\n      messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n    }\n  });\n  messageDetails.push(\"version=\" + _version_1.version);\n  var reason = message;\n\n  if (messageDetails.length) {\n    message += ' (' + messageDetails.join(', ') + ')';\n  } // @TODO: Any??\n\n\n  var error = new Error(message);\n  error.reason = reason;\n  error.code = code;\n  Object.keys(params).forEach(function (key) {\n    error[key] = params[key];\n  });\n  throw error;\n}\n\nexports.throwError = throwError;\n\nfunction checkNew(self, kind) {\n  if (!(self instanceof kind)) {\n    throwError('missing new', exports.MISSING_NEW, {\n      name: kind.name\n    });\n  }\n}\n\nexports.checkNew = checkNew;\n\nfunction checkArgumentCount(count, expectedCount, suffix) {\n  if (!suffix) {\n    suffix = '';\n  }\n\n  if (count < expectedCount) {\n    throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, {\n      count: count,\n      expectedCount: expectedCount\n    });\n  }\n\n  if (count > expectedCount) {\n    throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, {\n      count: count,\n      expectedCount: expectedCount\n    });\n  }\n}\n\nexports.checkArgumentCount = checkArgumentCount;\n\nfunction setCensorship(censorship, permanent) {\n  if (_permanentCensorErrors) {\n    throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, {\n      operation: 'setCensorship'\n    });\n  }\n\n  _censorErrors = !!censorship;\n  _permanentCensorErrors = !!permanent;\n}\n\nexports.setCensorship = setCensorship;\n\nfunction checkNormalize() {\n  try {\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n      try {\n        \"test\".normalize(form);\n      } catch (error) {\n        throw new Error('missing ' + form);\n      }\n    });\n\n    if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error('broken implementation');\n    }\n  } catch (error) {\n    throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, {\n      operation: 'String.prototype.normalize',\n      form: error.message\n    });\n  }\n}\n\nexports.checkNormalize = checkNormalize;\nvar LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warn: 3,\n  error: 4,\n  off: 5\n};\nvar LogLevel = LogLevels[\"default\"];\n\nfunction setLogLevel(logLevel) {\n  var level = LogLevels[logLevel];\n\n  if (level == null) {\n    warn(\"invliad log level - \" + logLevel);\n    return;\n  }\n\n  LogLevel = level;\n}\n\nexports.setLogLevel = setLogLevel;\n\nfunction log(logLevel, args) {\n  if (LogLevel > LogLevels[logLevel]) {\n    return;\n  }\n\n  console.log.apply(console, args);\n}\n\nfunction warn() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  log(\"warn\", args);\n}\n\nexports.warn = warn;\n\nfunction info() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  log(\"info\", args);\n}\n\nexports.info = info;","map":{"version":3,"names":["Object","defineProperty","exports","value","_version_1","require","UNKNOWN_ERROR","NOT_IMPLEMENTED","MISSING_NEW","CALL_EXCEPTION","INVALID_ARGUMENT","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","NUMERIC_FAULT","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNSUPPORTED_OPERATION","_permanentCensorErrors","_censorErrors","throwError","message","code","params","Error","messageDetails","keys","forEach","key","push","JSON","stringify","error","toString","version","reason","length","join","checkNew","self","kind","name","checkArgumentCount","count","expectedCount","suffix","setCensorship","censorship","permanent","operation","checkNormalize","form","normalize","String","fromCharCode","LogLevels","debug","info","warn","off","LogLevel","setLogLevel","logLevel","level","log","args","console","apply","_i","arguments"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/ethers/errors.js"],"sourcesContent":["'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _version_1 = require(\"./_version\");\r\n// Unknown Error\r\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\r\n// Not implemented\r\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\r\n// Missing new operator to an object\r\n//  - name: The name of the class\r\nexports.MISSING_NEW = 'MISSING_NEW';\r\n// Call exception\r\n//  - transaction: the transaction\r\n//  - address?: the contract address\r\n//  - args?: The arguments passed into the function\r\n//  - method?: The Solidity method signature\r\n//  - errorSignature?: The EIP848 error signature\r\n//  - errorArgs?: The EIP848 error parameters\r\n//  - reason: The reason (only for EIP848 \"Error(string)\")\r\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\r\n// Invalid argument (e.g. value is incompatible with type) to a function:\r\n//   - argument: The argument name that was invalid\r\n//   - value: The value of the argument\r\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\r\n// Missing argument to a function:\r\n//   - count: The number of arguments received\r\n//   - expectedCount: The number of arguments expected\r\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\r\n// Too many arguments\r\n//   - count: The number of arguments received\r\n//   - expectedCount: The number of arguments expected\r\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\r\n// Numeric Fault\r\n//   - operation: the operation being executed\r\n//   - fault: the reason this faulted\r\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\r\n// Insufficien funds (< value + gasLimit * gasPrice)\r\n//   - transaction: the transaction attempted\r\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\r\n// Nonce has already been used\r\n//   - transaction: the transaction attempted\r\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED';\r\n// The replacement fee for the transaction is too low\r\n//   - transaction: the transaction attempted\r\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\r\n// Unsupported operation\r\n//   - operation\r\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\r\nvar _permanentCensorErrors = false;\r\nvar _censorErrors = false;\r\n// @TODO: Enum\r\nfunction throwError(message, code, params) {\r\n    if (_censorErrors) {\r\n        throw new Error('unknown error');\r\n    }\r\n    if (!code) {\r\n        code = exports.UNKNOWN_ERROR;\r\n    }\r\n    if (!params) {\r\n        params = {};\r\n    }\r\n    var messageDetails = [];\r\n    Object.keys(params).forEach(function (key) {\r\n        try {\r\n            messageDetails.push(key + '=' + JSON.stringify(params[key]));\r\n        }\r\n        catch (error) {\r\n            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\r\n        }\r\n    });\r\n    messageDetails.push(\"version=\" + _version_1.version);\r\n    var reason = message;\r\n    if (messageDetails.length) {\r\n        message += ' (' + messageDetails.join(', ') + ')';\r\n    }\r\n    // @TODO: Any??\r\n    var error = new Error(message);\r\n    error.reason = reason;\r\n    error.code = code;\r\n    Object.keys(params).forEach(function (key) {\r\n        error[key] = params[key];\r\n    });\r\n    throw error;\r\n}\r\nexports.throwError = throwError;\r\nfunction checkNew(self, kind) {\r\n    if (!(self instanceof kind)) {\r\n        throwError('missing new', exports.MISSING_NEW, { name: kind.name });\r\n    }\r\n}\r\nexports.checkNew = checkNew;\r\nfunction checkArgumentCount(count, expectedCount, suffix) {\r\n    if (!suffix) {\r\n        suffix = '';\r\n    }\r\n    if (count < expectedCount) {\r\n        throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount });\r\n    }\r\n    if (count > expectedCount) {\r\n        throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });\r\n    }\r\n}\r\nexports.checkArgumentCount = checkArgumentCount;\r\nfunction setCensorship(censorship, permanent) {\r\n    if (_permanentCensorErrors) {\r\n        throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, { operation: 'setCensorship' });\r\n    }\r\n    _censorErrors = !!censorship;\r\n    _permanentCensorErrors = !!permanent;\r\n}\r\nexports.setCensorship = setCensorship;\r\nfunction checkNormalize() {\r\n    try {\r\n        // Make sure all forms of normalization are supported\r\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\r\n            try {\r\n                \"test\".normalize(form);\r\n            }\r\n            catch (error) {\r\n                throw new Error('missing ' + form);\r\n            }\r\n        });\r\n        if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\r\n            throw new Error('broken implementation');\r\n        }\r\n    }\r\n    catch (error) {\r\n        throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, { operation: 'String.prototype.normalize', form: error.message });\r\n    }\r\n}\r\nexports.checkNormalize = checkNormalize;\r\nvar LogLevels = { debug: 1, \"default\": 2, info: 2, warn: 3, error: 4, off: 5 };\r\nvar LogLevel = LogLevels[\"default\"];\r\nfunction setLogLevel(logLevel) {\r\n    var level = LogLevels[logLevel];\r\n    if (level == null) {\r\n        warn(\"invliad log level - \" + logLevel);\r\n        return;\r\n    }\r\n    LogLevel = level;\r\n}\r\nexports.setLogLevel = setLogLevel;\r\nfunction log(logLevel, args) {\r\n    if (LogLevel > LogLevels[logLevel]) {\r\n        return;\r\n    }\r\n    console.log.apply(console, args);\r\n}\r\nfunction warn() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    log(\"warn\", args);\r\n}\r\nexports.warn = warn;\r\nfunction info() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    log(\"info\", args);\r\n}\r\nexports.info = info;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [web3, account, transactionInstance] = useState(\"\");\n  const [ttype, name, timestamp, ipfs_hash, registrant, responsible_manager, file_type, file_description] = useState(\"\");\n\n  const componentWillMount = async () => {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    this.setState({\n      web3: web3\n    }, () => {\n      this.instantiateContract();\n    });\n    console.log(web3);\n  };\n\n  const instantiateContract = async () => {\n    const contract = require(\"truffle-contract\");\n\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error) {\n        transaction.deployed().then(instance => {\n          this.setState({\n            transactionInstance: instance,\n            account: accounts[0]\n          }); //this.updateAllTransactions();\n        });\n      }\n    });\n  };\n\n  const sendTransaction = async () => {\n    this.state.transactionInstance.sendTransaction({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\") //gas: 100000\n\n    }); //this.updateAllTransactions();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"IPFS Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Registrant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Responsible Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"File Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"File Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your account: \", this.state.account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.sendTransaction(),\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"all transactions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.state.ttype\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n} // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n\n_s(App, \"fBJaPg02VB9V40QgI4ZqvkAHD3g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","useEffect","App","fileUrl","setFileUrl","web3","account","transactionInstance","ttype","name","timestamp","ipfs_hash","registrant","responsible_manager","file_type","file_description","componentWillMount","providers","HttpProvider","setState","instantiateContract","console","log","contract","require","transaction","state","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","sendTransaction","from","value","utils","toWei"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\n\n\nexport default function App() {\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [web3, account, transactionInstance] = useState(\"\");\n  const [ttype, name, timestamp, ipfs_hash, registrant, responsible_manager, file_type, file_description] = useState(\"\");\n\n  const componentWillMount = async() => {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    this.setState({\n      web3: web3\n    }, () => {\n      this.instantiateContract();\n    })\n    console.log(web3)\n  }\n\n  const instantiateContract = async() => {\n    const contract = require(\"truffle-contract\");\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error){\n        transaction.deployed().then(instance => {\n          this.setState({transactionInstance: instance, account: accounts[0]});\n          //this.updateAllTransactions();\n        })\n      }\n    })\n  }\n\n  const sendTransaction = async() => {\n    this.state.transactionInstance.sendTransaction({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\"),\n      //gas: 100000\n    })\n    //this.updateAllTransactions();\n  }\n\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Type\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Name\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Time\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Registrant\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Type\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Description\"></input>\n      <br></br>\n      \n      {/* <FileUpload setUrl={setFileUrl} />\n      FileUrl :{\" \"}\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {fileUrl}\n      </a>\n      <br></br> */}\n\n      <p>Your account: {this.state.account}</p>\n      <br></br>\n\n      <button onClick={() => this.sendTransaction()}>\n        트랜잭션 추가\n      </button>\n      <br></br>\n\n      <p>all transactions:</p>\n      <br></br>\n      <p>{this.state.ttype}</p>\n    </div>\n  )\n}\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n        \n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
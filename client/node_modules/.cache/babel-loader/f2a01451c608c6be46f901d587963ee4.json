{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _objectSpread = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar createGet = configure.configure(function (api) {\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid$1) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('object/get', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(cid$1 instanceof Uint8Array ? cid.CID.decode(cid$1) : cid$1),\n                  dataEncoding: 'base64'\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                Data: fromString.fromString(data.Data, 'base64pad'),\n                Links: (data.Links || []).map(function (link) {\n                  return {\n                    Name: link.Name,\n                    Hash: cid.CID.parse(link.Hash),\n                    Tsize: link.Size\n                  };\n                })\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _get.apply(this, arguments);\n  }\n\n  return get;\n});\nexports.createGet = createGet;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","fromString","createGet","api","get","cid$1","options","post","signal","searchParams","arg","Uint8Array","CID","decode","dataEncoding","headers","res","json","data","Data","Links","map","link","Name","Hash","parse","Tsize","Size"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/object/get.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar fromString = require('uint8arrays/from-string');\n\nconst createGet = configure.configure(api => {\n  async function get(cid$1, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: `${ cid$1 instanceof Uint8Array ? cid.CID.decode(cid$1) : cid$1 }`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      Data: fromString.fromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map(link => ({\n        Name: link.Name,\n        Hash: cid.CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    };\n  }\n  return get;\n});\n\nexports.createGet = createGet;\n"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAMI,SAAS,GAAGH,SAAS,CAACA,SAAV,CAAoB,UAAAI,GAAG,EAAI;EAAA,SAC5BC,GAD4B;IAAA;EAAA;;EAAA;IAAA,kEAC3C,iBAAmBC,KAAnB;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA0BC,OAA1B,2DAAoC,EAApC;cAAA;cAAA,OACoBH,GAAG,CAACI,IAAJ,CAAS,YAAT,EAAuB;gBACvCC,MAAM,EAAEF,OAAO,CAACE,MADuB;gBAEvCC,YAAY,EAAET,iBAAiB,CAACA,iBAAlB;kBACZU,GAAG,YAAML,KAAK,YAAYM,UAAjB,GAA8Bd,GAAG,CAACe,GAAJ,CAAQC,MAAR,CAAeR,KAAf,CAA9B,GAAsDA,KAA5D,CADS;kBAEZS,YAAY,EAAE;gBAFF,GAGTR,OAHS,EAFyB;gBAOvCS,OAAO,EAAET,OAAO,CAACS;cAPsB,CAAvB,CADpB;;YAAA;cACQC,GADR;cAAA;cAAA,OAUqBA,GAAG,CAACC,IAAJ,EAVrB;;YAAA;cAUQC,IAVR;cAAA,iCAWS;gBACLC,IAAI,EAAElB,UAAU,CAACA,UAAX,CAAsBiB,IAAI,CAACC,IAA3B,EAAiC,WAAjC,CADD;gBAELC,KAAK,EAAE,CAACF,IAAI,CAACE,KAAL,IAAc,EAAf,EAAmBC,GAAnB,CAAuB,UAAAC,IAAI;kBAAA,OAAK;oBACrCC,IAAI,EAAED,IAAI,CAACC,IAD0B;oBAErCC,IAAI,EAAE3B,GAAG,CAACe,GAAJ,CAAQa,KAAR,CAAcH,IAAI,CAACE,IAAnB,CAF+B;oBAGrCE,KAAK,EAAEJ,IAAI,CAACK;kBAHyB,CAAL;gBAAA,CAA3B;cAFF,CAXT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAD2C;IAAA;EAAA;;EAqB3C,OAAOvB,GAAP;AACD,CAtBiB,CAAlB;AAwBAT,OAAO,CAACO,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}
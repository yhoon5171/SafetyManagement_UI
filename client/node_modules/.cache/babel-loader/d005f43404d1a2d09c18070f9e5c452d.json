{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  const output = new Uint8Array(length);\n  let offset = 0;\n\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return output;\n}\n\nexports.concat = concat;","map":{"version":3,"names":["Object","defineProperty","exports","value","concat","arrays","length","reduce","acc","curr","output","Uint8Array","offset","arr","set"],"sources":["C:/Users/mcnl/Desktop/gong/BlockchainSafetyManagement/client/node_modules/uint8arrays/cjs/src/concat.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nfunction concat(arrays, length) {\r\n  if (!length) {\r\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\r\n  }\r\n  const output = new Uint8Array(length);\r\n  let offset = 0;\r\n  for (const arr of arrays) {\r\n    output.set(arr, offset);\r\n    offset += arr.length;\r\n  }\r\n  return output;\r\n}\r\n\r\nexports.concat = concat;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;EAC9B,IAAI,CAACA,MAAL,EAAa;IACXA,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACH,MAAxC,EAAgD,CAAhD,CAAT;EACD;;EACD,MAAMI,MAAM,GAAG,IAAIC,UAAJ,CAAeL,MAAf,CAAf;EACA,IAAIM,MAAM,GAAG,CAAb;;EACA,KAAK,MAAMC,GAAX,IAAkBR,MAAlB,EAA0B;IACxBK,MAAM,CAACI,GAAP,CAAWD,GAAX,EAAgBD,MAAhB;IACAA,MAAM,IAAIC,GAAG,CAACP,MAAd;EACD;;EACD,OAAOI,MAAP;AACD;;AAEDR,OAAO,CAACE,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}
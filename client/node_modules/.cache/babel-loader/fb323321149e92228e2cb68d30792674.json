{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createRm = configure.configure(api => {\n  async function* rm(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n\n  return rm;\n});\n\nfunction toCoreInterface(removed) {\n  const out = {\n    cid: cid.CID.parse(removed.Hash)\n  };\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n\n  return out;\n}\n\nexports.createRm = createRm;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createRm","api","rm","options","Array","isArray","res","post","signal","searchParams","arg","map","toString","headers","removed","ndjson","toCoreInterface","out","CID","parse","Hash","Error","error"],"sources":["C:/Users/mcnl/Desktop/gong/test/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/block/rm.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createRm = configure.configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = { cid: cid.CID.parse(removed.Hash) };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}\n\nexports.createRm = createRm;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAMG,QAAQ,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;EAC1C,gBAAgBC,EAAhB,CAAmBN,GAAnB,EAAsC;IAAA,IAAdO,OAAc,uEAAJ,EAAI;;IACpC,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcT,GAAd,CAAL,EAAyB;MACvBA,GAAG,GAAG,CAACA,GAAD,CAAN;IACD;;IACD,MAAMU,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,UAAT,EAAqB;MACrCC,MAAM,EAAEL,OAAO,CAACK,MADqB;MAErCC,YAAY,EAAEV,iBAAiB,CAACA,iBAAlB,CAAoC;QAChDW,GAAG,EAAEd,GAAG,CAACe,GAAJ,CAAQf,GAAG,IAAIA,GAAG,CAACgB,QAAJ,EAAf,CAD2C;QAEhD,mBAAmB,IAF6B;QAGhD,GAAGT;MAH6C,CAApC,CAFuB;MAOrCU,OAAO,EAAEV,OAAO,CAACU;IAPoB,CAArB,CAAlB;;IASA,WAAW,MAAMC,OAAjB,IAA4BR,GAAG,CAACS,MAAJ,EAA5B,EAA0C;MACxC,MAAMC,eAAe,CAACF,OAAD,CAArB;IACD;EACF;;EACD,OAAOZ,EAAP;AACD,CAnBgB,CAAjB;;AAoBA,SAASc,eAAT,CAAyBF,OAAzB,EAAkC;EAChC,MAAMG,GAAG,GAAG;IAAErB,GAAG,EAAEA,GAAG,CAACsB,GAAJ,CAAQC,KAAR,CAAcL,OAAO,CAACM,IAAtB;EAAP,CAAZ;;EACA,IAAIN,OAAO,CAACO,KAAZ,EAAmB;IACjBJ,GAAG,CAACK,KAAJ,GAAY,IAAID,KAAJ,CAAUP,OAAO,CAACO,KAAlB,CAAZ;EACD;;EACD,OAAOJ,GAAP;AACD;;AAEDvB,OAAO,CAACM,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}
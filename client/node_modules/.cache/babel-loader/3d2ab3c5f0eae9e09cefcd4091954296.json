{"ast":null,"code":"exports = module.exports = SemVer;\nvar debug;\n/* istanbul ignore next */\n\nif (typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args.unshift('SEMVER');\n    console.log.apply(console, args);\n  };\n} else {\n  debug = function () {};\n} // Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\n\n\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */\n9007199254740991; // Max safe segment length for coercion.\n\nvar MAX_SAFE_COMPONENT_LENGTH = 16; // The actual regexps go on exports.re\n\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0; // The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\nsrc[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\n\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)'; // Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\n\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Coercion.\n// Extract anything that could conceivably be a part of a valid semver\n\nvar COERCE = R++;\nsrc[COERCE] = '(^|[^\\\\d])' + '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\\\d])';\nvar COERCERTL = R++;\nre[COERCERTL] = new RegExp(src[COERCE], 'g'); // Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\n\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\n\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag\n\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\n\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$'; // Star ranges basically just allow anything at all.\n\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'; // Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\n\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n\n  if (!re[i]) {\n    re[i] = new RegExp(src[i]);\n  }\n}\n\nexports.parse = parse;\n\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n\n  if (!r.test(version)) {\n    return null;\n  }\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\n\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\nexports.clean = clean;\n\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version;\n    } else {\n      version = version.version;\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options);\n  }\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  this.raw = version; // these are actually numbers\n\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version');\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version');\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version');\n  } // numberify any prerelease numeric ids\n\n\n  if (!m[4]) {\n    this.prerelease = [];\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num;\n        }\n      }\n\n      return id;\n    });\n  }\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.');\n  }\n\n  return this.version;\n};\n\nSemVer.prototype.toString = function () {\n  return this.version;\n};\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other);\n\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  } // NOT having a prerelease is > having one\n\n\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1;\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1;\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0;\n  }\n\n  var i = 0;\n\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n};\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  var i = 0;\n\n  do {\n    var a = this.build[i];\n    var b = other.build[i];\n    debug('prerelease compare', i, a, b);\n\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n}; // preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\n\n\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier);\n      }\n\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n        this.major++;\n      }\n\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++;\n      }\n\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++;\n      }\n\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0];\n      } else {\n        var i = this.prerelease.length;\n\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0);\n        }\n      }\n\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0];\n          }\n        } else {\n          this.prerelease = [identifier, 0];\n        }\n      }\n\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\n\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\n\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    var prefix = '';\n\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre';\n      var defaultResult = 'prerelease';\n    }\n\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key;\n        }\n      }\n    }\n\n    return defaultResult; // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\n\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\n\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\n\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\n\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\n\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\n\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\n\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.compareBuild = compareBuild;\n\nfunction compareBuild(a, b, loose) {\n  var versionA = new SemVer(a, loose);\n  var versionB = new SemVer(b, loose);\n  return versionA.compare(versionB) || versionA.compareBuild(versionB);\n}\n\nexports.rcompare = rcompare;\n\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\n\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\n\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose);\n  });\n}\n\nexports.gt = gt;\n\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\n\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\n\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\n\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\n\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\n\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\n\nfunction cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a === b;\n\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a !== b;\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n\n    case '!=':\n      return neq(a, b, loose);\n\n    case '>':\n      return gt(a, b, loose);\n\n    case '>=':\n      return gte(a, b, loose);\n\n    case '<':\n      return lt(a, b, loose);\n\n    case '<=':\n      return lte(a, b, loose);\n\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n}\n\nexports.Comparator = Comparator;\n\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp;\n    } else {\n      comp = comp.value;\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options);\n  }\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY) {\n    this.value = '';\n  } else {\n    this.value = this.operator + this.semver.version;\n  }\n\n  debug('comp', this);\n}\n\nvar ANY = {};\n\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp);\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : '';\n\n  if (this.operator === '=') {\n    this.operator = '';\n  } // if it literally is just '>' or '' then allow anything.\n\n\n  if (!m[2]) {\n    this.semver = ANY;\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose);\n  }\n};\n\nComparator.prototype.toString = function () {\n  return this.value;\n};\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY || version === ANY) {\n    return true;\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options);\n    } catch (er) {\n      return false;\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true;\n    }\n\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true;\n    }\n\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n  var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n  return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\nexports.Range = Range;\n\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options);\n  }\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease; // First, split based on boolean or ||\n\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function () {\n  return this.range;\n};\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose;\n  range = range.trim(); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`\n\n  range = range.replace(re[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`\n\n  range = range.replace(re[CARETTRIM], caretTrimReplace); // normalize spaces\n\n  range = range.split(/\\s+/).join(' '); // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n  return set;\n};\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function (thisComparators) {\n    return isSatisfiable(thisComparators, options) && range.set.some(function (rangeComparators) {\n      return isSatisfiable(rangeComparators, options) && thisComparators.every(function (thisComparator) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n}; // take a set of comparators and determine whether there\n// exists a version which can satisfy it\n\n\nfunction isSatisfiable(comparators, options) {\n  var result = true;\n  var remainingComparators = comparators.slice();\n  var testComparator = remainingComparators.pop();\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options);\n    });\n    testComparator = remainingComparators.pop();\n  }\n\n  return result;\n} // Mostly just for testing and legacy API reasons\n\n\nexports.toComparators = toComparators;\n\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n} // comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\n\n\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n} // ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\n\n\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('tilde return', ret);\n    return ret;\n  });\n} // ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\n\n\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';\n      }\n    } else {\n      debug('no pr');\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    } // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n\n\n    pr = options.includePrerelease ? '-0' : '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0;\n      }\n\n      p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr;\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr + ' <' + M + '.' + (+m + 1) + '.0' + pr;\n    }\n\n    debug('xRange return', ret);\n    return ret;\n  });\n} // Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\n\n\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!\n\n  return comp.trim().replace(re[STAR], '');\n} // This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\n\n\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = '';\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0';\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0';\n  } else {\n    from = '>=' + from;\n  }\n\n  if (isX(tM)) {\n    to = '';\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0';\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  } else {\n    to = '<=' + to;\n  }\n\n  return (from + ' ' + to).trim();\n} // if ANY of the sets match ALL of its comparators, then pass\n\n\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false;\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options);\n    } catch (er) {\n      return false;\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n\n      if (set[i].semver === ANY) {\n        continue;\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    } // Version has a -pre, but it's not one of the ones we like.\n\n\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\n\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\n\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\n\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n}\n\nexports.minVersion = minVersion;\n\nfunction minVersion(range, loose) {\n  range = new Range(range, loose);\n  var minver = new SemVer('0.0.0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = new SemVer('0.0.0-0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = null;\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version);\n\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++;\n          } else {\n            compver.prerelease.push(0);\n          }\n\n          compver.raw = compver.format();\n\n        /* fallthrough */\n\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver;\n          }\n\n          break;\n\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator);\n      }\n    });\n  }\n\n  if (minver && range.test(minver)) {\n    return minver;\n  }\n\n  return null;\n}\n\nexports.validRange = validRange;\n\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n} // Determine if version is less than all the versions possible in the range\n\n\nexports.ltr = ltr;\n\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n} // Determine if version is greater than all the versions possible in the range.\n\n\nexports.gtr = gtr;\n\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\n\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  } // If it satisifes the range it is not outside\n\n\n  if (satisfies(version, range, options)) {\n    return false;\n  } // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n\n      high = high || comparator;\n      low = low || comparator;\n\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    }); // If the edge version comparator has a operator then our version\n    // isn't outside it\n\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    } // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n\n\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.prerelease = prerelease;\n\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\n\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n}\n\nexports.coerce = coerce;\n\nfunction coerce(version, options) {\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version === 'number') {\n    version = String(version);\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  options = options || {};\n  var match = null;\n\n  if (!options.rtl) {\n    match = version.match(re[COERCE]);\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next;\n\n    while ((next = re[COERCERTL].exec(version)) && (!match || match.index + match[0].length !== version.length)) {\n      if (!match || next.index + next[0].length !== match.index + match[0].length) {\n        match = next;\n      }\n\n      re[COERCERTL].lastIndex = next.index + next[1].length + next[2].length;\n    } // leave it in a clean state\n\n\n    re[COERCERTL].lastIndex = -1;\n  }\n\n  if (match === null) {\n    return null;\n  }\n\n  return parse(match[2] + '.' + (match[3] || '0') + '.' + (match[4] || '0'), options);\n}","map":{"version":3,"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","RegExp","LONETILDE","TILDETRIM","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","options","loose","includePrerelease","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","compareBuild","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","value","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","comparators","result","remainingComparators","testComparator","pop","otherComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","max","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce","String","rtl","next","exec","index","lastIndex"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/truffle-contract/node_modules/semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer\r\n\r\nvar debug\r\n/* istanbul ignore next */\r\nif (typeof process === 'object' &&\r\n    process.env &&\r\n    process.env.NODE_DEBUG &&\r\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\r\n  debug = function () {\r\n    var args = Array.prototype.slice.call(arguments, 0)\r\n    args.unshift('SEMVER')\r\n    console.log.apply(console, args)\r\n  }\r\n} else {\r\n  debug = function () {}\r\n}\r\n\r\n// Note: this is the semver.org version of the spec that it implements\r\n// Not necessarily the package version of this code.\r\nexports.SEMVER_SPEC_VERSION = '2.0.0'\r\n\r\nvar MAX_LENGTH = 256\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\r\n  /* istanbul ignore next */ 9007199254740991\r\n\r\n// Max safe segment length for coercion.\r\nvar MAX_SAFE_COMPONENT_LENGTH = 16\r\n\r\n// The actual regexps go on exports.re\r\nvar re = exports.re = []\r\nvar src = exports.src = []\r\nvar R = 0\r\n\r\n// The following Regular Expressions can be used for tokenizing,\r\n// validating, and parsing SemVer version strings.\r\n\r\n// ## Numeric Identifier\r\n// A single `0`, or a non-zero digit followed by zero or more digits.\r\n\r\nvar NUMERICIDENTIFIER = R++\r\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\r\nvar NUMERICIDENTIFIERLOOSE = R++\r\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\r\n\r\n// ## Non-numeric Identifier\r\n// Zero or more digits, followed by a letter or hyphen, and then zero or\r\n// more letters, digits, or hyphens.\r\n\r\nvar NONNUMERICIDENTIFIER = R++\r\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\r\n\r\n// ## Main Version\r\n// Three dot-separated numeric identifiers.\r\n\r\nvar MAINVERSION = R++\r\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\r\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\r\n                   '(' + src[NUMERICIDENTIFIER] + ')'\r\n\r\nvar MAINVERSIONLOOSE = R++\r\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\r\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\r\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\r\n\r\n// ## Pre-release Version Identifier\r\n// A numeric identifier, or a non-numeric identifier.\r\n\r\nvar PRERELEASEIDENTIFIER = R++\r\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\r\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\r\n\r\nvar PRERELEASEIDENTIFIERLOOSE = R++\r\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\r\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\r\n\r\n// ## Pre-release Version\r\n// Hyphen, followed by one or more dot-separated pre-release version\r\n// identifiers.\r\n\r\nvar PRERELEASE = R++\r\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\r\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\r\n\r\nvar PRERELEASELOOSE = R++\r\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\r\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\r\n\r\n// ## Build Metadata Identifier\r\n// Any combination of digits, letters, or hyphens.\r\n\r\nvar BUILDIDENTIFIER = R++\r\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\r\n\r\n// ## Build Metadata\r\n// Plus sign, followed by one or more period-separated build metadata\r\n// identifiers.\r\n\r\nvar BUILD = R++\r\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\r\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\r\n\r\n// ## Full Version String\r\n// A main version, followed optionally by a pre-release version and\r\n// build metadata.\r\n\r\n// Note that the only major, minor, patch, and pre-release sections of\r\n// the version string are capturing groups.  The build metadata is not a\r\n// capturing group, because it should not ever be used in version\r\n// comparison.\r\n\r\nvar FULL = R++\r\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\r\n                src[PRERELEASE] + '?' +\r\n                src[BUILD] + '?'\r\n\r\nsrc[FULL] = '^' + FULLPLAIN + '$'\r\n\r\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\r\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\r\n// common in the npm registry.\r\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\r\n                 src[PRERELEASELOOSE] + '?' +\r\n                 src[BUILD] + '?'\r\n\r\nvar LOOSE = R++\r\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\r\n\r\nvar GTLT = R++\r\nsrc[GTLT] = '((?:<|>)?=?)'\r\n\r\n// Something like \"2.*\" or \"1.2.x\".\r\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\r\n// Only the first item is strictly required.\r\nvar XRANGEIDENTIFIERLOOSE = R++\r\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\r\nvar XRANGEIDENTIFIER = R++\r\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\r\n\r\nvar XRANGEPLAIN = R++\r\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\r\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\r\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\r\n                   '(?:' + src[PRERELEASE] + ')?' +\r\n                   src[BUILD] + '?' +\r\n                   ')?)?'\r\n\r\nvar XRANGEPLAINLOOSE = R++\r\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\r\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\r\n                        src[BUILD] + '?' +\r\n                        ')?)?'\r\n\r\nvar XRANGE = R++\r\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\r\nvar XRANGELOOSE = R++\r\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\r\n\r\n// Coercion.\r\n// Extract anything that could conceivably be a part of a valid semver\r\nvar COERCE = R++\r\nsrc[COERCE] = '(^|[^\\\\d])' +\r\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\r\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\r\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\r\n              '(?:$|[^\\\\d])'\r\nvar COERCERTL = R++\r\nre[COERCERTL] = new RegExp(src[COERCE], 'g')\r\n\r\n// Tilde ranges.\r\n// Meaning is \"reasonably at or greater than\"\r\nvar LONETILDE = R++\r\nsrc[LONETILDE] = '(?:~>?)'\r\n\r\nvar TILDETRIM = R++\r\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\r\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\r\nvar tildeTrimReplace = '$1~'\r\n\r\nvar TILDE = R++\r\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\r\nvar TILDELOOSE = R++\r\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\r\n\r\n// Caret ranges.\r\n// Meaning is \"at least and backwards compatible with\"\r\nvar LONECARET = R++\r\nsrc[LONECARET] = '(?:\\\\^)'\r\n\r\nvar CARETTRIM = R++\r\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\r\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\r\nvar caretTrimReplace = '$1^'\r\n\r\nvar CARET = R++\r\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\r\nvar CARETLOOSE = R++\r\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\r\n\r\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\r\nvar COMPARATORLOOSE = R++\r\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\r\nvar COMPARATOR = R++\r\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\r\n\r\n// An expression to strip any whitespace between the gtlt and the thing\r\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\r\nvar COMPARATORTRIM = R++\r\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\r\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\r\n\r\n// this one has to use the /g flag\r\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\r\nvar comparatorTrimReplace = '$1$2$3'\r\n\r\n// Something like `1.2.3 - 1.2.4`\r\n// Note that these all use the loose form, because they'll be\r\n// checked against either the strict or loose comparator form\r\n// later.\r\nvar HYPHENRANGE = R++\r\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\r\n                   '\\\\s+-\\\\s+' +\r\n                   '(' + src[XRANGEPLAIN] + ')' +\r\n                   '\\\\s*$'\r\n\r\nvar HYPHENRANGELOOSE = R++\r\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\r\n                        '\\\\s+-\\\\s+' +\r\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\r\n                        '\\\\s*$'\r\n\r\n// Star ranges basically just allow anything at all.\r\nvar STAR = R++\r\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\r\n\r\n// Compile to actual regexp objects.\r\n// All are flag-free, unless they were created above with a flag.\r\nfor (var i = 0; i < R; i++) {\r\n  debug(i, src[i])\r\n  if (!re[i]) {\r\n    re[i] = new RegExp(src[i])\r\n  }\r\n}\r\n\r\nexports.parse = parse\r\nfunction parse (version, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  if (version.length > MAX_LENGTH) {\r\n    return null\r\n  }\r\n\r\n  var r = options.loose ? re[LOOSE] : re[FULL]\r\n  if (!r.test(version)) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    return new SemVer(version, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\nexports.valid = valid\r\nfunction valid (version, options) {\r\n  var v = parse(version, options)\r\n  return v ? v.version : null\r\n}\r\n\r\nexports.clean = clean\r\nfunction clean (version, options) {\r\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\r\n  return s ? s.version : null\r\n}\r\n\r\nexports.SemVer = SemVer\r\n\r\nfunction SemVer (version, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n  if (version instanceof SemVer) {\r\n    if (version.loose === options.loose) {\r\n      return version\r\n    } else {\r\n      version = version.version\r\n    }\r\n  } else if (typeof version !== 'string') {\r\n    throw new TypeError('Invalid Version: ' + version)\r\n  }\r\n\r\n  if (version.length > MAX_LENGTH) {\r\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\r\n  }\r\n\r\n  if (!(this instanceof SemVer)) {\r\n    return new SemVer(version, options)\r\n  }\r\n\r\n  debug('SemVer', version, options)\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n\r\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\r\n\r\n  if (!m) {\r\n    throw new TypeError('Invalid Version: ' + version)\r\n  }\r\n\r\n  this.raw = version\r\n\r\n  // these are actually numbers\r\n  this.major = +m[1]\r\n  this.minor = +m[2]\r\n  this.patch = +m[3]\r\n\r\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\r\n    throw new TypeError('Invalid major version')\r\n  }\r\n\r\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\r\n    throw new TypeError('Invalid minor version')\r\n  }\r\n\r\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\r\n    throw new TypeError('Invalid patch version')\r\n  }\r\n\r\n  // numberify any prerelease numeric ids\r\n  if (!m[4]) {\r\n    this.prerelease = []\r\n  } else {\r\n    this.prerelease = m[4].split('.').map(function (id) {\r\n      if (/^[0-9]+$/.test(id)) {\r\n        var num = +id\r\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\r\n          return num\r\n        }\r\n      }\r\n      return id\r\n    })\r\n  }\r\n\r\n  this.build = m[5] ? m[5].split('.') : []\r\n  this.format()\r\n}\r\n\r\nSemVer.prototype.format = function () {\r\n  this.version = this.major + '.' + this.minor + '.' + this.patch\r\n  if (this.prerelease.length) {\r\n    this.version += '-' + this.prerelease.join('.')\r\n  }\r\n  return this.version\r\n}\r\n\r\nSemVer.prototype.toString = function () {\r\n  return this.version\r\n}\r\n\r\nSemVer.prototype.compare = function (other) {\r\n  debug('SemVer.compare', this.version, this.options, other)\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  return this.compareMain(other) || this.comparePre(other)\r\n}\r\n\r\nSemVer.prototype.compareMain = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  return compareIdentifiers(this.major, other.major) ||\r\n         compareIdentifiers(this.minor, other.minor) ||\r\n         compareIdentifiers(this.patch, other.patch)\r\n}\r\n\r\nSemVer.prototype.comparePre = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  // NOT having a prerelease is > having one\r\n  if (this.prerelease.length && !other.prerelease.length) {\r\n    return -1\r\n  } else if (!this.prerelease.length && other.prerelease.length) {\r\n    return 1\r\n  } else if (!this.prerelease.length && !other.prerelease.length) {\r\n    return 0\r\n  }\r\n\r\n  var i = 0\r\n  do {\r\n    var a = this.prerelease[i]\r\n    var b = other.prerelease[i]\r\n    debug('prerelease compare', i, a, b)\r\n    if (a === undefined && b === undefined) {\r\n      return 0\r\n    } else if (b === undefined) {\r\n      return 1\r\n    } else if (a === undefined) {\r\n      return -1\r\n    } else if (a === b) {\r\n      continue\r\n    } else {\r\n      return compareIdentifiers(a, b)\r\n    }\r\n  } while (++i)\r\n}\r\n\r\nSemVer.prototype.compareBuild = function (other) {\r\n  if (!(other instanceof SemVer)) {\r\n    other = new SemVer(other, this.options)\r\n  }\r\n\r\n  var i = 0\r\n  do {\r\n    var a = this.build[i]\r\n    var b = other.build[i]\r\n    debug('prerelease compare', i, a, b)\r\n    if (a === undefined && b === undefined) {\r\n      return 0\r\n    } else if (b === undefined) {\r\n      return 1\r\n    } else if (a === undefined) {\r\n      return -1\r\n    } else if (a === b) {\r\n      continue\r\n    } else {\r\n      return compareIdentifiers(a, b)\r\n    }\r\n  } while (++i)\r\n}\r\n\r\n// preminor will bump the version up to the next minor release, and immediately\r\n// down to pre-release. premajor and prepatch work the same way.\r\nSemVer.prototype.inc = function (release, identifier) {\r\n  switch (release) {\r\n    case 'premajor':\r\n      this.prerelease.length = 0\r\n      this.patch = 0\r\n      this.minor = 0\r\n      this.major++\r\n      this.inc('pre', identifier)\r\n      break\r\n    case 'preminor':\r\n      this.prerelease.length = 0\r\n      this.patch = 0\r\n      this.minor++\r\n      this.inc('pre', identifier)\r\n      break\r\n    case 'prepatch':\r\n      // If this is already a prerelease, it will bump to the next version\r\n      // drop any prereleases that might already exist, since they are not\r\n      // relevant at this point.\r\n      this.prerelease.length = 0\r\n      this.inc('patch', identifier)\r\n      this.inc('pre', identifier)\r\n      break\r\n    // If the input is a non-prerelease version, this acts the same as\r\n    // prepatch.\r\n    case 'prerelease':\r\n      if (this.prerelease.length === 0) {\r\n        this.inc('patch', identifier)\r\n      }\r\n      this.inc('pre', identifier)\r\n      break\r\n\r\n    case 'major':\r\n      // If this is a pre-major version, bump up to the same major version.\r\n      // Otherwise increment major.\r\n      // 1.0.0-5 bumps to 1.0.0\r\n      // 1.1.0 bumps to 2.0.0\r\n      if (this.minor !== 0 ||\r\n          this.patch !== 0 ||\r\n          this.prerelease.length === 0) {\r\n        this.major++\r\n      }\r\n      this.minor = 0\r\n      this.patch = 0\r\n      this.prerelease = []\r\n      break\r\n    case 'minor':\r\n      // If this is a pre-minor version, bump up to the same minor version.\r\n      // Otherwise increment minor.\r\n      // 1.2.0-5 bumps to 1.2.0\r\n      // 1.2.1 bumps to 1.3.0\r\n      if (this.patch !== 0 || this.prerelease.length === 0) {\r\n        this.minor++\r\n      }\r\n      this.patch = 0\r\n      this.prerelease = []\r\n      break\r\n    case 'patch':\r\n      // If this is not a pre-release version, it will increment the patch.\r\n      // If it is a pre-release it will bump up to the same patch version.\r\n      // 1.2.0-5 patches to 1.2.0\r\n      // 1.2.0 patches to 1.2.1\r\n      if (this.prerelease.length === 0) {\r\n        this.patch++\r\n      }\r\n      this.prerelease = []\r\n      break\r\n    // This probably shouldn't be used publicly.\r\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\r\n    case 'pre':\r\n      if (this.prerelease.length === 0) {\r\n        this.prerelease = [0]\r\n      } else {\r\n        var i = this.prerelease.length\r\n        while (--i >= 0) {\r\n          if (typeof this.prerelease[i] === 'number') {\r\n            this.prerelease[i]++\r\n            i = -2\r\n          }\r\n        }\r\n        if (i === -1) {\r\n          // didn't increment anything\r\n          this.prerelease.push(0)\r\n        }\r\n      }\r\n      if (identifier) {\r\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\r\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\r\n        if (this.prerelease[0] === identifier) {\r\n          if (isNaN(this.prerelease[1])) {\r\n            this.prerelease = [identifier, 0]\r\n          }\r\n        } else {\r\n          this.prerelease = [identifier, 0]\r\n        }\r\n      }\r\n      break\r\n\r\n    default:\r\n      throw new Error('invalid increment argument: ' + release)\r\n  }\r\n  this.format()\r\n  this.raw = this.version\r\n  return this\r\n}\r\n\r\nexports.inc = inc\r\nfunction inc (version, release, loose, identifier) {\r\n  if (typeof (loose) === 'string') {\r\n    identifier = loose\r\n    loose = undefined\r\n  }\r\n\r\n  try {\r\n    return new SemVer(version, loose).inc(release, identifier).version\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\nexports.diff = diff\r\nfunction diff (version1, version2) {\r\n  if (eq(version1, version2)) {\r\n    return null\r\n  } else {\r\n    var v1 = parse(version1)\r\n    var v2 = parse(version2)\r\n    var prefix = ''\r\n    if (v1.prerelease.length || v2.prerelease.length) {\r\n      prefix = 'pre'\r\n      var defaultResult = 'prerelease'\r\n    }\r\n    for (var key in v1) {\r\n      if (key === 'major' || key === 'minor' || key === 'patch') {\r\n        if (v1[key] !== v2[key]) {\r\n          return prefix + key\r\n        }\r\n      }\r\n    }\r\n    return defaultResult // may be undefined\r\n  }\r\n}\r\n\r\nexports.compareIdentifiers = compareIdentifiers\r\n\r\nvar numeric = /^[0-9]+$/\r\nfunction compareIdentifiers (a, b) {\r\n  var anum = numeric.test(a)\r\n  var bnum = numeric.test(b)\r\n\r\n  if (anum && bnum) {\r\n    a = +a\r\n    b = +b\r\n  }\r\n\r\n  return a === b ? 0\r\n    : (anum && !bnum) ? -1\r\n    : (bnum && !anum) ? 1\r\n    : a < b ? -1\r\n    : 1\r\n}\r\n\r\nexports.rcompareIdentifiers = rcompareIdentifiers\r\nfunction rcompareIdentifiers (a, b) {\r\n  return compareIdentifiers(b, a)\r\n}\r\n\r\nexports.major = major\r\nfunction major (a, loose) {\r\n  return new SemVer(a, loose).major\r\n}\r\n\r\nexports.minor = minor\r\nfunction minor (a, loose) {\r\n  return new SemVer(a, loose).minor\r\n}\r\n\r\nexports.patch = patch\r\nfunction patch (a, loose) {\r\n  return new SemVer(a, loose).patch\r\n}\r\n\r\nexports.compare = compare\r\nfunction compare (a, b, loose) {\r\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\r\n}\r\n\r\nexports.compareLoose = compareLoose\r\nfunction compareLoose (a, b) {\r\n  return compare(a, b, true)\r\n}\r\n\r\nexports.compareBuild = compareBuild\r\nfunction compareBuild (a, b, loose) {\r\n  var versionA = new SemVer(a, loose)\r\n  var versionB = new SemVer(b, loose)\r\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\r\n}\r\n\r\nexports.rcompare = rcompare\r\nfunction rcompare (a, b, loose) {\r\n  return compare(b, a, loose)\r\n}\r\n\r\nexports.sort = sort\r\nfunction sort (list, loose) {\r\n  return list.sort(function (a, b) {\r\n    return exports.compareBuild(a, b, loose)\r\n  })\r\n}\r\n\r\nexports.rsort = rsort\r\nfunction rsort (list, loose) {\r\n  return list.sort(function (a, b) {\r\n    return exports.compareBuild(b, a, loose)\r\n  })\r\n}\r\n\r\nexports.gt = gt\r\nfunction gt (a, b, loose) {\r\n  return compare(a, b, loose) > 0\r\n}\r\n\r\nexports.lt = lt\r\nfunction lt (a, b, loose) {\r\n  return compare(a, b, loose) < 0\r\n}\r\n\r\nexports.eq = eq\r\nfunction eq (a, b, loose) {\r\n  return compare(a, b, loose) === 0\r\n}\r\n\r\nexports.neq = neq\r\nfunction neq (a, b, loose) {\r\n  return compare(a, b, loose) !== 0\r\n}\r\n\r\nexports.gte = gte\r\nfunction gte (a, b, loose) {\r\n  return compare(a, b, loose) >= 0\r\n}\r\n\r\nexports.lte = lte\r\nfunction lte (a, b, loose) {\r\n  return compare(a, b, loose) <= 0\r\n}\r\n\r\nexports.cmp = cmp\r\nfunction cmp (a, op, b, loose) {\r\n  switch (op) {\r\n    case '===':\r\n      if (typeof a === 'object')\r\n        a = a.version\r\n      if (typeof b === 'object')\r\n        b = b.version\r\n      return a === b\r\n\r\n    case '!==':\r\n      if (typeof a === 'object')\r\n        a = a.version\r\n      if (typeof b === 'object')\r\n        b = b.version\r\n      return a !== b\r\n\r\n    case '':\r\n    case '=':\r\n    case '==':\r\n      return eq(a, b, loose)\r\n\r\n    case '!=':\r\n      return neq(a, b, loose)\r\n\r\n    case '>':\r\n      return gt(a, b, loose)\r\n\r\n    case '>=':\r\n      return gte(a, b, loose)\r\n\r\n    case '<':\r\n      return lt(a, b, loose)\r\n\r\n    case '<=':\r\n      return lte(a, b, loose)\r\n\r\n    default:\r\n      throw new TypeError('Invalid operator: ' + op)\r\n  }\r\n}\r\n\r\nexports.Comparator = Comparator\r\nfunction Comparator (comp, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (comp instanceof Comparator) {\r\n    if (comp.loose === !!options.loose) {\r\n      return comp\r\n    } else {\r\n      comp = comp.value\r\n    }\r\n  }\r\n\r\n  if (!(this instanceof Comparator)) {\r\n    return new Comparator(comp, options)\r\n  }\r\n\r\n  debug('comparator', comp, options)\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n  this.parse(comp)\r\n\r\n  if (this.semver === ANY) {\r\n    this.value = ''\r\n  } else {\r\n    this.value = this.operator + this.semver.version\r\n  }\r\n\r\n  debug('comp', this)\r\n}\r\n\r\nvar ANY = {}\r\nComparator.prototype.parse = function (comp) {\r\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\r\n  var m = comp.match(r)\r\n\r\n  if (!m) {\r\n    throw new TypeError('Invalid comparator: ' + comp)\r\n  }\r\n\r\n  this.operator = m[1] !== undefined ? m[1] : ''\r\n  if (this.operator === '=') {\r\n    this.operator = ''\r\n  }\r\n\r\n  // if it literally is just '>' or '' then allow anything.\r\n  if (!m[2]) {\r\n    this.semver = ANY\r\n  } else {\r\n    this.semver = new SemVer(m[2], this.options.loose)\r\n  }\r\n}\r\n\r\nComparator.prototype.toString = function () {\r\n  return this.value\r\n}\r\n\r\nComparator.prototype.test = function (version) {\r\n  debug('Comparator.test', version, this.options.loose)\r\n\r\n  if (this.semver === ANY || version === ANY) {\r\n    return true\r\n  }\r\n\r\n  if (typeof version === 'string') {\r\n    try {\r\n      version = new SemVer(version, this.options)\r\n    } catch (er) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return cmp(version, this.operator, this.semver, this.options)\r\n}\r\n\r\nComparator.prototype.intersects = function (comp, options) {\r\n  if (!(comp instanceof Comparator)) {\r\n    throw new TypeError('a Comparator is required')\r\n  }\r\n\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  var rangeTmp\r\n\r\n  if (this.operator === '') {\r\n    if (this.value === '') {\r\n      return true\r\n    }\r\n    rangeTmp = new Range(comp.value, options)\r\n    return satisfies(this.value, rangeTmp, options)\r\n  } else if (comp.operator === '') {\r\n    if (comp.value === '') {\r\n      return true\r\n    }\r\n    rangeTmp = new Range(this.value, options)\r\n    return satisfies(comp.semver, rangeTmp, options)\r\n  }\r\n\r\n  var sameDirectionIncreasing =\r\n    (this.operator === '>=' || this.operator === '>') &&\r\n    (comp.operator === '>=' || comp.operator === '>')\r\n  var sameDirectionDecreasing =\r\n    (this.operator === '<=' || this.operator === '<') &&\r\n    (comp.operator === '<=' || comp.operator === '<')\r\n  var sameSemVer = this.semver.version === comp.semver.version\r\n  var differentDirectionsInclusive =\r\n    (this.operator === '>=' || this.operator === '<=') &&\r\n    (comp.operator === '>=' || comp.operator === '<=')\r\n  var oppositeDirectionsLessThan =\r\n    cmp(this.semver, '<', comp.semver, options) &&\r\n    ((this.operator === '>=' || this.operator === '>') &&\r\n    (comp.operator === '<=' || comp.operator === '<'))\r\n  var oppositeDirectionsGreaterThan =\r\n    cmp(this.semver, '>', comp.semver, options) &&\r\n    ((this.operator === '<=' || this.operator === '<') &&\r\n    (comp.operator === '>=' || comp.operator === '>'))\r\n\r\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\r\n    (sameSemVer && differentDirectionsInclusive) ||\r\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\r\n}\r\n\r\nexports.Range = Range\r\nfunction Range (range, options) {\r\n  if (!options || typeof options !== 'object') {\r\n    options = {\r\n      loose: !!options,\r\n      includePrerelease: false\r\n    }\r\n  }\r\n\r\n  if (range instanceof Range) {\r\n    if (range.loose === !!options.loose &&\r\n        range.includePrerelease === !!options.includePrerelease) {\r\n      return range\r\n    } else {\r\n      return new Range(range.raw, options)\r\n    }\r\n  }\r\n\r\n  if (range instanceof Comparator) {\r\n    return new Range(range.value, options)\r\n  }\r\n\r\n  if (!(this instanceof Range)) {\r\n    return new Range(range, options)\r\n  }\r\n\r\n  this.options = options\r\n  this.loose = !!options.loose\r\n  this.includePrerelease = !!options.includePrerelease\r\n\r\n  // First, split based on boolean or ||\r\n  this.raw = range\r\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\r\n    return this.parseRange(range.trim())\r\n  }, this).filter(function (c) {\r\n    // throw out any that are not relevant for whatever reason\r\n    return c.length\r\n  })\r\n\r\n  if (!this.set.length) {\r\n    throw new TypeError('Invalid SemVer Range: ' + range)\r\n  }\r\n\r\n  this.format()\r\n}\r\n\r\nRange.prototype.format = function () {\r\n  this.range = this.set.map(function (comps) {\r\n    return comps.join(' ').trim()\r\n  }).join('||').trim()\r\n  return this.range\r\n}\r\n\r\nRange.prototype.toString = function () {\r\n  return this.range\r\n}\r\n\r\nRange.prototype.parseRange = function (range) {\r\n  var loose = this.options.loose\r\n  range = range.trim()\r\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\r\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\r\n  range = range.replace(hr, hyphenReplace)\r\n  debug('hyphen replace', range)\r\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\r\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\r\n  debug('comparator trim', range, re[COMPARATORTRIM])\r\n\r\n  // `~ 1.2.3` => `~1.2.3`\r\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\r\n\r\n  // `^ 1.2.3` => `^1.2.3`\r\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\r\n\r\n  // normalize spaces\r\n  range = range.split(/\\s+/).join(' ')\r\n\r\n  // At this point, the range is completely trimmed and\r\n  // ready to be split into comparators.\r\n\r\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\r\n  var set = range.split(' ').map(function (comp) {\r\n    return parseComparator(comp, this.options)\r\n  }, this).join(' ').split(/\\s+/)\r\n  if (this.options.loose) {\r\n    // in loose mode, throw out any that are not valid comparators\r\n    set = set.filter(function (comp) {\r\n      return !!comp.match(compRe)\r\n    })\r\n  }\r\n  set = set.map(function (comp) {\r\n    return new Comparator(comp, this.options)\r\n  }, this)\r\n\r\n  return set\r\n}\r\n\r\nRange.prototype.intersects = function (range, options) {\r\n  if (!(range instanceof Range)) {\r\n    throw new TypeError('a Range is required')\r\n  }\r\n\r\n  return this.set.some(function (thisComparators) {\r\n    return (\r\n      isSatisfiable(thisComparators, options) &&\r\n      range.set.some(function (rangeComparators) {\r\n        return (\r\n          isSatisfiable(rangeComparators, options) &&\r\n          thisComparators.every(function (thisComparator) {\r\n            return rangeComparators.every(function (rangeComparator) {\r\n              return thisComparator.intersects(rangeComparator, options)\r\n            })\r\n          })\r\n        )\r\n      })\r\n    )\r\n  })\r\n}\r\n\r\n// take a set of comparators and determine whether there\r\n// exists a version which can satisfy it\r\nfunction isSatisfiable (comparators, options) {\r\n  var result = true\r\n  var remainingComparators = comparators.slice()\r\n  var testComparator = remainingComparators.pop()\r\n\r\n  while (result && remainingComparators.length) {\r\n    result = remainingComparators.every(function (otherComparator) {\r\n      return testComparator.intersects(otherComparator, options)\r\n    })\r\n\r\n    testComparator = remainingComparators.pop()\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Mostly just for testing and legacy API reasons\r\nexports.toComparators = toComparators\r\nfunction toComparators (range, options) {\r\n  return new Range(range, options).set.map(function (comp) {\r\n    return comp.map(function (c) {\r\n      return c.value\r\n    }).join(' ').trim().split(' ')\r\n  })\r\n}\r\n\r\n// comprised of xranges, tildes, stars, and gtlt's at this point.\r\n// already replaced the hyphen ranges\r\n// turn into a set of JUST comparators.\r\nfunction parseComparator (comp, options) {\r\n  debug('comp', comp, options)\r\n  comp = replaceCarets(comp, options)\r\n  debug('caret', comp)\r\n  comp = replaceTildes(comp, options)\r\n  debug('tildes', comp)\r\n  comp = replaceXRanges(comp, options)\r\n  debug('xrange', comp)\r\n  comp = replaceStars(comp, options)\r\n  debug('stars', comp)\r\n  return comp\r\n}\r\n\r\nfunction isX (id) {\r\n  return !id || id.toLowerCase() === 'x' || id === '*'\r\n}\r\n\r\n// ~, ~> --> * (any, kinda silly)\r\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\r\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\r\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\r\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\r\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\r\nfunction replaceTildes (comp, options) {\r\n  return comp.trim().split(/\\s+/).map(function (comp) {\r\n    return replaceTilde(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceTilde (comp, options) {\r\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\r\n  return comp.replace(r, function (_, M, m, p, pr) {\r\n    debug('tilde', comp, _, M, m, p, pr)\r\n    var ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (isX(p)) {\r\n      // ~1.2 == >=1.2.0 <1.3.0\r\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n    } else if (pr) {\r\n      debug('replaceTilde pr', pr)\r\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n            ' <' + M + '.' + (+m + 1) + '.0'\r\n    } else {\r\n      // ~1.2.3 == >=1.2.3 <1.3.0\r\n      ret = '>=' + M + '.' + m + '.' + p +\r\n            ' <' + M + '.' + (+m + 1) + '.0'\r\n    }\r\n\r\n    debug('tilde return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\n// ^ --> * (any, kinda silly)\r\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\r\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\r\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\r\n// ^1.2.3 --> >=1.2.3 <2.0.0\r\n// ^1.2.0 --> >=1.2.0 <2.0.0\r\nfunction replaceCarets (comp, options) {\r\n  return comp.trim().split(/\\s+/).map(function (comp) {\r\n    return replaceCaret(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceCaret (comp, options) {\r\n  debug('caret', comp, options)\r\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\r\n  return comp.replace(r, function (_, M, m, p, pr) {\r\n    debug('caret', comp, _, M, m, p, pr)\r\n    var ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\r\n    } else if (isX(p)) {\r\n      if (M === '0') {\r\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\r\n      }\r\n    } else if (pr) {\r\n      debug('replaceCaret pr', pr)\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n                ' <' + M + '.' + m + '.' + (+p + 1)\r\n        } else {\r\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n                ' <' + M + '.' + (+m + 1) + '.0'\r\n        }\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\r\n              ' <' + (+M + 1) + '.0.0'\r\n      }\r\n    } else {\r\n      debug('no pr')\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = '>=' + M + '.' + m + '.' + p +\r\n                ' <' + M + '.' + m + '.' + (+p + 1)\r\n        } else {\r\n          ret = '>=' + M + '.' + m + '.' + p +\r\n                ' <' + M + '.' + (+m + 1) + '.0'\r\n        }\r\n      } else {\r\n        ret = '>=' + M + '.' + m + '.' + p +\r\n              ' <' + (+M + 1) + '.0.0'\r\n      }\r\n    }\r\n\r\n    debug('caret return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\nfunction replaceXRanges (comp, options) {\r\n  debug('replaceXRanges', comp, options)\r\n  return comp.split(/\\s+/).map(function (comp) {\r\n    return replaceXRange(comp, options)\r\n  }).join(' ')\r\n}\r\n\r\nfunction replaceXRange (comp, options) {\r\n  comp = comp.trim()\r\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\r\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\r\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\r\n    var xM = isX(M)\r\n    var xm = xM || isX(m)\r\n    var xp = xm || isX(p)\r\n    var anyX = xp\r\n\r\n    if (gtlt === '=' && anyX) {\r\n      gtlt = ''\r\n    }\r\n\r\n    // if we're including prereleases in the match, then we need\r\n    // to fix this to -0, the lowest possible prerelease value\r\n    pr = options.includePrerelease ? '-0' : ''\r\n\r\n    if (xM) {\r\n      if (gtlt === '>' || gtlt === '<') {\r\n        // nothing is allowed\r\n        ret = '<0.0.0-0'\r\n      } else {\r\n        // nothing is forbidden\r\n        ret = '*'\r\n      }\r\n    } else if (gtlt && anyX) {\r\n      // we know patch is an x, because we have any x at all.\r\n      // replace X with 0\r\n      if (xm) {\r\n        m = 0\r\n      }\r\n      p = 0\r\n\r\n      if (gtlt === '>') {\r\n        // >1 => >=2.0.0\r\n        // >1.2 => >=1.3.0\r\n        // >1.2.3 => >= 1.2.4\r\n        gtlt = '>='\r\n        if (xm) {\r\n          M = +M + 1\r\n          m = 0\r\n          p = 0\r\n        } else {\r\n          m = +m + 1\r\n          p = 0\r\n        }\r\n      } else if (gtlt === '<=') {\r\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\r\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\r\n        gtlt = '<'\r\n        if (xm) {\r\n          M = +M + 1\r\n        } else {\r\n          m = +m + 1\r\n        }\r\n      }\r\n\r\n      ret = gtlt + M + '.' + m + '.' + p + pr\r\n    } else if (xm) {\r\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\r\n    } else if (xp) {\r\n      ret = '>=' + M + '.' + m + '.0' + pr +\r\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\r\n    }\r\n\r\n    debug('xRange return', ret)\r\n\r\n    return ret\r\n  })\r\n}\r\n\r\n// Because * is AND-ed with everything else in the comparator,\r\n// and '' means \"any version\", just remove the *s entirely.\r\nfunction replaceStars (comp, options) {\r\n  debug('replaceStars', comp, options)\r\n  // Looseness is ignored here.  star is always as loose as it gets!\r\n  return comp.trim().replace(re[STAR], '')\r\n}\r\n\r\n// This function is passed to string.replace(re[HYPHENRANGE])\r\n// M, m, patch, prerelease, build\r\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\r\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\r\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\r\nfunction hyphenReplace ($0,\r\n  from, fM, fm, fp, fpr, fb,\r\n  to, tM, tm, tp, tpr, tb) {\r\n  if (isX(fM)) {\r\n    from = ''\r\n  } else if (isX(fm)) {\r\n    from = '>=' + fM + '.0.0'\r\n  } else if (isX(fp)) {\r\n    from = '>=' + fM + '.' + fm + '.0'\r\n  } else {\r\n    from = '>=' + from\r\n  }\r\n\r\n  if (isX(tM)) {\r\n    to = ''\r\n  } else if (isX(tm)) {\r\n    to = '<' + (+tM + 1) + '.0.0'\r\n  } else if (isX(tp)) {\r\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\r\n  } else if (tpr) {\r\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\r\n  } else {\r\n    to = '<=' + to\r\n  }\r\n\r\n  return (from + ' ' + to).trim()\r\n}\r\n\r\n// if ANY of the sets match ALL of its comparators, then pass\r\nRange.prototype.test = function (version) {\r\n  if (!version) {\r\n    return false\r\n  }\r\n\r\n  if (typeof version === 'string') {\r\n    try {\r\n      version = new SemVer(version, this.options)\r\n    } catch (er) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < this.set.length; i++) {\r\n    if (testSet(this.set[i], version, this.options)) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction testSet (set, version, options) {\r\n  for (var i = 0; i < set.length; i++) {\r\n    if (!set[i].test(version)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  if (version.prerelease.length && !options.includePrerelease) {\r\n    // Find the set of versions that are allowed to have prereleases\r\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\r\n    // That should allow `1.2.3-pr.2` to pass.\r\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\r\n    // even though it's within the range set by the comparators.\r\n    for (i = 0; i < set.length; i++) {\r\n      debug(set[i].semver)\r\n      if (set[i].semver === ANY) {\r\n        continue\r\n      }\r\n\r\n      if (set[i].semver.prerelease.length > 0) {\r\n        var allowed = set[i].semver\r\n        if (allowed.major === version.major &&\r\n            allowed.minor === version.minor &&\r\n            allowed.patch === version.patch) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    // Version has a -pre, but it's not one of the ones we like.\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexports.satisfies = satisfies\r\nfunction satisfies (version, range, options) {\r\n  try {\r\n    range = new Range(range, options)\r\n  } catch (er) {\r\n    return false\r\n  }\r\n  return range.test(version)\r\n}\r\n\r\nexports.maxSatisfying = maxSatisfying\r\nfunction maxSatisfying (versions, range, options) {\r\n  var max = null\r\n  var maxSV = null\r\n  try {\r\n    var rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach(function (v) {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!max || maxSV.compare(v) === -1) {\r\n        // compare(max, v, true)\r\n        max = v\r\n        maxSV = new SemVer(max, options)\r\n      }\r\n    }\r\n  })\r\n  return max\r\n}\r\n\r\nexports.minSatisfying = minSatisfying\r\nfunction minSatisfying (versions, range, options) {\r\n  var min = null\r\n  var minSV = null\r\n  try {\r\n    var rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach(function (v) {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!min || minSV.compare(v) === 1) {\r\n        // compare(min, v, true)\r\n        min = v\r\n        minSV = new SemVer(min, options)\r\n      }\r\n    }\r\n  })\r\n  return min\r\n}\r\n\r\nexports.minVersion = minVersion\r\nfunction minVersion (range, loose) {\r\n  range = new Range(range, loose)\r\n\r\n  var minver = new SemVer('0.0.0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = new SemVer('0.0.0-0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = null\r\n  for (var i = 0; i < range.set.length; ++i) {\r\n    var comparators = range.set[i]\r\n\r\n    comparators.forEach(function (comparator) {\r\n      // Clone to avoid manipulating the comparator's semver object.\r\n      var compver = new SemVer(comparator.semver.version)\r\n      switch (comparator.operator) {\r\n        case '>':\r\n          if (compver.prerelease.length === 0) {\r\n            compver.patch++\r\n          } else {\r\n            compver.prerelease.push(0)\r\n          }\r\n          compver.raw = compver.format()\r\n          /* fallthrough */\r\n        case '':\r\n        case '>=':\r\n          if (!minver || gt(minver, compver)) {\r\n            minver = compver\r\n          }\r\n          break\r\n        case '<':\r\n        case '<=':\r\n          /* Ignore maximum versions */\r\n          break\r\n        /* istanbul ignore next */\r\n        default:\r\n          throw new Error('Unexpected operation: ' + comparator.operator)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (minver && range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexports.validRange = validRange\r\nfunction validRange (range, options) {\r\n  try {\r\n    // Return '*' instead of '' so that truthiness works.\r\n    // This will throw if it's invalid anyway\r\n    return new Range(range, options).range || '*'\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\n\r\n// Determine if version is less than all the versions possible in the range\r\nexports.ltr = ltr\r\nfunction ltr (version, range, options) {\r\n  return outside(version, range, '<', options)\r\n}\r\n\r\n// Determine if version is greater than all the versions possible in the range.\r\nexports.gtr = gtr\r\nfunction gtr (version, range, options) {\r\n  return outside(version, range, '>', options)\r\n}\r\n\r\nexports.outside = outside\r\nfunction outside (version, range, hilo, options) {\r\n  version = new SemVer(version, options)\r\n  range = new Range(range, options)\r\n\r\n  var gtfn, ltefn, ltfn, comp, ecomp\r\n  switch (hilo) {\r\n    case '>':\r\n      gtfn = gt\r\n      ltefn = lte\r\n      ltfn = lt\r\n      comp = '>'\r\n      ecomp = '>='\r\n      break\r\n    case '<':\r\n      gtfn = lt\r\n      ltefn = gte\r\n      ltfn = gt\r\n      comp = '<'\r\n      ecomp = '<='\r\n      break\r\n    default:\r\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\r\n  }\r\n\r\n  // If it satisifes the range it is not outside\r\n  if (satisfies(version, range, options)) {\r\n    return false\r\n  }\r\n\r\n  // From now on, variable terms are as if we're in \"gtr\" mode.\r\n  // but note that everything is flipped for the \"ltr\" function.\r\n\r\n  for (var i = 0; i < range.set.length; ++i) {\r\n    var comparators = range.set[i]\r\n\r\n    var high = null\r\n    var low = null\r\n\r\n    comparators.forEach(function (comparator) {\r\n      if (comparator.semver === ANY) {\r\n        comparator = new Comparator('>=0.0.0')\r\n      }\r\n      high = high || comparator\r\n      low = low || comparator\r\n      if (gtfn(comparator.semver, high.semver, options)) {\r\n        high = comparator\r\n      } else if (ltfn(comparator.semver, low.semver, options)) {\r\n        low = comparator\r\n      }\r\n    })\r\n\r\n    // If the edge version comparator has a operator then our version\r\n    // isn't outside it\r\n    if (high.operator === comp || high.operator === ecomp) {\r\n      return false\r\n    }\r\n\r\n    // If the lowest version comparator has an operator and our version\r\n    // is less than it then it isn't higher than the range\r\n    if ((!low.operator || low.operator === comp) &&\r\n        ltefn(version, low.semver)) {\r\n      return false\r\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexports.prerelease = prerelease\r\nfunction prerelease (version, options) {\r\n  var parsed = parse(version, options)\r\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\r\n}\r\n\r\nexports.intersects = intersects\r\nfunction intersects (r1, r2, options) {\r\n  r1 = new Range(r1, options)\r\n  r2 = new Range(r2, options)\r\n  return r1.intersects(r2)\r\n}\r\n\r\nexports.coerce = coerce\r\nfunction coerce (version, options) {\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version === 'number') {\r\n    version = String(version)\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  options = options || {}\r\n\r\n  var match = null\r\n  if (!options.rtl) {\r\n    match = version.match(re[COERCE])\r\n  } else {\r\n    // Find the right-most coercible string that does not share\r\n    // a terminus with a more left-ward coercible string.\r\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\r\n    //\r\n    // Walk through the string checking with a /g regexp\r\n    // Manually set the index so as to pick up overlapping matches.\r\n    // Stop when we get a match that ends at the string end, since no\r\n    // coercible string can be more right-ward without the same terminus.\r\n    var next\r\n    while ((next = re[COERCERTL].exec(version)) &&\r\n      (!match || match.index + match[0].length !== version.length)\r\n    ) {\r\n      if (!match ||\r\n          next.index + next[0].length !== match.index + match[0].length) {\r\n        match = next\r\n      }\r\n      re[COERCERTL].lastIndex = next.index + next[1].length + next[2].length\r\n    }\r\n    // leave it in a clean state\r\n    re[COERCERTL].lastIndex = -1\r\n  }\r\n\r\n  if (match === null) {\r\n    return null\r\n  }\r\n\r\n  return parse(match[2] +\r\n    '.' + (match[3] || '0') +\r\n    '.' + (match[4] || '0'), options)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
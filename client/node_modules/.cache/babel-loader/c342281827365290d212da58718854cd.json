{"ast":null,"code":"/**\r\n * Takes an argument and if it's an array, returns the first item in the array,\r\n * otherwise returns the argument. Used for Preact compatibility.\r\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\r\n * Takes a maybe-undefined function and arbitrary args and invokes the function\r\n * only if it is defined.\r\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \"function\") {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\r\n * Does a shallow equality check of two objects by comparing the reference\r\n * equality of each value.\r\n */\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n\n  if (bKeys.length !== aKeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < bKeys.length; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\r\n * Sets a ref using either a ref callback or a ref object\r\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === \"function\") {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n    ref.current = node;\n  }\n};","map":{"version":3,"names":["unwrapArray","arg","Array","isArray","safeInvoke","fn","_len","arguments","length","args","_key","apply","shallowEqual","objA","objB","aKeys","Object","keys","bKeys","i","key","setRef","ref","node","current"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/react-popper/lib/esm/utils.js"],"sourcesContent":["/**\r\n * Takes an argument and if it's an array, returns the first item in the array,\r\n * otherwise returns the argument. Used for Preact compatibility.\r\n */\r\nexport var unwrapArray = function unwrapArray(arg) {\r\n  return Array.isArray(arg) ? arg[0] : arg;\r\n};\r\n/**\r\n * Takes a maybe-undefined function and arbitrary args and invokes the function\r\n * only if it is defined.\r\n */\r\n\r\nexport var safeInvoke = function safeInvoke(fn) {\r\n  if (typeof fn === \"function\") {\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    return fn.apply(void 0, args);\r\n  }\r\n};\r\n/**\r\n * Does a shallow equality check of two objects by comparing the reference\r\n * equality of each value.\r\n */\r\n\r\nexport var shallowEqual = function shallowEqual(objA, objB) {\r\n  var aKeys = Object.keys(objA);\r\n  var bKeys = Object.keys(objB);\r\n\r\n  if (bKeys.length !== aKeys.length) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0; i < bKeys.length; i++) {\r\n    var key = aKeys[i];\r\n\r\n    if (objA[key] !== objB[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n/**\r\n * Sets a ref using either a ref callback or a ref object\r\n */\r\n\r\nexport var setRef = function setRef(ref, node) {\r\n  // if its a function call it\r\n  if (typeof ref === \"function\") {\r\n    return safeInvoke(ref, node);\r\n  } // otherwise we should treat it as a ref object\r\n  else if (ref != null) {\r\n      ref.current = node;\r\n    }\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,IAAIA,WAAW,GAAG,SAASA,WAAT,CAAqBC,GAArB,EAA0B;EACjD,OAAOC,KAAK,CAACC,OAAN,CAAcF,GAAd,IAAqBA,GAAG,CAAC,CAAD,CAAxB,GAA8BA,GAArC;AACD,CAFM;AAGP;AACA;AACA;AACA;;AAEA,OAAO,IAAIG,UAAU,GAAG,SAASA,UAAT,CAAoBC,EAApB,EAAwB;EAC9C,IAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;IAC5B,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIP,KAAJ,CAAUI,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEI,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGJ,IAA9F,EAAoGI,IAAI,EAAxG,EAA4G;MAC1GD,IAAI,CAACC,IAAI,GAAG,CAAR,CAAJ,GAAiBH,SAAS,CAACG,IAAD,CAA1B;IACD;;IAED,OAAOL,EAAE,CAACM,KAAH,CAAS,KAAK,CAAd,EAAiBF,IAAjB,CAAP;EACD;AACF,CARM;AASP;AACA;AACA;AACA;;AAEA,OAAO,IAAIG,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;EAC1D,IAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAZ;EACA,IAAIK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAZ;;EAEA,IAAII,KAAK,CAACV,MAAN,KAAiBO,KAAK,CAACP,MAA3B,EAAmC;IACjC,OAAO,KAAP;EACD;;EAED,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACV,MAA1B,EAAkCW,CAAC,EAAnC,EAAuC;IACrC,IAAIC,GAAG,GAAGL,KAAK,CAACI,CAAD,CAAf;;IAEA,IAAIN,IAAI,CAACO,GAAD,CAAJ,KAAcN,IAAI,CAACM,GAAD,CAAtB,EAA6B;MAC3B,OAAO,KAAP;IACD;EACF;;EAED,OAAO,IAAP;AACD,CAjBM;AAkBP;AACA;AACA;;AAEA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;EAC7C;EACA,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC7B,OAAOlB,UAAU,CAACkB,GAAD,EAAMC,IAAN,CAAjB;EACD,CAFD,CAEE;EAFF,KAGK,IAAID,GAAG,IAAI,IAAX,EAAiB;IAClBA,GAAG,CAACE,OAAJ,GAAcD,IAAd;EACD;AACJ,CARM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\n\n/**\r\n * @file utils.js\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nvar ethjsUnit = require('ethjs-unit');\n\nvar utils = require('./utils.js');\n\nvar soliditySha3 = require('./soliditySha3.js');\n\nvar randombytes = require('randombytes');\n\nvar BN = require('bn.js');\n/**\r\n * Fires an error in an event emitter and callback and returns the eventemitter\r\n *\r\n * @method _fireError\r\n * @param {Object} error a string, a error, or an object with {message, data}\r\n * @param {Object} emitter\r\n * @param {Function} reject\r\n * @param {Function} callback\r\n * @param {any} optionalData\r\n * @return {Object} the emitter\r\n */\n\n\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n  /*jshint maxcomplexity: 10 */\n  // add data if given\n  if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n    if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n      error.data = JSON.stringify(error.data, null, 2);\n    }\n\n    error = error.message + \"\\n\" + error.data;\n  }\n\n  if (typeof error === 'string') {\n    error = new Error(error);\n  }\n\n  if (typeof callback === 'function') {\n    callback(error, optionalData);\n  }\n\n  if (typeof reject === 'function') {\n    // suppress uncatched error if an error listener is present\n    // OR suppress uncatched error if an callback listener is present\n    if (emitter && typeof emitter.listeners === 'function' && emitter.listeners('error').length || typeof callback === 'function') {\n      emitter.catch(function () {});\n    } // reject later, to be able to return emitter\n\n\n    setTimeout(function () {\n      reject(error);\n    }, 1);\n  }\n\n  if (emitter && typeof emitter.emit === 'function') {\n    // emit later, to be able to return emitter\n    setTimeout(function () {\n      emitter.emit('error', error, optionalData);\n      emitter.removeAllListeners();\n    }, 1);\n  }\n\n  return emitter;\n};\n/**\r\n * Should be used to create full function/event name from json abi\r\n *\r\n * @method _jsonInterfaceMethodToString\r\n * @param {Object} json\r\n * @return {String} full function/event name\r\n */\n\n\nvar _jsonInterfaceMethodToString = function (json) {\n  if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n    return json.name;\n  }\n\n  return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\r\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\r\n *\r\n * @method _flattenTypes\r\n * @param {bool} includeTuple\r\n * @param {Object} puts\r\n * @return {Array} parameters as strings\r\n */\n\n\nvar _flattenTypes = function (includeTuple, puts) {\n  // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n  var types = [];\n  puts.forEach(function (param) {\n    if (typeof param.components === 'object') {\n      if (param.type.substring(0, 5) !== 'tuple') {\n        throw new Error('components found but type is not tuple; report on GitHub');\n      }\n\n      var suffix = '';\n      var arrayBracket = param.type.indexOf('[');\n\n      if (arrayBracket >= 0) {\n        suffix = param.type.substring(arrayBracket);\n      }\n\n      var result = _flattenTypes(includeTuple, param.components); // console.log(\"result should have things: \" + result)\n\n\n      if (Array.isArray(result) && includeTuple) {\n        // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n        types.push('tuple(' + result.join(',') + ')' + suffix);\n      } else if (!includeTuple) {\n        // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n        types.push('(' + result.join(',') + ')' + suffix);\n      } else {\n        // console.log(\"its a single type within a tuple: \" + result.types)\n        types.push('(' + result + ')');\n      }\n    } else {\n      // console.log(\"its a type and not directly in a tuple: \" + param.type)\n      types.push(param.type);\n    }\n  });\n  return types;\n};\n/**\r\n * Returns a random hex string by the given bytes size\r\n *\r\n * @param {Number} size\r\n * @returns {string}\r\n */\n\n\nvar randomHex = function (size) {\n  return '0x' + randombytes(size).toString('hex');\n};\n/**\r\n * Should be called to get ascii from it's hex representation\r\n *\r\n * @method hexToAscii\r\n * @param {String} hex\r\n * @returns {String} ascii string representation of hex value\r\n */\n\n\nvar hexToAscii = function (hex) {\n  if (!utils.isHexStrict(hex)) throw new Error('The parameter must be a valid HEX string.');\n  var str = \"\";\n  var i = 0,\n      l = hex.length;\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.slice(i, i + 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n};\n/**\r\n * Should be called to get hex representation (prefixed by 0x) of ascii string\r\n *\r\n * @method asciiToHex\r\n * @param {String} str\r\n * @returns {String} hex representation of input string\r\n */\n\n\nvar asciiToHex = function (str) {\n  if (!str) return \"0x00\";\n  var hex = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return \"0x\" + hex;\n};\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getUnitValue\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BN} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\n\n\nvar getUnitValue = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n\n  if (!ethjsUnit.unitMap[unit]) {\n    throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n  }\n\n  return unit;\n};\n/**\r\n * Takes a number of wei and converts it to any other ether unit.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method fromWei\r\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert to, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\n\n\nvar fromWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !(typeof number === 'string')) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\r\n * Takes a number of a unit and converts it to wei.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method toWei\r\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert from, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\n\n\nvar toWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !(typeof number === 'string')) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\r\n * Converts to a checksum address\r\n *\r\n * @method toChecksumAddress\r\n * @param {String} address the given HEX address\r\n * @return {String}\r\n */\n\n\nvar toChecksumAddress = function (address) {\n  if (typeof address === 'undefined') return '';\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n  address = address.toLowerCase().replace(/^0x/i, '');\n  var addressHash = utils.sha3(address).replace(/^0x/i, '');\n  var checksumAddress = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    // If ith character is 8 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += address[i].toUpperCase();\n    } else {\n      checksumAddress += address[i];\n    }\n  }\n\n  return checksumAddress;\n};\n/**\r\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\r\n * For more details on this type of function, see\r\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n *\r\n * @method compareBlockNumbers\r\n *\r\n * @param {String|Number|BN} a\r\n *\r\n * @param {String|Number|BN} b\r\n *\r\n * @returns {Number} -1, 0, or 1\r\n */\n\n\nvar compareBlockNumbers = function (a, b) {\n  if (a == b) {\n    return 0;\n  } else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n    return 0;\n  } else if (\"genesis\" == a || \"earliest\" == a) {\n    // b !== a, thus a < b\n    return -1;\n  } else if (\"genesis\" == b || \"earliest\" == b) {\n    // b !== a, thus a > b\n    return 1;\n  } else if (a == \"latest\") {\n    if (b == \"pending\") {\n      return -1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return 1;\n    }\n  } else if (b === \"latest\") {\n    if (a == \"pending\") {\n      return 1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return -1;\n    }\n  } else if (a == \"pending\") {\n    // b (== OR <) \"latest\", thus a > b\n    return 1;\n  } else if (b == \"pending\") {\n    return -1;\n  } else {\n    let bnA = new BN(a);\n    let bnB = new BN(b);\n\n    if (bnA.lt(bnB)) {\n      return -1;\n    } else if (bnA.eq(bnB)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n};\n\nmodule.exports = {\n  _fireError: _fireError,\n  _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n  _flattenTypes: _flattenTypes,\n  // extractDisplayName: extractDisplayName,\n  // extractTypeName: extractTypeName,\n  randomHex: randomHex,\n  BN: utils.BN,\n  isBN: utils.isBN,\n  isBigNumber: utils.isBigNumber,\n  isHex: utils.isHex,\n  isHexStrict: utils.isHexStrict,\n  sha3: utils.sha3,\n  sha3Raw: utils.sha3Raw,\n  keccak256: utils.sha3,\n  soliditySha3: soliditySha3.soliditySha3,\n  soliditySha3Raw: soliditySha3.soliditySha3Raw,\n  encodePacked: soliditySha3.encodePacked,\n  isAddress: utils.isAddress,\n  checkAddressChecksum: utils.checkAddressChecksum,\n  toChecksumAddress: toChecksumAddress,\n  toHex: utils.toHex,\n  toBN: utils.toBN,\n  bytesToHex: utils.bytesToHex,\n  hexToBytes: utils.hexToBytes,\n  hexToNumberString: utils.hexToNumberString,\n  hexToNumber: utils.hexToNumber,\n  toDecimal: utils.hexToNumber,\n  numberToHex: utils.numberToHex,\n  fromDecimal: utils.numberToHex,\n  hexToUtf8: utils.hexToUtf8,\n  hexToString: utils.hexToUtf8,\n  toUtf8: utils.hexToUtf8,\n  stripHexPrefix: utils.stripHexPrefix,\n  utf8ToHex: utils.utf8ToHex,\n  stringToHex: utils.utf8ToHex,\n  fromUtf8: utils.utf8ToHex,\n  hexToAscii: hexToAscii,\n  toAscii: hexToAscii,\n  asciiToHex: asciiToHex,\n  fromAscii: asciiToHex,\n  unitMap: ethjsUnit.unitMap,\n  toWei: toWei,\n  fromWei: fromWei,\n  padLeft: utils.leftPad,\n  leftPad: utils.leftPad,\n  padRight: utils.rightPad,\n  rightPad: utils.rightPad,\n  toTwosComplement: utils.toTwosComplement,\n  isBloom: utils.isBloom,\n  isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n  isContractAddressInBloom: utils.isContractAddressInBloom,\n  isTopic: utils.isTopic,\n  isTopicInBloom: utils.isTopicInBloom,\n  isInBloom: utils.isInBloom,\n  compareBlockNumbers: compareBlockNumbers,\n  toNumber: utils.toNumber\n};","map":{"version":3,"names":["ethjsUnit","require","utils","soliditySha3","randombytes","BN","_fireError","error","emitter","reject","callback","optionalData","Error","data","Array","isArray","JSON","stringify","message","listeners","length","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","indexOf","_flattenTypes","inputs","join","includeTuple","puts","types","forEach","param","components","type","substring","suffix","arrayBracket","result","push","randomHex","size","toString","hexToAscii","hex","isHexStrict","str","i","l","code","parseInt","slice","String","fromCharCode","asciiToHex","charCodeAt","n","getUnitValue","unit","toLowerCase","unitMap","fromWei","number","isBN","toWei","toChecksumAddress","address","test","replace","addressHash","sha3","checksumAddress","toUpperCase","compareBlockNumbers","a","b","bnA","bnB","lt","eq","module","exports","isBigNumber","isHex","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","toNumber"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/web3-eth-ens/node_modules/web3-utils/lib/index.js"],"sourcesContent":["/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n/**\r\n * @file utils.js\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\nvar ethjsUnit = require('ethjs-unit');\r\nvar utils = require('./utils.js');\r\nvar soliditySha3 = require('./soliditySha3.js');\r\nvar randombytes = require('randombytes');\r\nvar BN = require('bn.js');\r\n/**\r\n * Fires an error in an event emitter and callback and returns the eventemitter\r\n *\r\n * @method _fireError\r\n * @param {Object} error a string, a error, or an object with {message, data}\r\n * @param {Object} emitter\r\n * @param {Function} reject\r\n * @param {Function} callback\r\n * @param {any} optionalData\r\n * @return {Object} the emitter\r\n */\r\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\r\n    /*jshint maxcomplexity: 10 */\r\n    // add data if given\r\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\r\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\r\n            error.data = JSON.stringify(error.data, null, 2);\r\n        }\r\n        error = error.message + \"\\n\" + error.data;\r\n    }\r\n    if (typeof error === 'string') {\r\n        error = new Error(error);\r\n    }\r\n    if (typeof callback === 'function') {\r\n        callback(error, optionalData);\r\n    }\r\n    if (typeof reject === 'function') {\r\n        // suppress uncatched error if an error listener is present\r\n        // OR suppress uncatched error if an callback listener is present\r\n        if (emitter &&\r\n            (typeof emitter.listeners === 'function' &&\r\n                emitter.listeners('error').length) || typeof callback === 'function') {\r\n            emitter.catch(function () { });\r\n        }\r\n        // reject later, to be able to return emitter\r\n        setTimeout(function () {\r\n            reject(error);\r\n        }, 1);\r\n    }\r\n    if (emitter && typeof emitter.emit === 'function') {\r\n        // emit later, to be able to return emitter\r\n        setTimeout(function () {\r\n            emitter.emit('error', error, optionalData);\r\n            emitter.removeAllListeners();\r\n        }, 1);\r\n    }\r\n    return emitter;\r\n};\r\n/**\r\n * Should be used to create full function/event name from json abi\r\n *\r\n * @method _jsonInterfaceMethodToString\r\n * @param {Object} json\r\n * @return {String} full function/event name\r\n */\r\nvar _jsonInterfaceMethodToString = function (json) {\r\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\r\n        return json.name;\r\n    }\r\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\r\n};\r\n/**\r\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\r\n *\r\n * @method _flattenTypes\r\n * @param {bool} includeTuple\r\n * @param {Object} puts\r\n * @return {Array} parameters as strings\r\n */\r\nvar _flattenTypes = function (includeTuple, puts) {\r\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\r\n    var types = [];\r\n    puts.forEach(function (param) {\r\n        if (typeof param.components === 'object') {\r\n            if (param.type.substring(0, 5) !== 'tuple') {\r\n                throw new Error('components found but type is not tuple; report on GitHub');\r\n            }\r\n            var suffix = '';\r\n            var arrayBracket = param.type.indexOf('[');\r\n            if (arrayBracket >= 0) {\r\n                suffix = param.type.substring(arrayBracket);\r\n            }\r\n            var result = _flattenTypes(includeTuple, param.components);\r\n            // console.log(\"result should have things: \" + result)\r\n            if (Array.isArray(result) && includeTuple) {\r\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\r\n                types.push('tuple(' + result.join(',') + ')' + suffix);\r\n            }\r\n            else if (!includeTuple) {\r\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\r\n                types.push('(' + result.join(',') + ')' + suffix);\r\n            }\r\n            else {\r\n                // console.log(\"its a single type within a tuple: \" + result.types)\r\n                types.push('(' + result + ')');\r\n            }\r\n        }\r\n        else {\r\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\r\n            types.push(param.type);\r\n        }\r\n    });\r\n    return types;\r\n};\r\n/**\r\n * Returns a random hex string by the given bytes size\r\n *\r\n * @param {Number} size\r\n * @returns {string}\r\n */\r\nvar randomHex = function (size) {\r\n    return '0x' + randombytes(size).toString('hex');\r\n};\r\n/**\r\n * Should be called to get ascii from it's hex representation\r\n *\r\n * @method hexToAscii\r\n * @param {String} hex\r\n * @returns {String} ascii string representation of hex value\r\n */\r\nvar hexToAscii = function (hex) {\r\n    if (!utils.isHexStrict(hex))\r\n        throw new Error('The parameter must be a valid HEX string.');\r\n    var str = \"\";\r\n    var i = 0, l = hex.length;\r\n    if (hex.substring(0, 2) === '0x') {\r\n        i = 2;\r\n    }\r\n    for (; i < l; i += 2) {\r\n        var code = parseInt(hex.slice(i, i + 2), 16);\r\n        str += String.fromCharCode(code);\r\n    }\r\n    return str;\r\n};\r\n/**\r\n * Should be called to get hex representation (prefixed by 0x) of ascii string\r\n *\r\n * @method asciiToHex\r\n * @param {String} str\r\n * @returns {String} hex representation of input string\r\n */\r\nvar asciiToHex = function (str) {\r\n    if (!str)\r\n        return \"0x00\";\r\n    var hex = \"\";\r\n    for (var i = 0; i < str.length; i++) {\r\n        var code = str.charCodeAt(i);\r\n        var n = code.toString(16);\r\n        hex += n.length < 2 ? '0' + n : n;\r\n    }\r\n    return \"0x\" + hex;\r\n};\r\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getUnitValue\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BN} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\r\nvar getUnitValue = function (unit) {\r\n    unit = unit ? unit.toLowerCase() : 'ether';\r\n    if (!ethjsUnit.unitMap[unit]) {\r\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\r\n    }\r\n    return unit;\r\n};\r\n/**\r\n * Takes a number of wei and converts it to any other ether unit.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method fromWei\r\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert to, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\r\nvar fromWei = function (number, unit) {\r\n    unit = getUnitValue(unit);\r\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\r\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\r\n    }\r\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\r\n};\r\n/**\r\n * Takes a number of a unit and converts it to wei.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method toWei\r\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert from, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\r\nvar toWei = function (number, unit) {\r\n    unit = getUnitValue(unit);\r\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\r\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\r\n    }\r\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\r\n};\r\n/**\r\n * Converts to a checksum address\r\n *\r\n * @method toChecksumAddress\r\n * @param {String} address the given HEX address\r\n * @return {String}\r\n */\r\nvar toChecksumAddress = function (address) {\r\n    if (typeof address === 'undefined')\r\n        return '';\r\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\r\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\r\n    address = address.toLowerCase().replace(/^0x/i, '');\r\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\r\n    var checksumAddress = '0x';\r\n    for (var i = 0; i < address.length; i++) {\r\n        // If ith character is 8 to f then make it uppercase\r\n        if (parseInt(addressHash[i], 16) > 7) {\r\n            checksumAddress += address[i].toUpperCase();\r\n        }\r\n        else {\r\n            checksumAddress += address[i];\r\n        }\r\n    }\r\n    return checksumAddress;\r\n};\r\n/**\r\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\r\n * For more details on this type of function, see\r\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n *\r\n * @method compareBlockNumbers\r\n *\r\n * @param {String|Number|BN} a\r\n *\r\n * @param {String|Number|BN} b\r\n *\r\n * @returns {Number} -1, 0, or 1\r\n */\r\nvar compareBlockNumbers = function (a, b) {\r\n    if (a == b) {\r\n        return 0;\r\n    }\r\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\r\n        return 0;\r\n    }\r\n    else if (\"genesis\" == a || \"earliest\" == a) {\r\n        // b !== a, thus a < b\r\n        return -1;\r\n    }\r\n    else if (\"genesis\" == b || \"earliest\" == b) {\r\n        // b !== a, thus a > b\r\n        return 1;\r\n    }\r\n    else if (a == \"latest\") {\r\n        if (b == \"pending\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            // b !== (\"pending\" OR \"latest\"), thus a > b\r\n            return 1;\r\n        }\r\n    }\r\n    else if (b === \"latest\") {\r\n        if (a == \"pending\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            // b !== (\"pending\" OR \"latest\"), thus a > b\r\n            return -1;\r\n        }\r\n    }\r\n    else if (a == \"pending\") {\r\n        // b (== OR <) \"latest\", thus a > b\r\n        return 1;\r\n    }\r\n    else if (b == \"pending\") {\r\n        return -1;\r\n    }\r\n    else {\r\n        let bnA = new BN(a);\r\n        let bnB = new BN(b);\r\n        if (bnA.lt(bnB)) {\r\n            return -1;\r\n        }\r\n        else if (bnA.eq(bnB)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n};\r\nmodule.exports = {\r\n    _fireError: _fireError,\r\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\r\n    _flattenTypes: _flattenTypes,\r\n    // extractDisplayName: extractDisplayName,\r\n    // extractTypeName: extractTypeName,\r\n    randomHex: randomHex,\r\n    BN: utils.BN,\r\n    isBN: utils.isBN,\r\n    isBigNumber: utils.isBigNumber,\r\n    isHex: utils.isHex,\r\n    isHexStrict: utils.isHexStrict,\r\n    sha3: utils.sha3,\r\n    sha3Raw: utils.sha3Raw,\r\n    keccak256: utils.sha3,\r\n    soliditySha3: soliditySha3.soliditySha3,\r\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\r\n    encodePacked: soliditySha3.encodePacked,\r\n    isAddress: utils.isAddress,\r\n    checkAddressChecksum: utils.checkAddressChecksum,\r\n    toChecksumAddress: toChecksumAddress,\r\n    toHex: utils.toHex,\r\n    toBN: utils.toBN,\r\n    bytesToHex: utils.bytesToHex,\r\n    hexToBytes: utils.hexToBytes,\r\n    hexToNumberString: utils.hexToNumberString,\r\n    hexToNumber: utils.hexToNumber,\r\n    toDecimal: utils.hexToNumber,\r\n    numberToHex: utils.numberToHex,\r\n    fromDecimal: utils.numberToHex,\r\n    hexToUtf8: utils.hexToUtf8,\r\n    hexToString: utils.hexToUtf8,\r\n    toUtf8: utils.hexToUtf8,\r\n    stripHexPrefix: utils.stripHexPrefix,\r\n    utf8ToHex: utils.utf8ToHex,\r\n    stringToHex: utils.utf8ToHex,\r\n    fromUtf8: utils.utf8ToHex,\r\n    hexToAscii: hexToAscii,\r\n    toAscii: hexToAscii,\r\n    asciiToHex: asciiToHex,\r\n    fromAscii: asciiToHex,\r\n    unitMap: ethjsUnit.unitMap,\r\n    toWei: toWei,\r\n    fromWei: fromWei,\r\n    padLeft: utils.leftPad,\r\n    leftPad: utils.leftPad,\r\n    padRight: utils.rightPad,\r\n    rightPad: utils.rightPad,\r\n    toTwosComplement: utils.toTwosComplement,\r\n    isBloom: utils.isBloom,\r\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\r\n    isContractAddressInBloom: utils.isContractAddressInBloom,\r\n    isTopic: utils.isTopic,\r\n    isTopicInBloom: utils.isTopicInBloom,\r\n    isInBloom: utils.isInBloom,\r\n    compareBlockNumbers: compareBlockNumbers,\r\n    toNumber: utils.toNumber\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAII,EAAE,GAAGJ,OAAO,CAAC,OAAD,CAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,UAAU,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,YAA5C,EAA0D;EACvE;EACA;EACA,IAAI,CAAC,CAACJ,KAAF,IAAW,OAAOA,KAAP,KAAiB,QAA5B,IAAwC,EAAEA,KAAK,YAAYK,KAAnB,CAAxC,IAAqEL,KAAK,CAACM,IAA/E,EAAqF;IACjF,IAAI,CAAC,CAACN,KAAK,CAACM,IAAR,IAAgB,OAAON,KAAK,CAACM,IAAb,KAAsB,QAAtC,IAAkDC,KAAK,CAACC,OAAN,CAAcR,KAAK,CAACM,IAApB,CAAtD,EAAiF;MAC7EN,KAAK,CAACM,IAAN,GAAaG,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACM,IAArB,EAA2B,IAA3B,EAAiC,CAAjC,CAAb;IACH;;IACDN,KAAK,GAAGA,KAAK,CAACW,OAAN,GAAgB,IAAhB,GAAuBX,KAAK,CAACM,IAArC;EACH;;EACD,IAAI,OAAON,KAAP,KAAiB,QAArB,EAA+B;IAC3BA,KAAK,GAAG,IAAIK,KAAJ,CAAUL,KAAV,CAAR;EACH;;EACD,IAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoC;IAChCA,QAAQ,CAACH,KAAD,EAAQI,YAAR,CAAR;EACH;;EACD,IAAI,OAAOF,MAAP,KAAkB,UAAtB,EAAkC;IAC9B;IACA;IACA,IAAID,OAAO,IACN,OAAOA,OAAO,CAACW,SAAf,KAA6B,UAA7B,IACGX,OAAO,CAACW,SAAR,CAAkB,OAAlB,EAA2BC,MAF/B,IAE0C,OAAOV,QAAP,KAAoB,UAFlE,EAE8E;MAC1EF,OAAO,CAACa,KAAR,CAAc,YAAY,CAAG,CAA7B;IACH,CAP6B,CAQ9B;;;IACAC,UAAU,CAAC,YAAY;MACnBb,MAAM,CAACF,KAAD,CAAN;IACH,CAFS,EAEP,CAFO,CAAV;EAGH;;EACD,IAAIC,OAAO,IAAI,OAAOA,OAAO,CAACe,IAAf,KAAwB,UAAvC,EAAmD;IAC/C;IACAD,UAAU,CAAC,YAAY;MACnBd,OAAO,CAACe,IAAR,CAAa,OAAb,EAAsBhB,KAAtB,EAA6BI,YAA7B;MACAH,OAAO,CAACgB,kBAAR;IACH,CAHS,EAGP,CAHO,CAAV;EAIH;;EACD,OAAOhB,OAAP;AACH,CApCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIiB,4BAA4B,GAAG,UAAUC,IAAV,EAAgB;EAC/C,IAAI,CAAC,CAACA,IAAF,IAAU,OAAOA,IAAP,KAAgB,QAA1B,IAAsCA,IAAI,CAACC,IAA3C,IAAmDD,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAAnF,EAAsF;IAClF,OAAOF,IAAI,CAACC,IAAZ;EACH;;EACD,OAAOD,IAAI,CAACC,IAAL,GAAY,GAAZ,GAAkBE,aAAa,CAAC,KAAD,EAAQH,IAAI,CAACI,MAAb,CAAb,CAAkCC,IAAlC,CAAuC,GAAvC,CAAlB,GAAgE,GAAvE;AACH,CALD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,aAAa,GAAG,UAAUG,YAAV,EAAwBC,IAAxB,EAA8B;EAC9C;EACA,IAAIC,KAAK,GAAG,EAAZ;EACAD,IAAI,CAACE,OAAL,CAAa,UAAUC,KAAV,EAAiB;IAC1B,IAAI,OAAOA,KAAK,CAACC,UAAb,KAA4B,QAAhC,EAA0C;MACtC,IAAID,KAAK,CAACE,IAAN,CAAWC,SAAX,CAAqB,CAArB,EAAwB,CAAxB,MAA+B,OAAnC,EAA4C;QACxC,MAAM,IAAI3B,KAAJ,CAAU,0DAAV,CAAN;MACH;;MACD,IAAI4B,MAAM,GAAG,EAAb;MACA,IAAIC,YAAY,GAAGL,KAAK,CAACE,IAAN,CAAWV,OAAX,CAAmB,GAAnB,CAAnB;;MACA,IAAIa,YAAY,IAAI,CAApB,EAAuB;QACnBD,MAAM,GAAGJ,KAAK,CAACE,IAAN,CAAWC,SAAX,CAAqBE,YAArB,CAAT;MACH;;MACD,IAAIC,MAAM,GAAGb,aAAa,CAACG,YAAD,EAAeI,KAAK,CAACC,UAArB,CAA1B,CATsC,CAUtC;;;MACA,IAAIvB,KAAK,CAACC,OAAN,CAAc2B,MAAd,KAAyBV,YAA7B,EAA2C;QACvC;QACAE,KAAK,CAACS,IAAN,CAAW,WAAWD,MAAM,CAACX,IAAP,CAAY,GAAZ,CAAX,GAA8B,GAA9B,GAAoCS,MAA/C;MACH,CAHD,MAIK,IAAI,CAACR,YAAL,EAAmB;QACpB;QACAE,KAAK,CAACS,IAAN,CAAW,MAAMD,MAAM,CAACX,IAAP,CAAY,GAAZ,CAAN,GAAyB,GAAzB,GAA+BS,MAA1C;MACH,CAHI,MAIA;QACD;QACAN,KAAK,CAACS,IAAN,CAAW,MAAMD,MAAN,GAAe,GAA1B;MACH;IACJ,CAvBD,MAwBK;MACD;MACAR,KAAK,CAACS,IAAN,CAAWP,KAAK,CAACE,IAAjB;IACH;EACJ,CA7BD;EA8BA,OAAOJ,KAAP;AACH,CAlCD;AAmCA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,SAAS,GAAG,UAAUC,IAAV,EAAgB;EAC5B,OAAO,OAAOzC,WAAW,CAACyC,IAAD,CAAX,CAAkBC,QAAlB,CAA2B,KAA3B,CAAd;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,UAAU,GAAG,UAAUC,GAAV,EAAe;EAC5B,IAAI,CAAC9C,KAAK,CAAC+C,WAAN,CAAkBD,GAAlB,CAAL,EACI,MAAM,IAAIpC,KAAJ,CAAU,2CAAV,CAAN;EACJ,IAAIsC,GAAG,GAAG,EAAV;EACA,IAAIC,CAAC,GAAG,CAAR;EAAA,IAAWC,CAAC,GAAGJ,GAAG,CAAC5B,MAAnB;;EACA,IAAI4B,GAAG,CAACT,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,IAA5B,EAAkC;IAC9BY,CAAC,GAAG,CAAJ;EACH;;EACD,OAAOA,CAAC,GAAGC,CAAX,EAAcD,CAAC,IAAI,CAAnB,EAAsB;IAClB,IAAIE,IAAI,GAAGC,QAAQ,CAACN,GAAG,CAACO,KAAJ,CAAUJ,CAAV,EAAaA,CAAC,GAAG,CAAjB,CAAD,EAAsB,EAAtB,CAAnB;IACAD,GAAG,IAAIM,MAAM,CAACC,YAAP,CAAoBJ,IAApB,CAAP;EACH;;EACD,OAAOH,GAAP;AACH,CAbD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,UAAU,GAAG,UAAUR,GAAV,EAAe;EAC5B,IAAI,CAACA,GAAL,EACI,OAAO,MAAP;EACJ,IAAIF,GAAG,GAAG,EAAV;;EACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAAC9B,MAAxB,EAAgC+B,CAAC,EAAjC,EAAqC;IACjC,IAAIE,IAAI,GAAGH,GAAG,CAACS,UAAJ,CAAeR,CAAf,CAAX;IACA,IAAIS,CAAC,GAAGP,IAAI,CAACP,QAAL,CAAc,EAAd,CAAR;IACAE,GAAG,IAAIY,CAAC,CAACxC,MAAF,GAAW,CAAX,GAAe,MAAMwC,CAArB,GAAyBA,CAAhC;EACH;;EACD,OAAO,OAAOZ,GAAd;AACH,CAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIa,YAAY,GAAG,UAAUC,IAAV,EAAgB;EAC/BA,IAAI,GAAGA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAH,GAAwB,OAAnC;;EACA,IAAI,CAAC/D,SAAS,CAACgE,OAAV,CAAkBF,IAAlB,CAAL,EAA8B;IAC1B,MAAM,IAAIlD,KAAJ,CAAU,gBAAgBkD,IAAhB,GAAuB,6DAAvB,GAAuF9C,IAAI,CAACC,SAAL,CAAejB,SAAS,CAACgE,OAAzB,EAAkC,IAAlC,EAAwC,CAAxC,CAAjG,CAAN;EACH;;EACD,OAAOF,IAAP;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,OAAO,GAAG,UAAUC,MAAV,EAAkBJ,IAAlB,EAAwB;EAClCA,IAAI,GAAGD,YAAY,CAACC,IAAD,CAAnB;;EACA,IAAI,CAAC5D,KAAK,CAACiE,IAAN,CAAWD,MAAX,CAAD,IAAuB,EAAE,OAAOA,MAAP,KAAkB,QAApB,CAA3B,EAA0D;IACtD,MAAM,IAAItD,KAAJ,CAAU,yEAAV,CAAN;EACH;;EACD,OAAOV,KAAK,CAACiE,IAAN,CAAWD,MAAX,IAAqBlE,SAAS,CAACiE,OAAV,CAAkBC,MAAlB,EAA0BJ,IAA1B,CAArB,GAAuD9D,SAAS,CAACiE,OAAV,CAAkBC,MAAlB,EAA0BJ,IAA1B,EAAgChB,QAAhC,CAAyC,EAAzC,CAA9D;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIsB,KAAK,GAAG,UAAUF,MAAV,EAAkBJ,IAAlB,EAAwB;EAChCA,IAAI,GAAGD,YAAY,CAACC,IAAD,CAAnB;;EACA,IAAI,CAAC5D,KAAK,CAACiE,IAAN,CAAWD,MAAX,CAAD,IAAuB,EAAE,OAAOA,MAAP,KAAkB,QAApB,CAA3B,EAA0D;IACtD,MAAM,IAAItD,KAAJ,CAAU,yEAAV,CAAN;EACH;;EACD,OAAOV,KAAK,CAACiE,IAAN,CAAWD,MAAX,IAAqBlE,SAAS,CAACoE,KAAV,CAAgBF,MAAhB,EAAwBJ,IAAxB,CAArB,GAAqD9D,SAAS,CAACoE,KAAV,CAAgBF,MAAhB,EAAwBJ,IAAxB,EAA8BhB,QAA9B,CAAuC,EAAvC,CAA5D;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIuB,iBAAiB,GAAG,UAAUC,OAAV,EAAmB;EACvC,IAAI,OAAOA,OAAP,KAAmB,WAAvB,EACI,OAAO,EAAP;EACJ,IAAI,CAAC,uBAAuBC,IAAvB,CAA4BD,OAA5B,CAAL,EACI,MAAM,IAAI1D,KAAJ,CAAU,oBAAoB0D,OAApB,GAA8B,oCAAxC,CAAN;EACJA,OAAO,GAAGA,OAAO,CAACP,WAAR,GAAsBS,OAAtB,CAA8B,MAA9B,EAAsC,EAAtC,CAAV;EACA,IAAIC,WAAW,GAAGvE,KAAK,CAACwE,IAAN,CAAWJ,OAAX,EAAoBE,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAlB;EACA,IAAIG,eAAe,GAAG,IAAtB;;EACA,KAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,OAAO,CAAClD,MAA5B,EAAoC+B,CAAC,EAArC,EAAyC;IACrC;IACA,IAAIG,QAAQ,CAACmB,WAAW,CAACtB,CAAD,CAAZ,EAAiB,EAAjB,CAAR,GAA+B,CAAnC,EAAsC;MAClCwB,eAAe,IAAIL,OAAO,CAACnB,CAAD,CAAP,CAAWyB,WAAX,EAAnB;IACH,CAFD,MAGK;MACDD,eAAe,IAAIL,OAAO,CAACnB,CAAD,CAA1B;IACH;EACJ;;EACD,OAAOwB,eAAP;AACH,CAlBD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,mBAAmB,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EACtC,IAAID,CAAC,IAAIC,CAAT,EAAY;IACR,OAAO,CAAP;EACH,CAFD,MAGK,IAAI,CAAC,aAAaD,CAAb,IAAkB,cAAcA,CAAhC,IAAqC,KAAKA,CAA3C,MAAkD,aAAaC,CAAb,IAAkB,cAAcA,CAAhC,IAAqC,KAAKA,CAA5F,CAAJ,EAAoG;IACrG,OAAO,CAAP;EACH,CAFI,MAGA,IAAI,aAAaD,CAAb,IAAkB,cAAcA,CAApC,EAAuC;IACxC;IACA,OAAO,CAAC,CAAR;EACH,CAHI,MAIA,IAAI,aAAaC,CAAb,IAAkB,cAAcA,CAApC,EAAuC;IACxC;IACA,OAAO,CAAP;EACH,CAHI,MAIA,IAAID,CAAC,IAAI,QAAT,EAAmB;IACpB,IAAIC,CAAC,IAAI,SAAT,EAAoB;MAChB,OAAO,CAAC,CAAR;IACH,CAFD,MAGK;MACD;MACA,OAAO,CAAP;IACH;EACJ,CARI,MASA,IAAIA,CAAC,KAAK,QAAV,EAAoB;IACrB,IAAID,CAAC,IAAI,SAAT,EAAoB;MAChB,OAAO,CAAP;IACH,CAFD,MAGK;MACD;MACA,OAAO,CAAC,CAAR;IACH;EACJ,CARI,MASA,IAAIA,CAAC,IAAI,SAAT,EAAoB;IACrB;IACA,OAAO,CAAP;EACH,CAHI,MAIA,IAAIC,CAAC,IAAI,SAAT,EAAoB;IACrB,OAAO,CAAC,CAAR;EACH,CAFI,MAGA;IACD,IAAIC,GAAG,GAAG,IAAI3E,EAAJ,CAAOyE,CAAP,CAAV;IACA,IAAIG,GAAG,GAAG,IAAI5E,EAAJ,CAAO0E,CAAP,CAAV;;IACA,IAAIC,GAAG,CAACE,EAAJ,CAAOD,GAAP,CAAJ,EAAiB;MACb,OAAO,CAAC,CAAR;IACH,CAFD,MAGK,IAAID,GAAG,CAACG,EAAJ,CAAOF,GAAP,CAAJ,EAAiB;MAClB,OAAO,CAAP;IACH,CAFI,MAGA;MACD,OAAO,CAAP;IACH;EACJ;AACJ,CArDD;;AAsDAG,MAAM,CAACC,OAAP,GAAiB;EACb/E,UAAU,EAAEA,UADC;EAEbmB,4BAA4B,EAAEA,4BAFjB;EAGbI,aAAa,EAAEA,aAHF;EAIb;EACA;EACAe,SAAS,EAAEA,SANE;EAObvC,EAAE,EAAEH,KAAK,CAACG,EAPG;EAQb8D,IAAI,EAAEjE,KAAK,CAACiE,IARC;EASbmB,WAAW,EAAEpF,KAAK,CAACoF,WATN;EAUbC,KAAK,EAAErF,KAAK,CAACqF,KAVA;EAWbtC,WAAW,EAAE/C,KAAK,CAAC+C,WAXN;EAYbyB,IAAI,EAAExE,KAAK,CAACwE,IAZC;EAabc,OAAO,EAAEtF,KAAK,CAACsF,OAbF;EAcbC,SAAS,EAAEvF,KAAK,CAACwE,IAdJ;EAebvE,YAAY,EAAEA,YAAY,CAACA,YAfd;EAgBbuF,eAAe,EAAEvF,YAAY,CAACuF,eAhBjB;EAiBbC,YAAY,EAAExF,YAAY,CAACwF,YAjBd;EAkBbC,SAAS,EAAE1F,KAAK,CAAC0F,SAlBJ;EAmBbC,oBAAoB,EAAE3F,KAAK,CAAC2F,oBAnBf;EAoBbxB,iBAAiB,EAAEA,iBApBN;EAqBbyB,KAAK,EAAE5F,KAAK,CAAC4F,KArBA;EAsBbC,IAAI,EAAE7F,KAAK,CAAC6F,IAtBC;EAuBbC,UAAU,EAAE9F,KAAK,CAAC8F,UAvBL;EAwBbC,UAAU,EAAE/F,KAAK,CAAC+F,UAxBL;EAyBbC,iBAAiB,EAAEhG,KAAK,CAACgG,iBAzBZ;EA0BbC,WAAW,EAAEjG,KAAK,CAACiG,WA1BN;EA2BbC,SAAS,EAAElG,KAAK,CAACiG,WA3BJ;EA4BbE,WAAW,EAAEnG,KAAK,CAACmG,WA5BN;EA6BbC,WAAW,EAAEpG,KAAK,CAACmG,WA7BN;EA8BbE,SAAS,EAAErG,KAAK,CAACqG,SA9BJ;EA+BbC,WAAW,EAAEtG,KAAK,CAACqG,SA/BN;EAgCbE,MAAM,EAAEvG,KAAK,CAACqG,SAhCD;EAiCbG,cAAc,EAAExG,KAAK,CAACwG,cAjCT;EAkCbC,SAAS,EAAEzG,KAAK,CAACyG,SAlCJ;EAmCbC,WAAW,EAAE1G,KAAK,CAACyG,SAnCN;EAoCbE,QAAQ,EAAE3G,KAAK,CAACyG,SApCH;EAqCb5D,UAAU,EAAEA,UArCC;EAsCb+D,OAAO,EAAE/D,UAtCI;EAuCbW,UAAU,EAAEA,UAvCC;EAwCbqD,SAAS,EAAErD,UAxCE;EAyCbM,OAAO,EAAEhE,SAAS,CAACgE,OAzCN;EA0CbI,KAAK,EAAEA,KA1CM;EA2CbH,OAAO,EAAEA,OA3CI;EA4Cb+C,OAAO,EAAE9G,KAAK,CAAC+G,OA5CF;EA6CbA,OAAO,EAAE/G,KAAK,CAAC+G,OA7CF;EA8CbC,QAAQ,EAAEhH,KAAK,CAACiH,QA9CH;EA+CbA,QAAQ,EAAEjH,KAAK,CAACiH,QA/CH;EAgDbC,gBAAgB,EAAElH,KAAK,CAACkH,gBAhDX;EAiDbC,OAAO,EAAEnH,KAAK,CAACmH,OAjDF;EAkDbC,4BAA4B,EAAEpH,KAAK,CAACoH,4BAlDvB;EAmDbC,wBAAwB,EAAErH,KAAK,CAACqH,wBAnDnB;EAoDbC,OAAO,EAAEtH,KAAK,CAACsH,OApDF;EAqDbC,cAAc,EAAEvH,KAAK,CAACuH,cArDT;EAsDbC,SAAS,EAAExH,KAAK,CAACwH,SAtDJ;EAuDb7C,mBAAmB,EAAEA,mBAvDR;EAwDb8C,QAAQ,EAAEzH,KAAK,CAACyH;AAxDH,CAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits, normalizeTwoDigitYear, mapValue } from \"../utils.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\"; // Local week-numbering year\n\nexport var LocalWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekYearParser, _Parser);\n\n  var _super = _createSuper(LocalWeekYearParser);\n\n  function LocalWeekYearParser() {\n    var _this;\n\n    _classCallCheck(this, LocalWeekYearParser);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n\n    return _this;\n  }\n\n  _createClass(LocalWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n\n        case 'Yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    }\n  }]);\n\n  return LocalWeekYearParser;\n}(Parser);","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Parser","parseNDigits","normalizeTwoDigitYear","mapValue","getUTCWeekYear","startOfUTCWeek","LocalWeekYearParser","arguments","dateString","token","match","valueCallback","year","isTwoDigitYear","ordinalNumber","unit","length","_date","date","flags","options","currentYear","normalizedTwoDigitYear","setUTCFullYear","firstWeekContainsDate","setUTCHours","era"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits, normalizeTwoDigitYear, mapValue } from \"../utils.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 130);\n\n    _defineProperty(this, \"incompatibleTokens\", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (year) {\n      return {\n        year: year,\n        isTwoDigitYear: token === 'YY'\n      };\n    };\n\n    switch (token) {\n      case 'Y':\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n\n      case 'Yo':\n        return mapValue(match.ordinalNumber(dateString, {\n          unit: 'year'\n        }), valueCallback);\n\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    var currentYear = getUTCWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n      date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    }\n\n    var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n    date.setUTCHours(0, 0, 0, 0);\n    return startOfUTCWeek(date, options);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
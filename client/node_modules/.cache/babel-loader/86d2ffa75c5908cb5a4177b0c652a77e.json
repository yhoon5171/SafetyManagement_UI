{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar byteUtils = require('./byte-utils.js');\n\nconst defaultChunkSize = 256;\n\nclass Bl {\n  constructor() {\n    let chunkSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultChunkSize;\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = byteUtils.alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n\n    this.cursor += bytes.length;\n  }\n\n  toBytes() {\n    let reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let byts;\n\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = byteUtils.slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = byteUtils.concat(this.chunks, this.cursor);\n    }\n\n    if (reset) {\n      this.reset();\n    }\n\n    return byts;\n  }\n\n}\n\nexports.Bl = Bl;","map":{"version":3,"names":["Object","defineProperty","exports","value","byteUtils","require","defaultChunkSize","Bl","constructor","chunkSize","cursor","maxCursor","chunks","_initReuseChunk","reset","length","push","bytes","topChunk","newMax","chunkPos","set","subarray","alloc","toBytes","byts","chunk","slice","concat"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/cborg/cjs/lib/bl.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar byteUtils = require('./byte-utils.js');\r\n\r\nconst defaultChunkSize = 256;\r\nclass Bl {\r\n  constructor(chunkSize = defaultChunkSize) {\r\n    this.chunkSize = chunkSize;\r\n    this.cursor = 0;\r\n    this.maxCursor = -1;\r\n    this.chunks = [];\r\n    this._initReuseChunk = null;\r\n  }\r\n  reset() {\r\n    this.cursor = 0;\r\n    this.maxCursor = -1;\r\n    if (this.chunks.length) {\r\n      this.chunks = [];\r\n    }\r\n    if (this._initReuseChunk !== null) {\r\n      this.chunks.push(this._initReuseChunk);\r\n      this.maxCursor = this._initReuseChunk.length - 1;\r\n    }\r\n  }\r\n  push(bytes) {\r\n    let topChunk = this.chunks[this.chunks.length - 1];\r\n    const newMax = this.cursor + bytes.length;\r\n    if (newMax <= this.maxCursor + 1) {\r\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\r\n      topChunk.set(bytes, chunkPos);\r\n    } else {\r\n      if (topChunk) {\r\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\r\n        if (chunkPos < topChunk.length) {\r\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\r\n          this.maxCursor = this.cursor - 1;\r\n        }\r\n      }\r\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\r\n        topChunk = byteUtils.alloc(this.chunkSize);\r\n        this.chunks.push(topChunk);\r\n        this.maxCursor += topChunk.length;\r\n        if (this._initReuseChunk === null) {\r\n          this._initReuseChunk = topChunk;\r\n        }\r\n        topChunk.set(bytes, 0);\r\n      } else {\r\n        this.chunks.push(bytes);\r\n        this.maxCursor += bytes.length;\r\n      }\r\n    }\r\n    this.cursor += bytes.length;\r\n  }\r\n  toBytes(reset = false) {\r\n    let byts;\r\n    if (this.chunks.length === 1) {\r\n      const chunk = this.chunks[0];\r\n      if (reset && this.cursor > chunk.length / 2) {\r\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\r\n        this._initReuseChunk = null;\r\n        this.chunks = [];\r\n      } else {\r\n        byts = byteUtils.slice(chunk, 0, this.cursor);\r\n      }\r\n    } else {\r\n      byts = byteUtils.concat(this.chunks, this.cursor);\r\n    }\r\n    if (reset) {\r\n      this.reset();\r\n    }\r\n    return byts;\r\n  }\r\n}\r\n\r\nexports.Bl = Bl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
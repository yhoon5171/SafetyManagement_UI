{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar bytes = require('../bytes.js');\n\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\n\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n\n  return new Digest(code, size, digest, bytes$1);\n};\n\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\n\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;","map":{"version":3,"names":["Object","defineProperty","exports","value","bytes","require","varint","create","code","digest","size","byteLength","sizeOffset","encodingLength","digestOffset","Uint8Array","encodeTo","set","Digest","decode","multihash","bytes$1","coerce","subarray","Error","equals","a","b","constructor"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/multiformats/cjs/src/hashes/digest.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar bytes = require('../bytes.js');\r\nvar varint = require('../varint.js');\r\n\r\nconst create = (code, digest) => {\r\n  const size = digest.byteLength;\r\n  const sizeOffset = varint.encodingLength(code);\r\n  const digestOffset = sizeOffset + varint.encodingLength(size);\r\n  const bytes = new Uint8Array(digestOffset + size);\r\n  varint.encodeTo(code, bytes, 0);\r\n  varint.encodeTo(size, bytes, sizeOffset);\r\n  bytes.set(digest, digestOffset);\r\n  return new Digest(code, size, digest, bytes);\r\n};\r\nconst decode = multihash => {\r\n  const bytes$1 = bytes.coerce(multihash);\r\n  const [code, sizeOffset] = varint.decode(bytes$1);\r\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\r\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\r\n  if (digest.byteLength !== size) {\r\n    throw new Error('Incorrect length');\r\n  }\r\n  return new Digest(code, size, digest, bytes$1);\r\n};\r\nconst equals = (a, b) => {\r\n  if (a === b) {\r\n    return true;\r\n  } else {\r\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\r\n  }\r\n};\r\nclass Digest {\r\n  constructor(code, size, digest, bytes) {\r\n    this.code = code;\r\n    this.size = size;\r\n    this.digest = digest;\r\n    this.bytes = bytes;\r\n  }\r\n}\r\n\r\nexports.Digest = Digest;\r\nexports.create = create;\r\nexports.decode = decode;\r\nexports.equals = equals;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;AAEA,MAAME,MAAM,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;EAC/B,MAAMC,IAAI,GAAGD,MAAM,CAACE,UAApB;EACA,MAAMC,UAAU,GAAGN,MAAM,CAACO,cAAP,CAAsBL,IAAtB,CAAnB;EACA,MAAMM,YAAY,GAAGF,UAAU,GAAGN,MAAM,CAACO,cAAP,CAAsBH,IAAtB,CAAlC;EACA,MAAMN,KAAK,GAAG,IAAIW,UAAJ,CAAeD,YAAY,GAAGJ,IAA9B,CAAd;EACAJ,MAAM,CAACU,QAAP,CAAgBR,IAAhB,EAAsBJ,KAAtB,EAA6B,CAA7B;EACAE,MAAM,CAACU,QAAP,CAAgBN,IAAhB,EAAsBN,KAAtB,EAA6BQ,UAA7B;EACAR,KAAK,CAACa,GAAN,CAAUR,MAAV,EAAkBK,YAAlB;EACA,OAAO,IAAII,MAAJ,CAAWV,IAAX,EAAiBE,IAAjB,EAAuBD,MAAvB,EAA+BL,KAA/B,CAAP;AACD,CATD;;AAUA,MAAMe,MAAM,GAAGC,SAAS,IAAI;EAC1B,MAAMC,OAAO,GAAGjB,KAAK,CAACkB,MAAN,CAAaF,SAAb,CAAhB;EACA,MAAM,CAACZ,IAAD,EAAOI,UAAP,IAAqBN,MAAM,CAACa,MAAP,CAAcE,OAAd,CAA3B;EACA,MAAM,CAACX,IAAD,EAAOI,YAAP,IAAuBR,MAAM,CAACa,MAAP,CAAcE,OAAO,CAACE,QAAR,CAAiBX,UAAjB,CAAd,CAA7B;EACA,MAAMH,MAAM,GAAGY,OAAO,CAACE,QAAR,CAAiBX,UAAU,GAAGE,YAA9B,CAAf;;EACA,IAAIL,MAAM,CAACE,UAAP,KAAsBD,IAA1B,EAAgC;IAC9B,MAAM,IAAIc,KAAJ,CAAU,kBAAV,CAAN;EACD;;EACD,OAAO,IAAIN,MAAJ,CAAWV,IAAX,EAAiBE,IAAjB,EAAuBD,MAAvB,EAA+BY,OAA/B,CAAP;AACD,CATD;;AAUA,MAAMI,MAAM,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EACvB,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAOD,CAAC,CAAClB,IAAF,KAAWmB,CAAC,CAACnB,IAAb,IAAqBkB,CAAC,CAAChB,IAAF,KAAWiB,CAAC,CAACjB,IAAlC,IAA0CN,KAAK,CAACqB,MAAN,CAAaC,CAAC,CAACtB,KAAf,EAAsBuB,CAAC,CAACvB,KAAxB,CAAjD;EACD;AACF,CAND;;AAOA,MAAMc,MAAN,CAAa;EACXU,WAAW,CAACpB,IAAD,EAAOE,IAAP,EAAaD,MAAb,EAAqBL,KAArB,EAA4B;IACrC,KAAKI,IAAL,GAAYA,IAAZ;IACA,KAAKE,IAAL,GAAYA,IAAZ;IACA,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKL,KAAL,GAAaA,KAAb;EACD;;AANU;;AASbF,OAAO,CAACgB,MAAR,GAAiBA,MAAjB;AACAhB,OAAO,CAACK,MAAR,GAAiBA,MAAjB;AACAL,OAAO,CAACiB,MAAR,GAAiBA,MAAjB;AACAjB,OAAO,CAACuB,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}
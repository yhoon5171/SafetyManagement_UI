{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction encodeEndpoint(url) {\n  const href = String(url);\n\n  if (href === 'undefined') {\n    throw Error('endpoint is required');\n  }\n\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n}\n\nfunction decodeRemoteService(json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...(json.Stat && {\n      stat: decodeStat(json.Stat)\n    })\n  };\n}\n\nfunction decodeStat(json) {\n  switch (json.Status) {\n    case 'valid':\n      {\n        const {\n          Pinning,\n          Pinned,\n          Queued,\n          Failed\n        } = json.PinCount;\n        return {\n          status: 'valid',\n          pinCount: {\n            queued: Queued,\n            pinning: Pinning,\n            pinned: Pinned,\n            failed: Failed\n          }\n        };\n      }\n\n    case 'invalid':\n      {\n        return {\n          status: 'invalid'\n        };\n      }\n\n    default:\n      {\n        return {\n          status: json.Status\n        };\n      }\n  }\n}\n\nexports.decodeRemoteService = decodeRemoteService;\nexports.decodeStat = decodeStat;\nexports.encodeEndpoint = encodeEndpoint;","map":{"version":3,"names":["Object","defineProperty","exports","value","encodeEndpoint","url","href","String","Error","length","slice","decodeRemoteService","json","service","Service","endpoint","URL","ApiEndpoint","Stat","stat","decodeStat","Status","Pinning","Pinned","Queued","Failed","PinCount","status","pinCount","queued","pinning","pinned","failed"],"sources":["C:/Users/mcnl/Desktop/gong/test/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/pin/remote/service/utils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction encodeEndpoint(url) {\n  const href = String(url);\n  if (href === 'undefined') {\n    throw Error('endpoint is required');\n  }\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n}\nfunction decodeRemoteService(json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...json.Stat && { stat: decodeStat(json.Stat) }\n  };\n}\nfunction decodeStat(json) {\n  switch (json.Status) {\n  case 'valid': {\n      const {Pinning, Pinned, Queued, Failed} = json.PinCount;\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      };\n    }\n  case 'invalid': {\n      return { status: 'invalid' };\n    }\n  default: {\n      return { status: json.Status };\n    }\n  }\n}\n\nexports.decodeRemoteService = decodeRemoteService;\nexports.decodeStat = decodeStat;\nexports.encodeEndpoint = encodeEndpoint;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EAC3B,MAAMC,IAAI,GAAGC,MAAM,CAACF,GAAD,CAAnB;;EACA,IAAIC,IAAI,KAAK,WAAb,EAA0B;IACxB,MAAME,KAAK,CAAC,sBAAD,CAAX;EACD;;EACD,OAAOF,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAAJ,KAA0B,GAA1B,GAAgCH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAhC,GAAoDJ,IAA3D;AACD;;AACD,SAASK,mBAAT,CAA6BC,IAA7B,EAAmC;EACjC,OAAO;IACLC,OAAO,EAAED,IAAI,CAACE,OADT;IAELC,QAAQ,EAAE,IAAIC,GAAJ,CAAQJ,IAAI,CAACK,WAAb,CAFL;IAGL,IAAGL,IAAI,CAACM,IAAL,IAAa;MAAEC,IAAI,EAAEC,UAAU,CAACR,IAAI,CAACM,IAAN;IAAlB,CAAhB;EAHK,CAAP;AAKD;;AACD,SAASE,UAAT,CAAoBR,IAApB,EAA0B;EACxB,QAAQA,IAAI,CAACS,MAAb;IACA,KAAK,OAAL;MAAc;QACV,MAAM;UAACC,OAAD;UAAUC,MAAV;UAAkBC,MAAlB;UAA0BC;QAA1B,IAAoCb,IAAI,CAACc,QAA/C;QACA,OAAO;UACLC,MAAM,EAAE,OADH;UAELC,QAAQ,EAAE;YACRC,MAAM,EAAEL,MADA;YAERM,OAAO,EAAER,OAFD;YAGRS,MAAM,EAAER,MAHA;YAIRS,MAAM,EAAEP;UAJA;QAFL,CAAP;MASD;;IACH,KAAK,SAAL;MAAgB;QACZ,OAAO;UAAEE,MAAM,EAAE;QAAV,CAAP;MACD;;IACH;MAAS;QACL,OAAO;UAAEA,MAAM,EAAEf,IAAI,CAACS;QAAf,CAAP;MACD;EAlBH;AAoBD;;AAEDnB,OAAO,CAACS,mBAAR,GAA8BA,mBAA9B;AACAT,OAAO,CAACkB,UAAR,GAAqBA,UAArB;AACAlB,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}
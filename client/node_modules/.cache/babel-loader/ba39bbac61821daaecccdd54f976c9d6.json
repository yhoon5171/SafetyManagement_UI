{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file errors.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @date 2017\r\n */\n\"use strict\";\n\nmodule.exports = {\n  ErrorResponse: function (result) {\n    var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\n    return new Error('Returned error: ' + message);\n  },\n  InvalidNumberOfParams: function (got, expected, method) {\n    return new Error('Invalid number of parameters for \"' + method + '\". Got ' + got + ' expected ' + expected + '!');\n  },\n  InvalidConnection: function (host) {\n    return new Error('CONNECTION ERROR: Couldn\\'t connect to node ' + host + '.');\n  },\n  InvalidProvider: function () {\n    return new Error('Provider not set or invalid');\n  },\n  InvalidResponse: function (result) {\n    var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n    return new Error(message);\n  },\n  ConnectionTimeout: function (ms) {\n    return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\n  }\n};","map":{"version":3,"names":["module","exports","ErrorResponse","result","message","error","JSON","stringify","Error","InvalidNumberOfParams","got","expected","method","InvalidConnection","host","InvalidProvider","InvalidResponse","ConnectionTimeout","ms"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/truffle-contract/node_modules/web3-core-helpers/src/errors.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file errors.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @date 2017\r\n */\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = {\r\n    ErrorResponse: function (result) {\r\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\r\n        return new Error('Returned error: ' + message);\r\n    },\r\n    InvalidNumberOfParams: function (got, expected, method) {\r\n        return new Error('Invalid number of parameters for \"'+ method +'\". Got '+ got +' expected '+ expected +'!');\r\n    },\r\n    InvalidConnection: function (host){\r\n        return new Error('CONNECTION ERROR: Couldn\\'t connect to node '+ host +'.');\r\n    },\r\n    InvalidProvider: function () {\r\n        return new Error('Provider not set or invalid');\r\n    },\r\n    InvalidResponse: function (result){\r\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\r\n        return new Error(message);\r\n    },\r\n    ConnectionTimeout: function (ms){\r\n        return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;EACbC,aAAa,EAAE,UAAUC,MAAV,EAAkB;IAC7B,IAAIC,OAAO,GAAG,CAAC,CAACD,MAAF,IAAY,CAAC,CAACA,MAAM,CAACE,KAArB,IAA8B,CAAC,CAACF,MAAM,CAACE,KAAP,CAAaD,OAA7C,GAAuDD,MAAM,CAACE,KAAP,CAAaD,OAApE,GAA8EE,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA5F;IACA,OAAO,IAAIK,KAAJ,CAAU,qBAAqBJ,OAA/B,CAAP;EACH,CAJY;EAKbK,qBAAqB,EAAE,UAAUC,GAAV,EAAeC,QAAf,EAAyBC,MAAzB,EAAiC;IACpD,OAAO,IAAIJ,KAAJ,CAAU,uCAAsCI,MAAtC,GAA8C,SAA9C,GAAyDF,GAAzD,GAA8D,YAA9D,GAA4EC,QAA5E,GAAsF,GAAhG,CAAP;EACH,CAPY;EAQbE,iBAAiB,EAAE,UAAUC,IAAV,EAAe;IAC9B,OAAO,IAAIN,KAAJ,CAAU,iDAAgDM,IAAhD,GAAsD,GAAhE,CAAP;EACH,CAVY;EAWbC,eAAe,EAAE,YAAY;IACzB,OAAO,IAAIP,KAAJ,CAAU,6BAAV,CAAP;EACH,CAbY;EAcbQ,eAAe,EAAE,UAAUb,MAAV,EAAiB;IAC9B,IAAIC,OAAO,GAAG,CAAC,CAACD,MAAF,IAAY,CAAC,CAACA,MAAM,CAACE,KAArB,IAA8B,CAAC,CAACF,MAAM,CAACE,KAAP,CAAaD,OAA7C,GAAuDD,MAAM,CAACE,KAAP,CAAaD,OAApE,GAA8E,gCAAgCE,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA5H;IACA,OAAO,IAAIK,KAAJ,CAAUJ,OAAV,CAAP;EACH,CAjBY;EAkBba,iBAAiB,EAAE,UAAUC,EAAV,EAAa;IAC5B,OAAO,IAAIV,KAAJ,CAAU,oCAAoCU,EAApC,GAAyC,aAAnD,CAAP;EACH;AApBY,CAAjB"},"metadata":{},"sourceType":"script"}
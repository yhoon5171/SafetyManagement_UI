{"ast":null,"code":"'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\r\n * Generate unique id\r\n * Returns string id\r\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","map":{"version":3,"names":["generate","require","alphabet","REDUCE_TIME","version","counter","previousSeconds","build","clusterWorkerId","str","seconds","Math","floor","Date","now","module","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/shortid/lib/build.js"],"sourcesContent":["'use strict';\r\n\r\nvar generate = require('./generate');\r\nvar alphabet = require('./alphabet');\r\n\r\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\r\n// This number should be updated every year or so to keep the generated id short.\r\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\r\nvar REDUCE_TIME = 1567752802062;\r\n\r\n// don't change unless we change the algos or REDUCE_TIME\r\n// must be an integer and less than 16\r\nvar version = 7;\r\n\r\n// Counter is used when shortid is called multiple times in one second.\r\nvar counter;\r\n\r\n// Remember the last time shortid was called in case counter is needed.\r\nvar previousSeconds;\r\n\r\n/**\r\n * Generate unique id\r\n * Returns string id\r\n */\r\nfunction build(clusterWorkerId) {\r\n    var str = '';\r\n\r\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\r\n\r\n    if (seconds === previousSeconds) {\r\n        counter++;\r\n    } else {\r\n        counter = 0;\r\n        previousSeconds = seconds;\r\n    }\r\n\r\n    str = str + generate(version);\r\n    str = str + generate(clusterWorkerId);\r\n    if (counter > 0) {\r\n        str = str + generate(counter);\r\n    }\r\n    str = str + generate(seconds);\r\n    return str;\r\n}\r\n\r\nmodule.exports = build;\r\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB,C,CAEA;AACA;AACA;;;AACA,IAAIE,WAAW,GAAG,aAAlB,C,CAEA;AACA;;AACA,IAAIC,OAAO,GAAG,CAAd,C,CAEA;;AACA,IAAIC,OAAJ,C,CAEA;;AACA,IAAIC,eAAJ;AAEA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,eAAf,EAAgC;EAC5B,IAAIC,GAAG,GAAG,EAAV;EAEA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACC,IAAI,CAACC,GAAL,KAAaX,WAAd,IAA6B,KAAxC,CAAd;;EAEA,IAAIO,OAAO,KAAKJ,eAAhB,EAAiC;IAC7BD,OAAO;EACV,CAFD,MAEO;IACHA,OAAO,GAAG,CAAV;IACAC,eAAe,GAAGI,OAAlB;EACH;;EAEDD,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACI,OAAD,CAApB;EACAK,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACQ,eAAD,CAApB;;EACA,IAAIH,OAAO,GAAG,CAAd,EAAiB;IACbI,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACK,OAAD,CAApB;EACH;;EACDI,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACU,OAAD,CAApB;EACA,OAAOD,GAAP;AACH;;AAEDM,MAAM,CAACC,OAAP,GAAiBT,KAAjB"},"metadata":{},"sourceType":"script"}
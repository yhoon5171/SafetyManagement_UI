{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcnl\\\\Desktop\\\\gong\\\\BlockchainSafetyManagement\\\\client\\\\src\\\\components\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Badge, ProgressBar, Container } from 'react-bootstrap';\nimport { create as ipfsHttpClient } from 'ipfs-http-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');\nexport const FileUpload = _ref => {\n  _s();\n\n  let {\n    setUrl,\n    setIpfs\n  } = _ref;\n  const [file, setFile] = useState({});\n  const [fileUrl, setFileUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [uploaded, setUploaded] = useState(false);\n\n  const uploadFile = async e => {\n    setLoading(true);\n    e.preventDefault();\n\n    try {\n      const added = await ipfs.add(file);\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      setUrl(url);\n      setFileUrl(url);\n      setUploaded(true);\n      setIpfs(added.path);\n    } catch (err) {\n      console.log('Error uploading the file : ', err);\n    }\n\n    setLoading(false);\n  };\n\n  const preUpload = e => {\n    if (e.target.value !== '') {\n      setFile(e.target.files[0]);\n    } else {\n      setFile({});\n    }\n  };\n\n  const fileAndUploadButton = () => {\n    if (file.name) {\n      if (!loading) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [file.name, \" \", /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              children: [file.size, \" kb\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), uploaded ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"\\u2705\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: fileUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), ' ', \"Uploaded Successfully \\u2705\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Upload File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Uploading File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            animated: true,\n            now: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Please Wait ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: uploadFile,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        type: \"file\",\n        onChange: e => preUpload(e),\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), fileAndUploadButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileUpload, \"fxo1HhNuj6j4z+cNHx7u69tzAT8=\");\n\n_c = FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Form","Button","Badge","ProgressBar","Container","create","ipfsHttpClient","ipfs","FileUpload","setUrl","setIpfs","file","setFile","fileUrl","setFileUrl","loading","setLoading","uploaded","setUploaded","uploadFile","e","preventDefault","added","add","url","path","err","console","log","preUpload","target","value","files","fileAndUploadButton","name","size"],"sources":["C:/Users/mcnl/Desktop/gong/BlockchainSafetyManagement/client/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button, Badge, ProgressBar, Container } from 'react-bootstrap'\r\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\r\nconst ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\nexport const FileUpload = ({ setUrl, setIpfs }) => {\r\n    const [file, setFile] = useState({})\r\n    const [fileUrl, setFileUrl] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [uploaded, setUploaded] = useState(false)\r\n\r\n    const uploadFile = async (e) => {\r\n        setLoading(true)\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const added = await ipfs.add(file)\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            setUrl(url)\r\n            setFileUrl(url)\r\n            setUploaded(true)\r\n            setIpfs(added.path)\r\n        } catch (err) {\r\n            console.log('Error uploading the file : ', err)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const preUpload = (e) => {\r\n        if (e.target.value !== '') {\r\n            setFile(e.target.files[0])\r\n        } else {\r\n            setFile({})\r\n        }\r\n    }\r\n\r\n    const fileAndUploadButton = () => {\r\n        if (file.name) {\r\n            if (!loading) {\r\n                return (\r\n                    <div>\r\n                        <h5>\r\n                            {file.name} <Badge pill>{file.size} kb</Badge>\r\n                        </h5>\r\n\r\n                        {uploaded ? (\r\n                            <h5>\r\n                                ✅{' '}\r\n                                <a\r\n                                    href={fileUrl}\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                >\r\n                                    File\r\n                                </a>{' '}\r\n                                Uploaded Successfully ✅\r\n                            </h5>\r\n                        ) : (\r\n                            <Button type='submit'>Upload File</Button>\r\n                        )}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Container>\r\n                        <h4>Uploading File</h4>\r\n                        <ProgressBar animated now={100} />\r\n                        <h4>Please Wait ...</h4>\r\n                    </Container>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={uploadFile}>\r\n                <Form.Control\r\n                    required\r\n                    type='file'\r\n                    onChange={(e) => preUpload(e)}\r\n                    className='mb-3'\r\n                />\r\n\r\n                {fileAndUploadButton()}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
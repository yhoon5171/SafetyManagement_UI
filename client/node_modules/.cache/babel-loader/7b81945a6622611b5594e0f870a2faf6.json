{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nconst requestManager = require(\"web3-core-requestmanager\");\n\nconst extend = require(\"./extend\");\n\nconst packageInit = (pkg, args) => {\n  args = Array.prototype.slice.call(args);\n\n  if (!pkg) {\n    throw new Error('You need to instantiate using the \"new\" keyword.');\n  } // make property of pkg._provider, which can properly set providers\n\n\n  Object.defineProperty(pkg, 'currentProvider', {\n    get: () => {\n      return pkg._provider;\n    },\n    set: value => {\n      return pkg.setProvider(value);\n    },\n    enumerable: true,\n    configurable: true\n  }); // inherit from parent package or create a new RequestManager\n\n  if (args[0] && args[0]._requestManager) {\n    pkg._requestManager = args[0]._requestManager;\n  } else {\n    pkg._requestManager = new requestManager.Manager(args[0], args[1]);\n  } // add givenProvider\n\n\n  pkg.givenProvider = requestManager.Manager.givenProvider;\n  pkg.providers = requestManager.Manager.providers;\n  pkg._provider = pkg._requestManager.provider; // add SETPROVIDER function (don't overwrite if already existing)\n\n  if (!pkg.setProvider) {\n    pkg.setProvider = (provider, net) => {\n      pkg._requestManager.setProvider(provider, net);\n\n      pkg._provider = pkg._requestManager.provider;\n      return true;\n    };\n  }\n\n  pkg.setRequestManager = manager => {\n    pkg._requestManager = manager;\n    pkg._provider = manager.provider;\n  }; // attach batch request creation\n\n\n  pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager); // attach extend function\n\n  pkg.extend = extend(pkg);\n};\n\nconst addProviders = pkg => {\n  pkg.givenProvider = requestManager.Manager.givenProvider;\n  pkg.providers = requestManager.Manager.providers;\n};\n\nmodule.exports = {\n  packageInit,\n  addProviders\n};","map":{"version":3,"names":["requestManager","require","extend","packageInit","pkg","args","Array","prototype","slice","call","Error","Object","defineProperty","get","_provider","set","value","setProvider","enumerable","configurable","_requestManager","Manager","givenProvider","providers","provider","net","setRequestManager","manager","BatchRequest","BatchManager","bind","addProviders","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/web3-core/lib/index.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\nconst requestManager = require(\"web3-core-requestmanager\");\r\nconst extend = require(\"./extend\");\r\nconst packageInit = (pkg, args) => {\r\n    args = Array.prototype.slice.call(args);\r\n    if (!pkg) {\r\n        throw new Error('You need to instantiate using the \"new\" keyword.');\r\n    }\r\n    // make property of pkg._provider, which can properly set providers\r\n    Object.defineProperty(pkg, 'currentProvider', {\r\n        get: () => {\r\n            return pkg._provider;\r\n        },\r\n        set: (value) => {\r\n            return pkg.setProvider(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // inherit from parent package or create a new RequestManager\r\n    if (args[0] && args[0]._requestManager) {\r\n        pkg._requestManager = args[0]._requestManager;\r\n    }\r\n    else {\r\n        pkg._requestManager = new requestManager.Manager(args[0], args[1]);\r\n    }\r\n    // add givenProvider\r\n    pkg.givenProvider = requestManager.Manager.givenProvider;\r\n    pkg.providers = requestManager.Manager.providers;\r\n    pkg._provider = pkg._requestManager.provider;\r\n    // add SETPROVIDER function (don't overwrite if already existing)\r\n    if (!pkg.setProvider) {\r\n        pkg.setProvider = (provider, net) => {\r\n            pkg._requestManager.setProvider(provider, net);\r\n            pkg._provider = pkg._requestManager.provider;\r\n            return true;\r\n        };\r\n    }\r\n    pkg.setRequestManager = (manager) => {\r\n        pkg._requestManager = manager;\r\n        pkg._provider = manager.provider;\r\n    };\r\n    // attach batch request creation\r\n    pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager);\r\n    // attach extend function\r\n    pkg.extend = extend(pkg);\r\n};\r\nconst addProviders = (pkg) => {\r\n    pkg.givenProvider = requestManager.Manager.givenProvider;\r\n    pkg.providers = requestManager.Manager.providers;\r\n};\r\nmodule.exports = {\r\n    packageInit,\r\n    addProviders\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAME,WAAW,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;EAC/BA,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,IAA3B,CAAP;;EACA,IAAI,CAACD,GAAL,EAAU;IACN,MAAM,IAAIM,KAAJ,CAAU,kDAAV,CAAN;EACH,CAJ8B,CAK/B;;;EACAC,MAAM,CAACC,cAAP,CAAsBR,GAAtB,EAA2B,iBAA3B,EAA8C;IAC1CS,GAAG,EAAE,MAAM;MACP,OAAOT,GAAG,CAACU,SAAX;IACH,CAHyC;IAI1CC,GAAG,EAAGC,KAAD,IAAW;MACZ,OAAOZ,GAAG,CAACa,WAAJ,CAAgBD,KAAhB,CAAP;IACH,CANyC;IAO1CE,UAAU,EAAE,IAP8B;IAQ1CC,YAAY,EAAE;EAR4B,CAA9C,EAN+B,CAgB/B;;EACA,IAAId,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQe,eAAvB,EAAwC;IACpChB,GAAG,CAACgB,eAAJ,GAAsBf,IAAI,CAAC,CAAD,CAAJ,CAAQe,eAA9B;EACH,CAFD,MAGK;IACDhB,GAAG,CAACgB,eAAJ,GAAsB,IAAIpB,cAAc,CAACqB,OAAnB,CAA2BhB,IAAI,CAAC,CAAD,CAA/B,EAAoCA,IAAI,CAAC,CAAD,CAAxC,CAAtB;EACH,CAtB8B,CAuB/B;;;EACAD,GAAG,CAACkB,aAAJ,GAAoBtB,cAAc,CAACqB,OAAf,CAAuBC,aAA3C;EACAlB,GAAG,CAACmB,SAAJ,GAAgBvB,cAAc,CAACqB,OAAf,CAAuBE,SAAvC;EACAnB,GAAG,CAACU,SAAJ,GAAgBV,GAAG,CAACgB,eAAJ,CAAoBI,QAApC,CA1B+B,CA2B/B;;EACA,IAAI,CAACpB,GAAG,CAACa,WAAT,EAAsB;IAClBb,GAAG,CAACa,WAAJ,GAAkB,CAACO,QAAD,EAAWC,GAAX,KAAmB;MACjCrB,GAAG,CAACgB,eAAJ,CAAoBH,WAApB,CAAgCO,QAAhC,EAA0CC,GAA1C;;MACArB,GAAG,CAACU,SAAJ,GAAgBV,GAAG,CAACgB,eAAJ,CAAoBI,QAApC;MACA,OAAO,IAAP;IACH,CAJD;EAKH;;EACDpB,GAAG,CAACsB,iBAAJ,GAAyBC,OAAD,IAAa;IACjCvB,GAAG,CAACgB,eAAJ,GAAsBO,OAAtB;IACAvB,GAAG,CAACU,SAAJ,GAAgBa,OAAO,CAACH,QAAxB;EACH,CAHD,CAnC+B,CAuC/B;;;EACApB,GAAG,CAACwB,YAAJ,GAAmB5B,cAAc,CAAC6B,YAAf,CAA4BC,IAA5B,CAAiC,IAAjC,EAAuC1B,GAAG,CAACgB,eAA3C,CAAnB,CAxC+B,CAyC/B;;EACAhB,GAAG,CAACF,MAAJ,GAAaA,MAAM,CAACE,GAAD,CAAnB;AACH,CA3CD;;AA4CA,MAAM2B,YAAY,GAAI3B,GAAD,IAAS;EAC1BA,GAAG,CAACkB,aAAJ,GAAoBtB,cAAc,CAACqB,OAAf,CAAuBC,aAA3C;EACAlB,GAAG,CAACmB,SAAJ,GAAgBvB,cAAc,CAACqB,OAAf,CAAuBE,SAAvC;AACH,CAHD;;AAIAS,MAAM,CAACC,OAAP,GAAiB;EACb9B,WADa;EAEb4B;AAFa,CAAjB"},"metadata":{},"sourceType":"script"}
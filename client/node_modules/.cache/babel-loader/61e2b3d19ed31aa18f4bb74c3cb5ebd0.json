{"ast":null,"code":"const debug = require(\"debug\")(\"contract:contract\"); // eslint-disable-line no-unused-vars\n\n\nlet Web3 = require(\"web3\");\n\nconst webUtils = require(\"web3-utils\");\n\nconst execute = require(\"./execute\");\n\nconst {\n  bootstrap,\n  constructorMethods,\n  properties\n} = require(\"./contract/index\"); // For browserified version. If browserify gave us an empty version,\n// look for the one provided by the user.\n\n\nif (typeof Web3 === \"object\" && Object.keys(Web3).length === 0) {\n  Web3 = global.Web3;\n}\n\n(function (module) {\n  // Accepts a contract object created with web3.eth.Contract or an address.\n  function Contract(contract) {\n    var instance = this;\n    var constructor = instance.constructor; // Disambiguate between .at() and .new()\n\n    if (typeof contract === \"string\") {\n      var web3Instance = new constructor.web3.eth.Contract(constructor.abi);\n      web3Instance.options.address = contract;\n      contract = web3Instance;\n    } // Core:\n\n\n    instance.methods = {};\n    instance.abi = constructor.abi;\n    instance.address = contract.options.address;\n    instance.transactionHash = contract.transactionHash;\n    instance.contract = contract; // User defined methods, overloaded methods, events\n\n    instance.abi.forEach(function (item) {\n      switch (item.type) {\n        case \"function\":\n          var isConstant = [\"pure\", \"view\"].includes(item.stateMutability) || item.constant; // new form // deprecated case\n\n          var signature = webUtils._jsonInterfaceMethodToString(item);\n\n          var method = function (constant, web3Method) {\n            var fn;\n            constant ? fn = execute.call.call(constructor, web3Method, item, instance.address) : fn = execute.send.call(constructor, web3Method, item, instance.address);\n            fn.call = execute.call.call(constructor, web3Method, item, instance.address);\n            fn.sendTransaction = execute.send.call(constructor, web3Method, item, instance.address);\n            fn.estimateGas = execute.estimate.call(constructor, web3Method, item, instance.address);\n            fn.request = execute.request.call(constructor, web3Method, item, instance.address);\n            return fn;\n          }; // Only define methods once. Any overloaded methods will have all their\n          // accessors available by ABI signature available on the `methods` key below.\n\n\n          if (instance[item.name] === undefined) {\n            instance[item.name] = method(isConstant, contract.methods[item.name]);\n          } // Overloaded methods should be invoked via the .methods property\n\n\n          instance.methods[signature] = method(isConstant, contract.methods[signature]);\n          break;\n\n        case \"event\":\n          instance[item.name] = execute.event.call(constructor, contract.events[item.name]);\n          break;\n      }\n    }); // sendTransaction / send\n\n    instance.sendTransaction = execute.send.call(constructor, null, null, instance.address); // Prefer user defined `send`\n\n    if (!instance.send) {\n      instance.send = function (value) {\n        let txParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const packet = Object.assign({\n          value: value\n        }, txParams);\n        return instance.sendTransaction(packet);\n      };\n    } // Other events\n\n\n    instance.allEvents = execute.allEvents.call(constructor, contract);\n    instance.getPastEvents = execute.getPastEvents.call(constructor, contract);\n  }\n\n  Contract._constructorMethods = constructorMethods(Contract); // Getter functions are scoped to Contract object.\n\n  Contract._properties = properties;\n  bootstrap(Contract);\n  module.exports = Contract;\n  return Contract;\n})(module || {});","map":{"version":3,"names":["debug","require","Web3","webUtils","execute","bootstrap","constructorMethods","properties","Object","keys","length","global","module","Contract","contract","instance","constructor","web3Instance","web3","eth","abi","options","address","methods","transactionHash","forEach","item","type","isConstant","includes","stateMutability","constant","signature","_jsonInterfaceMethodToString","method","web3Method","fn","call","send","sendTransaction","estimateGas","estimate","request","name","undefined","event","events","value","txParams","packet","assign","allEvents","getPastEvents","_constructorMethods","_properties","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/truffle-contract/lib/contract.js"],"sourcesContent":["const debug = require(\"debug\")(\"contract:contract\"); // eslint-disable-line no-unused-vars\r\nlet Web3 = require(\"web3\");\r\nconst webUtils = require(\"web3-utils\");\r\nconst execute = require(\"./execute\");\r\nconst {\r\n  bootstrap,\r\n  constructorMethods,\r\n  properties\r\n} = require(\"./contract/index\");\r\n\r\n// For browserified version. If browserify gave us an empty version,\r\n// look for the one provided by the user.\r\nif (typeof Web3 === \"object\" && Object.keys(Web3).length === 0) {\r\n  Web3 = global.Web3;\r\n}\r\n\r\n(function(module) {\r\n  // Accepts a contract object created with web3.eth.Contract or an address.\r\n  function Contract(contract) {\r\n    var instance = this;\r\n    var constructor = instance.constructor;\r\n\r\n    // Disambiguate between .at() and .new()\r\n    if (typeof contract === \"string\") {\r\n      var web3Instance = new constructor.web3.eth.Contract(constructor.abi);\r\n      web3Instance.options.address = contract;\r\n      contract = web3Instance;\r\n    }\r\n\r\n    // Core:\r\n    instance.methods = {};\r\n    instance.abi = constructor.abi;\r\n    instance.address = contract.options.address;\r\n    instance.transactionHash = contract.transactionHash;\r\n    instance.contract = contract;\r\n\r\n    // User defined methods, overloaded methods, events\r\n    instance.abi.forEach(function(item) {\r\n      switch (item.type) {\r\n        case \"function\":\r\n          var isConstant =\r\n            [\"pure\", \"view\"].includes(item.stateMutability) || item.constant; // new form // deprecated case\r\n\r\n          var signature = webUtils._jsonInterfaceMethodToString(item);\r\n\r\n          var method = function(constant, web3Method) {\r\n            var fn;\r\n\r\n            constant\r\n              ? (fn = execute.call.call(\r\n                  constructor,\r\n                  web3Method,\r\n                  item,\r\n                  instance.address\r\n                ))\r\n              : (fn = execute.send.call(\r\n                  constructor,\r\n                  web3Method,\r\n                  item,\r\n                  instance.address\r\n                ));\r\n\r\n            fn.call = execute.call.call(\r\n              constructor,\r\n              web3Method,\r\n              item,\r\n              instance.address\r\n            );\r\n            fn.sendTransaction = execute.send.call(\r\n              constructor,\r\n              web3Method,\r\n              item,\r\n              instance.address\r\n            );\r\n            fn.estimateGas = execute.estimate.call(\r\n              constructor,\r\n              web3Method,\r\n              item,\r\n              instance.address\r\n            );\r\n            fn.request = execute.request.call(\r\n              constructor,\r\n              web3Method,\r\n              item,\r\n              instance.address\r\n            );\r\n\r\n            return fn;\r\n          };\r\n\r\n          // Only define methods once. Any overloaded methods will have all their\r\n          // accessors available by ABI signature available on the `methods` key below.\r\n          if (instance[item.name] === undefined) {\r\n            instance[item.name] = method(\r\n              isConstant,\r\n              contract.methods[item.name]\r\n            );\r\n          }\r\n\r\n          // Overloaded methods should be invoked via the .methods property\r\n          instance.methods[signature] = method(\r\n            isConstant,\r\n            contract.methods[signature]\r\n          );\r\n          break;\r\n\r\n        case \"event\":\r\n          instance[item.name] = execute.event.call(\r\n            constructor,\r\n            contract.events[item.name]\r\n          );\r\n          break;\r\n      }\r\n    });\r\n\r\n    // sendTransaction / send\r\n    instance.sendTransaction = execute.send.call(\r\n      constructor,\r\n      null,\r\n      null,\r\n      instance.address\r\n    );\r\n\r\n    // Prefer user defined `send`\r\n    if (!instance.send) {\r\n      instance.send = (value, txParams = {}) => {\r\n        const packet = Object.assign({ value: value }, txParams);\r\n        return instance.sendTransaction(packet);\r\n      };\r\n    }\r\n\r\n    // Other events\r\n    instance.allEvents = execute.allEvents.call(constructor, contract);\r\n    instance.getPastEvents = execute.getPastEvents.call(constructor, contract);\r\n  }\r\n\r\n  Contract._constructorMethods = constructorMethods(Contract);\r\n\r\n  // Getter functions are scoped to Contract object.\r\n  Contract._properties = properties;\r\n\r\n  bootstrap(Contract);\r\n  module.exports = Contract;\r\n\r\n  return Contract;\r\n})(module || {});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
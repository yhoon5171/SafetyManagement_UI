{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport { useEffect } from \"react\"; // const App = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      account: null,\n      transactionInstance: null,\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  } // componentWillMount() {\n  //   this.loadBlockchainData()\n  // }\n  // async loadBlockchainData() {\n  //   const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n  //   console.log(web3)\n  //   const accounts = await web3.eth.getAccounts();\n  //   console.log(accounts)\n  //   this.setState({ account: accounts[0], web3: web3});\n  //   console.log(this.state.account);\n  //   console.log(this.state.web3);\n  //   this.instantiateContract();\n  // }\n  // instantiateContract() {\n  //   const contract = require(\"truffle-contract\");\n  //   const transaction = contract(TransactionContract);\n  //   console.log(this.state.web3);\n  //   transaction.setProvider(this.state.web3.currentProvider);\n  //   this.state.web3.eth.getAccounts((error, accounts) => {\n  //     if (!error){\n  //       transaction.deployed().then(instance => {\n  //         this.setState({transactionInstance: instance, account: accounts[0]});\n  //         this.viewTransaction();\n  //       })\n  //     }\n  //   })\n  // }\n\n\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  loadBlockchainData() {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    console.log(web3);\n    const accounts = web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({\n      account: accounts[0],\n      web3: web3\n    });\n    console.log(this.state.account);\n    console.log(this.state.web3);\n    this.instantiateContract();\n  }\n\n  instantiateContract() {\n    const contract = require(\"truffle-contract\");\n\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error) {\n        transaction.deployed().then(instance => {\n          this.setState({\n            transactionInstance: instance,\n            account: accounts[0]\n          });\n          this.viewTransaction();\n        });\n      }\n    });\n  }\n\n  sendTransaction() {\n    this.state.transactionInstance.sendTransaction({\n      from: this.state.account,\n      gas: 900000\n    });\n  } //ttype에다가 일단 transaction 정보 다 넣기\n\n\n  viewTransaction() {\n    this.state.transactionInstance.viewTransaction.then(result => {\n      this.setState({\n        ttype: result\n      });\n    });\n  } // render() {\n  //   return (\n  //     <div className>\n  //       <SiteName />\n  //       <TransactionInput></TransactionInput>\n  //       {/* <FileUpload setUrl={setFileUrl} />\n  //       FileUrl :{\" \"}\n  //       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n  //         {fileUrl}\n  //       </a> */}\n  //       <p>Your account: {this.state.account}</p>\n  //       <br></br>\n  //       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n  //       <TransactionShow>트랜잭션 보기</TransactionShow>\n  //     </div>\n  // )};\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"IPFS Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Registrant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Responsible Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.sendTransaction(),\n        children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.ttype\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData()\n//   }\n//   async loadBlockchainData() {\n//     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//     const accounts = await web3.eth.getAccounts()\n//     this.setState({ account: accounts[0] })\n//   }\n//   constructor(props) {\n//     super(props)\n//     this.state = { account: '' }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//   )};\n// }\n// export default App;","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","useEffect","App","constructor","props","state","web3","account","transactionInstance","ttype","name","timestamp","ipfs_hash","registrant","responsible_manager","file_type","file_description","componentWillMount","loadBlockchainData","providers","HttpProvider","console","log","accounts","eth","getAccounts","setState","instantiateContract","contract","require","transaction","setProvider","currentProvider","error","deployed","then","instance","viewTransaction","sendTransaction","from","gas","result","render"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\n\n// const App = () => {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n\n//   return (\n//     <div>\n//       <SiteName />\n//       <TransactionInput></TransactionInput>\n\n//       <FileUpload setUrl={setFileUrl} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n//       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//       <TransactionShow>트랜잭션 보기</TransactionShow>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      web3: null,\n      account: null,\n      transactionInstance: null,\n\n      ttype: null,\n      name: null,\n      timestamp: null,\n      ipfs_hash: null,\n      registrant: null,\n      responsible_manager: null,\n      file_type: null,\n      file_description: null\n    };\n  }\n\n  // componentWillMount() {\n  //   this.loadBlockchainData()\n  // }\n\n  // async loadBlockchainData() {\n  //   const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n  //   console.log(web3)\n  //   const accounts = await web3.eth.getAccounts();\n  //   console.log(accounts)\n  //   this.setState({ account: accounts[0], web3: web3});\n  //   console.log(this.state.account);\n  //   console.log(this.state.web3);\n  //   this.instantiateContract();\n  // }\n\n  // instantiateContract() {\n  //   const contract = require(\"truffle-contract\");\n  //   const transaction = contract(TransactionContract);\n  //   console.log(this.state.web3);\n  //   transaction.setProvider(this.state.web3.currentProvider);\n\n  //   this.state.web3.eth.getAccounts((error, accounts) => {\n  //     if (!error){\n  //       transaction.deployed().then(instance => {\n  //         this.setState({transactionInstance: instance, account: accounts[0]});\n  //         this.viewTransaction();\n  //       })\n  //     }\n  //   })\n  // }\n\n\n\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  loadBlockchainData() {\n    const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    console.log(web3)\n    const accounts = web3.eth.getAccounts();\n    console.log(accounts)\n    this.setState({ account: accounts[0], web3: web3});\n    console.log(this.state.account);\n    console.log(this.state.web3);\n    this.instantiateContract();\n  }\n\n  instantiateContract() {\n    const contract = require(\"truffle-contract\");\n    const transaction = contract(TransactionContract);\n    console.log(this.state.web3);\n    transaction.setProvider(this.state.web3.currentProvider);\n\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      if (!error){\n        transaction.deployed().then(instance => {\n          this.setState({transactionInstance: instance, account: accounts[0]});\n          this.viewTransaction();\n        })\n      }\n    })\n  }\n\n\n\n\n\n  sendTransaction() {\n    this.state.transactionInstance.sendTransaction({\n      from: this.state.account,\n      gas: 900000\n    })\n  }\n\n  //ttype에다가 일단 transaction 정보 다 넣기\n  viewTransaction() {\n    this.state.transactionInstance.viewTransaction.then(result => {\n      this.setState ({ttype: result})\n    })\n  }\n\n  // render() {\n  //   return (\n  //     <div className>\n  //       <SiteName />\n  //       <TransactionInput></TransactionInput>\n\n  //       {/* <FileUpload setUrl={setFileUrl} />\n  //       FileUrl :{\" \"}\n  //       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n  //         {fileUrl}\n  //       </a> */}\n  //       <p>Your account: {this.state.account}</p>\n  //       <br></br>\n  //       <TransactionAdd>트랜잭션 추가</TransactionAdd>\n  //       <TransactionShow>트랜잭션 보기</TransactionShow>\n  //     </div>\n  // )};\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" placeholder=\"Type\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Name\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Time\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Registrant\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"File Type\"></input>\n        <br></br>\n        <input type=\"text\" placeholder=\"File Description\"></input>\n        <br></br>\n        \n        <p>Your account: {this.state.account}</p>\n        <br></br>\n\n        <button onClick={() => this.sendTransaction()}>\n          트랜잭션 추가\n        </button>\n        <br></br>\n\n        <p>{this.state.ttype}</p>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n// class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData()\n//   }\n\n//   async loadBlockchainData() {\n//     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//     const accounts = await web3.eth.getAccounts()\n//     this.setState({ account: accounts[0] })\n//   }\n\n//   constructor(props) {\n//     super(props)\n//     this.state = { account: '' }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <SiteName />\n//         <TransactionInput></TransactionInput>\n\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <TransactionAdd>트랜잭션 추가</TransactionAdd>\n//         <TransactionShow>트랜잭션 보기</TransactionShow>\n//       </div>\n//   )};\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _regeneratorRuntime = require(\"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _this = this;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar web3_1 = __importDefault(require(\"web3\"));\n\nvar ethereum_overloads_1 = require(\"./ethereum-overloads\");\n\nvar quorum_overloads_1 = require(\"./quorum-overloads\");\n\nvar fabric_evm_overloads_1 = require(\"./fabric-evm-overloads\");\n\nvar initInterface = function initInterface(web3Shim) {\n  return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var networkTypes;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            networkTypes = new Map(Object.entries({\n              \"ethereum\": ethereum_overloads_1.EthereumDefinition,\n              \"quorum\": quorum_overloads_1.QuorumDefinition,\n              \"fabric-evm\": fabric_evm_overloads_1.FabricEvmDefinition\n            }));\n            networkTypes.get(web3Shim.networkType).initNetworkType(web3Shim);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};\n\n; // March 14, 2019 - Mike Seese:\n// This shim was intended to be temporary (see the above comment)\n// with the idea of a more robust implementation. That implementation\n// would essentially take this shim and include it under the\n// ethereum/apis/web3 (or something like that) structure.\n// I chose to extend/inherit web3 here to keep scope minimal for\n// getting web3 to behave with Quorum and AxCore (future/concurrent PR).\n// I wanted to do as little changing to the original Truffle codebase, and\n// for it to still expect a web3 instance. Otherwise, the scope of these\n// quick support work would be high. The \"Web3Shim\" is a shim for only\n// web3.js, and it was not intended to serve as the general purpose\n// truffle <=> all DLTs adapter. We have other commitments currently that\n// should drive the development of the correct architecture of\n// `truffle-interface-adapter`that should use this work in a more\n// sane and organized manner.\n\nvar Web3Shim = /*#__PURE__*/function (_web3_1$default) {\n  _inherits(Web3Shim, _web3_1$default);\n\n  var _super = _createSuper(Web3Shim);\n\n  function Web3Shim(options) {\n    var _this2;\n\n    _classCallCheck(this, Web3Shim);\n\n    _this2 = _super.call(this);\n\n    if (options) {\n      _this2.networkType = options.networkType || \"ethereum\";\n\n      if (options.provider) {\n        _this2.setProvider(options.provider);\n      }\n    } else {\n      _this2.networkType = \"ethereum\";\n    }\n\n    initInterface(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(Web3Shim, [{\n    key: \"setNetworkType\",\n    value: function setNetworkType(networkType) {\n      this.networkType = networkType;\n      initInterface(this);\n    }\n  }]);\n\n  return Web3Shim;\n}(web3_1.default);\n\nexports.Web3Shim = Web3Shim;\n;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAMC,QAAN;EAAA,OAA4BC;IAAA;IAAA;MAAA;QAAA;UAAA;YAExCC,YAFwC,GAEL,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAe;cAC9D,YAAYC,uCADkD;cAE9D,UAAUC,mCAFoD;cAG9D,cAAcC;YAHgD,CAAf,CAAR,CAFK;YAQ9CN,YAAY,CAACO,GAAb,CAAiBT,QAAQ,CAACU,WAA1B,EAAuCC,eAAvC,CAAuDX,QAAvD;;UAR8C;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,GAA5B;AAAA,CAAtB;;AAsBC,C,CAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACaY,Q;;;;;EAGX,kBAAYC,OAAZ,EAAqC;IAAA;;IAAA;;IACnC;;IAEA,IAAIA,OAAJ,EAAa;MACX,OAAKH,WAAL,GAAmBG,OAAO,CAACH,WAAR,IAAuB,UAA1C;;MAEA,IAAIG,OAAO,CAACC,QAAZ,EAAsB;QACpB,OAAKC,WAAL,CAAiBF,OAAO,CAACC,QAAzB;MACD;IACF,CAND,MAMO;MACL,OAAKJ,WAAL,GAAmB,UAAnB;IACD;;IAEDX,aAAa,gCAAb;IAbmC;EAcpC;;;;WAED,wBAAeW,WAAf,EAAuC;MACrC,KAAKA,WAAL,GAAmBA,WAAnB;MACAX,aAAa,CAAC,IAAD,CAAb;IACD;;;;EAtB2BiB,c;;AAA9BC;AAuBC","names":["initInterface","web3Shim","__awaiter","networkTypes","Map","Object","entries","ethereum_overloads_1","quorum_overloads_1","fabric_evm_overloads_1","get","networkType","initNetworkType","Web3Shim","options","provider","setProvider","web3_1","exports"],"sourceRoot":"","sources":["../lib/web3-shim.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/**\r\n * Turns a browser readable stream into an async iterable. Async iteration over\r\n * returned iterable will lock give stream, preventing any other consumer from\r\n * acquiring a reader. The lock will be released if iteration loop is broken. To\r\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\r\n * as a second argument.\r\n * @template T\r\n * @param {ReadableStream<T>} stream\r\n * @param {Object} [options]\r\n * @param {boolean} [options.preventCancel=boolean]\r\n * @returns {AsyncIterable<T>}\r\n */\n\nasync function* browserReadableStreamToIt(stream) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const result = await reader.read();\n\n      if (result.done) {\n        return;\n      }\n\n      yield result.value;\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel();\n    }\n\n    reader.releaseLock();\n  }\n}\n\nmodule.exports = browserReadableStreamToIt;","map":{"version":3,"names":["browserReadableStreamToIt","stream","options","reader","getReader","result","read","done","value","preventCancel","cancel","releaseLock","module","exports"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/browser-readablestream-to-it/index.js"],"sourcesContent":["'use strict'\r\n\r\n/**\r\n * Turns a browser readable stream into an async iterable. Async iteration over\r\n * returned iterable will lock give stream, preventing any other consumer from\r\n * acquiring a reader. The lock will be released if iteration loop is broken. To\r\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\r\n * as a second argument.\r\n * @template T\r\n * @param {ReadableStream<T>} stream\r\n * @param {Object} [options]\r\n * @param {boolean} [options.preventCancel=boolean]\r\n * @returns {AsyncIterable<T>}\r\n */\r\nasync function * browserReadableStreamToIt (stream, options = {}) {\r\n  const reader = stream.getReader()\r\n\r\n  try {\r\n    while (true) {\r\n      const result = await reader.read()\r\n\r\n      if (result.done) {\r\n        return\r\n      }\r\n\r\n      yield result.value\r\n    }\r\n  } finally {\r\n    if (options.preventCancel !== true) {\r\n      reader.cancel()\r\n    }\r\n\r\n    reader.releaseLock()\r\n  }\r\n}\r\n\r\nmodule.exports = browserReadableStreamToIt\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAiBA,yBAAjB,CAA4CC,MAA5C,EAAkE;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EAChE,MAAMC,MAAM,GAAGF,MAAM,CAACG,SAAP,EAAf;;EAEA,IAAI;IACF,OAAO,IAAP,EAAa;MACX,MAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAP,EAArB;;MAEA,IAAID,MAAM,CAACE,IAAX,EAAiB;QACf;MACD;;MAED,MAAMF,MAAM,CAACG,KAAb;IACD;EACF,CAVD,SAUU;IACR,IAAIN,OAAO,CAACO,aAAR,KAA0B,IAA9B,EAAoC;MAClCN,MAAM,CAACO,MAAP;IACD;;IAEDP,MAAM,CAACQ,WAAP;EACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiBb,yBAAjB"},"metadata":{},"sourceType":"script"}
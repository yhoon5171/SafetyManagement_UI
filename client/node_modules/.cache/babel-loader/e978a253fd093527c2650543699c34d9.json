{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ubuntu/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar LOAD_BASE = function LOAD_BASE(name) {\n  return Promise.reject(new Error(\"No base found for \\\"\".concat(name, \"\\\"\")));\n};\n\nvar Multibases = /*#__PURE__*/function () {\n  function Multibases(options) {\n    _classCallCheck(this, Multibases);\n\n    this._basesByName = {};\n    this._basesByPrefix = {};\n    this._loadBase = options.loadBase || LOAD_BASE;\n\n    var _iterator = _createForOfIteratorHelper(options.bases),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var base = _step.value;\n        this.addBase(base);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  _createClass(Multibases, [{\n    key: \"addBase\",\n    value: function addBase(base) {\n      if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n        throw new Error(\"Codec already exists for codec \\\"\".concat(base.name, \"\\\"\"));\n      }\n\n      this._basesByName[base.name] = base;\n      this._basesByPrefix[base.prefix] = base;\n    }\n  }, {\n    key: \"removeBase\",\n    value: function removeBase(base) {\n      delete this._basesByName[base.name];\n      delete this._basesByPrefix[base.prefix];\n    }\n  }, {\n    key: \"getBase\",\n    value: function () {\n      var _getBase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(nameOrPrefix) {\n        var base;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._basesByName[nameOrPrefix]) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._basesByName[nameOrPrefix]);\n\n              case 2:\n                if (!this._basesByPrefix[nameOrPrefix]) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._basesByPrefix[nameOrPrefix]);\n\n              case 4:\n                _context.next = 6;\n                return this._loadBase(nameOrPrefix);\n\n              case 6:\n                base = _context.sent;\n\n                if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n                  this.addBase(base);\n                }\n\n                return _context.abrupt(\"return\", base);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBase(_x) {\n        return _getBase.apply(this, arguments);\n      }\n\n      return getBase;\n    }()\n  }, {\n    key: \"listBases\",\n    value: function listBases() {\n      return Object.values(this._basesByName);\n    }\n  }]);\n\n  return Multibases;\n}();\n\nexports.Multibases = Multibases;","map":{"version":3,"names":["Object","defineProperty","exports","value","LOAD_BASE","name","Promise","reject","Error","Multibases","options","_basesByName","_basesByPrefix","_loadBase","loadBase","bases","base","addBase","prefix","nameOrPrefix","values"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/ipfs-core-utils/cjs/src/multibases.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst LOAD_BASE = name => Promise.reject(new Error(`No base found for \"${ name }\"`));\nclass Multibases {\n  constructor(options) {\n    this._basesByName = {};\n    this._basesByPrefix = {};\n    this._loadBase = options.loadBase || LOAD_BASE;\n    for (const base of options.bases) {\n      this.addBase(base);\n    }\n  }\n  addBase(base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${ base.name }\"`);\n    }\n    this._basesByName[base.name] = base;\n    this._basesByPrefix[base.prefix] = base;\n  }\n  removeBase(base) {\n    delete this._basesByName[base.name];\n    delete this._basesByPrefix[base.prefix];\n  }\n  async getBase(nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix];\n    }\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix];\n    }\n    const base = await this._loadBase(nameOrPrefix);\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base);\n    }\n    return base;\n  }\n  listBases() {\n    return Object.values(this._basesByName);\n  }\n}\n\nexports.Multibases = Multibases;\n"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI;EAAA,OAAIC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,+BAAiCH,IAAjC,QAAf,CAAJ;AAAA,CAAtB;;IACMI,U;EACJ,oBAAYC,OAAZ,EAAqB;IAAA;;IACnB,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAKC,SAAL,GAAiBH,OAAO,CAACI,QAAR,IAAoBV,SAArC;;IAHmB,2CAIAM,OAAO,CAACK,KAJR;IAAA;;IAAA;MAInB,oDAAkC;QAAA,IAAvBC,IAAuB;QAChC,KAAKC,OAAL,CAAaD,IAAb;MACD;IANkB;MAAA;IAAA;MAAA;IAAA;EAOpB;;;;WACD,iBAAQA,IAAR,EAAc;MACZ,IAAI,KAAKL,YAAL,CAAkBK,IAAI,CAACX,IAAvB,KAAgC,KAAKO,cAAL,CAAoBI,IAAI,CAACE,MAAzB,CAApC,EAAsE;QACpE,MAAM,IAAIV,KAAJ,4CAA8CQ,IAAI,CAACX,IAAnD,QAAN;MACD;;MACD,KAAKM,YAAL,CAAkBK,IAAI,CAACX,IAAvB,IAA+BW,IAA/B;MACA,KAAKJ,cAAL,CAAoBI,IAAI,CAACE,MAAzB,IAAmCF,IAAnC;IACD;;;WACD,oBAAWA,IAAX,EAAiB;MACf,OAAO,KAAKL,YAAL,CAAkBK,IAAI,CAACX,IAAvB,CAAP;MACA,OAAO,KAAKO,cAAL,CAAoBI,IAAI,CAACE,MAAzB,CAAP;IACD;;;;gFACD,iBAAcC,YAAd;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACM,KAAKR,YAAL,CAAkBQ,YAAlB,CADN;kBAAA;kBAAA;gBAAA;;gBAAA,iCAEW,KAAKR,YAAL,CAAkBQ,YAAlB,CAFX;;cAAA;gBAAA,KAIM,KAAKP,cAAL,CAAoBO,YAApB,CAJN;kBAAA;kBAAA;gBAAA;;gBAAA,iCAKW,KAAKP,cAAL,CAAoBO,YAApB,CALX;;cAAA;gBAAA;gBAAA,OAOqB,KAAKN,SAAL,CAAeM,YAAf,CAPrB;;cAAA;gBAOQH,IAPR;;gBAQE,IAAI,KAAKL,YAAL,CAAkBK,IAAI,CAACX,IAAvB,KAAgC,IAAhC,IAAwC,KAAKO,cAAL,CAAoBI,IAAI,CAACE,MAAzB,KAAoC,IAAhF,EAAsF;kBACpF,KAAKD,OAAL,CAAaD,IAAb;gBACD;;gBAVH,iCAWSA,IAXT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAaA,qBAAY;MACV,OAAOhB,MAAM,CAACoB,MAAP,CAAc,KAAKT,YAAnB,CAAP;IACD;;;;;;AAGHT,OAAO,CAACO,UAAR,GAAqBA,UAArB"},"metadata":{},"sourceType":"script"}
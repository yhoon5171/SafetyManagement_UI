{"ast":null,"code":"\"use strict\";\n\nmodule.exports = EventEmitter;\n/**\n * Constructs a new event emitter instance.\n * @classdesc A minimal event emitter.\n * @memberof util\n * @constructor\n */\n\nfunction EventEmitter() {\n  /**\n   * Registered listeners.\n   * @type {Object.<string,*>}\n   * @private\n   */\n  this._listeners = {};\n}\n/**\n * Registers an event listener.\n * @param {string} evt Event name\n * @param {function} fn Listener\n * @param {*} [ctx] Listener context\n * @returns {util.EventEmitter} `this`\n */\n\n\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\n  (this._listeners[evt] || (this._listeners[evt] = [])).push({\n    fn: fn,\n    ctx: ctx || this\n  });\n  return this;\n};\n/**\n * Removes an event listener or any matching listeners if arguments are omitted.\n * @param {string} [evt] Event name. Removes all listeners if omitted.\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\n * @returns {util.EventEmitter} `this`\n */\n\n\nEventEmitter.prototype.off = function off(evt, fn) {\n  if (evt === undefined) this._listeners = {};else {\n    if (fn === undefined) this._listeners[evt] = [];else {\n      var listeners = this._listeners[evt];\n\n      for (var i = 0; i < listeners.length;) {\n        if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;\n      }\n    }\n  }\n  return this;\n};\n/**\n * Emits an event by calling its listeners with the specified arguments.\n * @param {string} evt Event name\n * @param {...*} args Arguments\n * @returns {util.EventEmitter} `this`\n */\n\n\nEventEmitter.prototype.emit = function emit(evt) {\n  var listeners = this._listeners[evt];\n\n  if (listeners) {\n    var args = [],\n        i = 1;\n\n    for (; i < arguments.length;) {\n      args.push(arguments[i++]);\n    }\n\n    for (i = 0; i < listeners.length;) {\n      listeners[i].fn.apply(listeners[i++].ctx, args);\n    }\n  }\n\n  return this;\n};","map":{"version":3,"names":["module","exports","EventEmitter","_listeners","prototype","on","evt","fn","ctx","push","off","undefined","listeners","i","length","splice","emit","args","arguments","apply"],"sources":["/home/ubuntu/SafetyManagement_UI/client/node_modules/@protobufjs/eventemitter/index.js"],"sourcesContent":["\"use strict\";\nmodule.exports = EventEmitter;\n\n/**\n * Constructs a new event emitter instance.\n * @classdesc A minimal event emitter.\n * @memberof util\n * @constructor\n */\nfunction EventEmitter() {\n\n    /**\n     * Registered listeners.\n     * @type {Object.<string,*>}\n     * @private\n     */\n    this._listeners = {};\n}\n\n/**\n * Registers an event listener.\n * @param {string} evt Event name\n * @param {function} fn Listener\n * @param {*} [ctx] Listener context\n * @returns {util.EventEmitter} `this`\n */\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\n        fn  : fn,\n        ctx : ctx || this\n    });\n    return this;\n};\n\n/**\n * Removes an event listener or any matching listeners if arguments are omitted.\n * @param {string} [evt] Event name. Removes all listeners if omitted.\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\n * @returns {util.EventEmitter} `this`\n */\nEventEmitter.prototype.off = function off(evt, fn) {\n    if (evt === undefined)\n        this._listeners = {};\n    else {\n        if (fn === undefined)\n            this._listeners[evt] = [];\n        else {\n            var listeners = this._listeners[evt];\n            for (var i = 0; i < listeners.length;)\n                if (listeners[i].fn === fn)\n                    listeners.splice(i, 1);\n                else\n                    ++i;\n        }\n    }\n    return this;\n};\n\n/**\n * Emits an event by calling its listeners with the specified arguments.\n * @param {string} evt Event name\n * @param {...*} args Arguments\n * @returns {util.EventEmitter} `this`\n */\nEventEmitter.prototype.emit = function emit(evt) {\n    var listeners = this._listeners[evt];\n    if (listeners) {\n        var args = [],\n            i = 1;\n        for (; i < arguments.length;)\n            args.push(arguments[i++]);\n        for (i = 0; i < listeners.length;)\n            listeners[i].fn.apply(listeners[i++].ctx, args);\n    }\n    return this;\n};\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,GAAwB;EAEpB;AACJ;AACA;AACA;AACA;EACI,KAAKC,UAAL,GAAkB,EAAlB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,YAAY,CAACE,SAAb,CAAuBC,EAAvB,GAA4B,SAASA,EAAT,CAAYC,GAAZ,EAAiBC,EAAjB,EAAqBC,GAArB,EAA0B;EAClD,CAAC,KAAKL,UAAL,CAAgBG,GAAhB,MAAyB,KAAKH,UAAL,CAAgBG,GAAhB,IAAuB,EAAhD,CAAD,EAAsDG,IAAtD,CAA2D;IACvDF,EAAE,EAAIA,EADiD;IAEvDC,GAAG,EAAGA,GAAG,IAAI;EAF0C,CAA3D;EAIA,OAAO,IAAP;AACH,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;;;AACAN,YAAY,CAACE,SAAb,CAAuBM,GAAvB,GAA6B,SAASA,GAAT,CAAaJ,GAAb,EAAkBC,EAAlB,EAAsB;EAC/C,IAAID,GAAG,KAAKK,SAAZ,EACI,KAAKR,UAAL,GAAkB,EAAlB,CADJ,KAEK;IACD,IAAII,EAAE,KAAKI,SAAX,EACI,KAAKR,UAAL,CAAgBG,GAAhB,IAAuB,EAAvB,CADJ,KAEK;MACD,IAAIM,SAAS,GAAG,KAAKT,UAAL,CAAgBG,GAAhB,CAAhB;;MACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B;QACI,IAAIF,SAAS,CAACC,CAAD,CAAT,CAAaN,EAAb,KAAoBA,EAAxB,EACIK,SAAS,CAACG,MAAV,CAAiBF,CAAjB,EAAoB,CAApB,EADJ,KAGI,EAAEA,CAAF;MAJR;IAKH;EACJ;EACD,OAAO,IAAP;AACH,CAhBD;AAkBA;AACA;AACA;AACA;AACA;AACA;;;AACAX,YAAY,CAACE,SAAb,CAAuBY,IAAvB,GAA8B,SAASA,IAAT,CAAcV,GAAd,EAAmB;EAC7C,IAAIM,SAAS,GAAG,KAAKT,UAAL,CAAgBG,GAAhB,CAAhB;;EACA,IAAIM,SAAJ,EAAe;IACX,IAAIK,IAAI,GAAG,EAAX;IAAA,IACIJ,CAAC,GAAG,CADR;;IAEA,OAAOA,CAAC,GAAGK,SAAS,CAACJ,MAArB;MACIG,IAAI,CAACR,IAAL,CAAUS,SAAS,CAACL,CAAC,EAAF,CAAnB;IADJ;;IAEA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,SAAS,CAACE,MAA1B;MACIF,SAAS,CAACC,CAAD,CAAT,CAAaN,EAAb,CAAgBY,KAAhB,CAAsBP,SAAS,CAACC,CAAC,EAAF,CAAT,CAAeL,GAArC,EAA0CS,IAA1C;IADJ;EAEH;;EACD,OAAO,IAAP;AACH,CAXD"},"metadata":{},"sourceType":"script"}
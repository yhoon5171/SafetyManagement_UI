{"ast":null,"code":"'use strict';\n\nvar utils = exports;\n\nvar BN = require('bn.js');\n\nvar minAssert = require('minimalistic-assert');\n\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode; // Represent num in a w-NAF form\n\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n  var ws = 1 << w + 1;\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\n\nutils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\nfunction getJSF(k1, k2) {\n  var jsf = [[], []];\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = k1.andln(3) + d1 & 3;\n    var m24 = k2.andln(3) + d2 & 3;\n    if (m14 === 3) m14 = -1;\n    if (m24 === 3) m24 = -1;\n    var u1;\n\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = k1.andln(7) + d1 & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n    }\n\n    jsf[0].push(u1);\n    var u2;\n\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = k2.andln(7) + d2 & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n    }\n\n    jsf[1].push(u2); // Second phase\n\n    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\n\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n  };\n}\n\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n}\n\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\n\nutils.intFromLE = intFromLE;","map":{"version":3,"names":["utils","exports","BN","require","minAssert","minUtils","assert","toArray","zero2","toHex","encode","getNAF","num","w","bits","naf","Array","Math","max","bitLength","fill","ws","k","clone","i","length","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","d1","d2","m8","cmpn","m14","m24","u1","push","u2","cachedProperty","obj","name","computer","key","prototype","undefined","call","parseBytes","bytes","intFromLE"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/elliptic/lib/elliptic/utils.js"],"sourcesContent":["'use strict';\r\n\r\nvar utils = exports;\r\nvar BN = require('bn.js');\r\nvar minAssert = require('minimalistic-assert');\r\nvar minUtils = require('minimalistic-crypto-utils');\r\n\r\nutils.assert = minAssert;\r\nutils.toArray = minUtils.toArray;\r\nutils.zero2 = minUtils.zero2;\r\nutils.toHex = minUtils.toHex;\r\nutils.encode = minUtils.encode;\r\n\r\n// Represent num in a w-NAF form\r\nfunction getNAF(num, w, bits) {\r\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\r\n  naf.fill(0);\r\n\r\n  var ws = 1 << (w + 1);\r\n  var k = num.clone();\r\n\r\n  for (var i = 0; i < naf.length; i++) {\r\n    var z;\r\n    var mod = k.andln(ws - 1);\r\n    if (k.isOdd()) {\r\n      if (mod > (ws >> 1) - 1)\r\n        z = (ws >> 1) - mod;\r\n      else\r\n        z = mod;\r\n      k.isubn(z);\r\n    } else {\r\n      z = 0;\r\n    }\r\n\r\n    naf[i] = z;\r\n    k.iushrn(1);\r\n  }\r\n\r\n  return naf;\r\n}\r\nutils.getNAF = getNAF;\r\n\r\n// Represent k1, k2 in a Joint Sparse Form\r\nfunction getJSF(k1, k2) {\r\n  var jsf = [\r\n    [],\r\n    [],\r\n  ];\r\n\r\n  k1 = k1.clone();\r\n  k2 = k2.clone();\r\n  var d1 = 0;\r\n  var d2 = 0;\r\n  var m8;\r\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\r\n    // First phase\r\n    var m14 = (k1.andln(3) + d1) & 3;\r\n    var m24 = (k2.andln(3) + d2) & 3;\r\n    if (m14 === 3)\r\n      m14 = -1;\r\n    if (m24 === 3)\r\n      m24 = -1;\r\n    var u1;\r\n    if ((m14 & 1) === 0) {\r\n      u1 = 0;\r\n    } else {\r\n      m8 = (k1.andln(7) + d1) & 7;\r\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\r\n        u1 = -m14;\r\n      else\r\n        u1 = m14;\r\n    }\r\n    jsf[0].push(u1);\r\n\r\n    var u2;\r\n    if ((m24 & 1) === 0) {\r\n      u2 = 0;\r\n    } else {\r\n      m8 = (k2.andln(7) + d2) & 7;\r\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\r\n        u2 = -m24;\r\n      else\r\n        u2 = m24;\r\n    }\r\n    jsf[1].push(u2);\r\n\r\n    // Second phase\r\n    if (2 * d1 === u1 + 1)\r\n      d1 = 1 - d1;\r\n    if (2 * d2 === u2 + 1)\r\n      d2 = 1 - d2;\r\n    k1.iushrn(1);\r\n    k2.iushrn(1);\r\n  }\r\n\r\n  return jsf;\r\n}\r\nutils.getJSF = getJSF;\r\n\r\nfunction cachedProperty(obj, name, computer) {\r\n  var key = '_' + name;\r\n  obj.prototype[name] = function cachedProperty() {\r\n    return this[key] !== undefined ? this[key] :\r\n      this[key] = computer.call(this);\r\n  };\r\n}\r\nutils.cachedProperty = cachedProperty;\r\n\r\nfunction parseBytes(bytes) {\r\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\r\n    bytes;\r\n}\r\nutils.parseBytes = parseBytes;\r\n\r\nfunction intFromLE(bytes) {\r\n  return new BN(bytes, 'hex', 'le');\r\n}\r\nutils.intFromLE = intFromLE;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) res[i] = 0; // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) res[i++] = 0;\n  }\n\n  return res;\n};","map":{"version":3,"names":["utils","require","assert","BlockHash","pending","pendingTotal","blockSize","constructor","outSize","hmacStrength","padLength","endian","_delta8","_delta32","exports","prototype","update","msg","enc","toArray","concat","length","r","slice","join32","i","_update","digest","_pad","_digest","pad","len","bytes","k","res","Array","t"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/hash.js/lib/hash/common.js"],"sourcesContent":["'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar assert = require('minimalistic-assert');\r\n\r\nfunction BlockHash() {\r\n  this.pending = null;\r\n  this.pendingTotal = 0;\r\n  this.blockSize = this.constructor.blockSize;\r\n  this.outSize = this.constructor.outSize;\r\n  this.hmacStrength = this.constructor.hmacStrength;\r\n  this.padLength = this.constructor.padLength / 8;\r\n  this.endian = 'big';\r\n\r\n  this._delta8 = this.blockSize / 8;\r\n  this._delta32 = this.blockSize / 32;\r\n}\r\nexports.BlockHash = BlockHash;\r\n\r\nBlockHash.prototype.update = function update(msg, enc) {\r\n  // Convert message to array, pad it, and join into 32bit blocks\r\n  msg = utils.toArray(msg, enc);\r\n  if (!this.pending)\r\n    this.pending = msg;\r\n  else\r\n    this.pending = this.pending.concat(msg);\r\n  this.pendingTotal += msg.length;\r\n\r\n  // Enough data, try updating\r\n  if (this.pending.length >= this._delta8) {\r\n    msg = this.pending;\r\n\r\n    // Process pending data in blocks\r\n    var r = msg.length % this._delta8;\r\n    this.pending = msg.slice(msg.length - r, msg.length);\r\n    if (this.pending.length === 0)\r\n      this.pending = null;\r\n\r\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\r\n    for (var i = 0; i < msg.length; i += this._delta32)\r\n      this._update(msg, i, i + this._delta32);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nBlockHash.prototype.digest = function digest(enc) {\r\n  this.update(this._pad());\r\n  assert(this.pending === null);\r\n\r\n  return this._digest(enc);\r\n};\r\n\r\nBlockHash.prototype._pad = function pad() {\r\n  var len = this.pendingTotal;\r\n  var bytes = this._delta8;\r\n  var k = bytes - ((len + this.padLength) % bytes);\r\n  var res = new Array(k + this.padLength);\r\n  res[0] = 0x80;\r\n  for (var i = 1; i < k; i++)\r\n    res[i] = 0;\r\n\r\n  // Append length\r\n  len <<= 3;\r\n  if (this.endian === 'big') {\r\n    for (var t = 8; t < this.padLength; t++)\r\n      res[i++] = 0;\r\n\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = (len >>> 24) & 0xff;\r\n    res[i++] = (len >>> 16) & 0xff;\r\n    res[i++] = (len >>> 8) & 0xff;\r\n    res[i++] = len & 0xff;\r\n  } else {\r\n    res[i++] = len & 0xff;\r\n    res[i++] = (len >>> 8) & 0xff;\r\n    res[i++] = (len >>> 16) & 0xff;\r\n    res[i++] = (len >>> 24) & 0xff;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n\r\n    for (t = 8; t < this.padLength; t++)\r\n      res[i++] = 0;\r\n  }\r\n\r\n  return res;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
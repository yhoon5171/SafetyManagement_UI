{"ast":null,"code":"'use strict';\n\nvar ipRegex = require('ip-regex');\n\nvar isIp = function isIp(string) {\n  return ipRegex({\n    exact: true\n  }).test(string);\n};\n\nisIp.v4 = function (string) {\n  return ipRegex.v4({\n    exact: true\n  }).test(string);\n};\n\nisIp.v6 = function (string) {\n  return ipRegex.v6({\n    exact: true\n  }).test(string);\n};\n\nisIp.version = function (string) {\n  return isIp(string) ? isIp.v4(string) ? 4 : 6 : undefined;\n};\n\nmodule.exports = isIp;","map":{"version":3,"names":["ipRegex","require","isIp","string","exact","test","v4","v6","version","undefined","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/is-ip/index.js"],"sourcesContent":["'use strict';\r\nconst ipRegex = require('ip-regex');\r\n\r\nconst isIp = string => ipRegex({exact: true}).test(string);\r\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\r\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\r\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\r\n\r\nmodule.exports = isIp;\r\n"],"mappings":"AAAA;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,MAAM;EAAA,OAAIH,OAAO,CAAC;IAACI,KAAK,EAAE;EAAR,CAAD,CAAP,CAAuBC,IAAvB,CAA4BF,MAA5B,CAAJ;AAAA,CAAnB;;AACAD,IAAI,CAACI,EAAL,GAAU,UAAAH,MAAM;EAAA,OAAIH,OAAO,CAACM,EAAR,CAAW;IAACF,KAAK,EAAE;EAAR,CAAX,EAA0BC,IAA1B,CAA+BF,MAA/B,CAAJ;AAAA,CAAhB;;AACAD,IAAI,CAACK,EAAL,GAAU,UAAAJ,MAAM;EAAA,OAAIH,OAAO,CAACO,EAAR,CAAW;IAACH,KAAK,EAAE;EAAR,CAAX,EAA0BC,IAA1B,CAA+BF,MAA/B,CAAJ;AAAA,CAAhB;;AACAD,IAAI,CAACM,OAAL,GAAe,UAAAL,MAAM;EAAA,OAAID,IAAI,CAACC,MAAD,CAAJ,GAAgBD,IAAI,CAACI,EAAL,CAAQH,MAAR,IAAkB,CAAlB,GAAsB,CAAtC,GAA2CM,SAA/C;AAAA,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiBT,IAAjB"},"metadata":{},"sourceType":"script"}
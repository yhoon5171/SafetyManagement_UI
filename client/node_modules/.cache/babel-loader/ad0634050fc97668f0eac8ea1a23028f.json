{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar errCode = require('err-code');\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar itPeekable = require('it-peekable');\n\nvar map = require('it-map');\n\nvar utils = require('./utils.js');\n\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\n\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nasync function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || utils.isBytes(input) || utils.isBlob(input) || input._readableState) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {\n      value,\n      done\n    } = await peekable.peek();\n\n    if (done) {\n      yield* [];\n      return;\n    }\n\n    peekable.push(value);\n\n    if (Number.isInteger(value)) {\n      throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n\n    if (value._readableState) {\n      yield* map__default[\"default\"](peekable, value => toFileObject({\n        content: value\n      }, normaliseContent));\n      return;\n    }\n\n    if (utils.isBytes(value)) {\n      yield toFileObject({\n        content: peekable\n      }, normaliseContent);\n      return;\n    }\n\n    if (utils.isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || utils.isReadableStream(value) || utils.isBlob(value)) {\n      yield* map__default[\"default\"](peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n\n  if (utils.isFileObject(input)) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\n\nasync function toFileObject(input, normaliseContent) {\n  const {\n    path,\n    mode,\n    mtime,\n    content\n  } = input;\n  const file = {\n    path: path || '',\n    mode: ipfsUnixfs.parseMode(mode),\n    mtime: ipfsUnixfs.parseMtime(mtime)\n  };\n\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n\n  return file;\n}\n\nexports.normaliseCandidateMultiple = normaliseCandidateMultiple;","map":{"version":3,"names":["Object","defineProperty","exports","value","errCode","require","browserStreamToIt","itPeekable","map","utils","ipfsUnixfs","_interopDefaultLegacy","e","errCode__default","browserStreamToIt__default","itPeekable__default","map__default","normaliseCandidateMultiple","input","normaliseContent","String","isBytes","isBlob","_readableState","Error","isReadableStream","Symbol","iterator","asyncIterator","peekable","done","peek","push","Number","isInteger","toFileObject","content","isFileObject","path","mode","mtime","file","parseMode","parseMtime"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/ipfs-core-utils/cjs/src/files/normalise-candidate-multiple.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar errCode = require('err-code');\r\nvar browserStreamToIt = require('browser-readablestream-to-it');\r\nvar itPeekable = require('it-peekable');\r\nvar map = require('it-map');\r\nvar utils = require('./utils.js');\r\nvar ipfsUnixfs = require('ipfs-unixfs');\r\n\r\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\r\n\r\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\r\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\r\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\r\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\r\n\r\nasync function* normaliseCandidateMultiple(input, normaliseContent) {\r\n  if (typeof input === 'string' || input instanceof String || utils.isBytes(input) || utils.isBlob(input) || input._readableState) {\r\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\r\n  }\r\n  if (utils.isReadableStream(input)) {\r\n    input = browserStreamToIt__default[\"default\"](input);\r\n  }\r\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\r\n    const peekable = itPeekable__default[\"default\"](input);\r\n    const {value, done} = await peekable.peek();\r\n    if (done) {\r\n      yield* [];\r\n      return;\r\n    }\r\n    peekable.push(value);\r\n    if (Number.isInteger(value)) {\r\n      throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\r\n    }\r\n    if (value._readableState) {\r\n      yield* map__default[\"default\"](peekable, value => toFileObject({ content: value }, normaliseContent));\r\n      return;\r\n    }\r\n    if (utils.isBytes(value)) {\r\n      yield toFileObject({ content: peekable }, normaliseContent);\r\n      return;\r\n    }\r\n    if (utils.isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || utils.isReadableStream(value) || utils.isBlob(value)) {\r\n      yield* map__default[\"default\"](peekable, value => toFileObject(value, normaliseContent));\r\n      return;\r\n    }\r\n  }\r\n  if (utils.isFileObject(input)) {\r\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\r\n  }\r\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\r\n}\r\nasync function toFileObject(input, normaliseContent) {\r\n  const {path, mode, mtime, content} = input;\r\n  const file = {\r\n    path: path || '',\r\n    mode: ipfsUnixfs.parseMode(mode),\r\n    mtime: ipfsUnixfs.parseMtime(mtime)\r\n  };\r\n  if (content) {\r\n    file.content = await normaliseContent(content);\r\n  } else if (!path) {\r\n    file.content = await normaliseContent(input);\r\n  }\r\n  return file;\r\n}\r\n\r\nexports.normaliseCandidateMultiple = normaliseCandidateMultiple;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uACF5\\uD504\\uAE30\\\\REACT\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport { FileUpload } from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\";\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [web3, setWeb3] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\n  const [ttype, setTtype] = useState(\"\");\n\n  const componentWillMount = async () => {\n    const wweb3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    setWeb3(web3 => wweb3);\n    this.instantiateContract(); // this.setState({\n    //   web3: web3\n    // }, () => {\n    //   this.instantiateContract();\n    // })\n\n    console.log(web3);\n  };\n\n  const instantiateContract = async () => {\n    const contract = require(\"truffle-contract\");\n\n    const transaction = contract(TransactionContract);\n    console.log(web3);\n    transaction.setProvider(web3.currentProvider);\n    web3.eth.getAccount((err, accounts) => {\n      setTransactionInstance(transactionInstance => instance);\n      setAccount(account => accounts[0]);\n    }); // web3.eth.getAccounts((error, accounts) => {\n    // setTransactionInstance((transactionInstance) => instance);\n    // setAccount((account) => accounts[0]);\n    //   if (!error){\n    //     transaction.deployed().then(instance => {\n    //       this.setState({transactionInstance: instance, account: accounts[0]});\n    //       this.updateAllTransactions(); //얘는 쓸거다\n    //     })\n    //   }\n    // })\n  };\n\n  const sendTransaction = async () => {\n    transactionInstance.sendTransaction({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\") //gas: 100000\n\n    }); //this.updateAllTransactions();\n  };\n\n  return componentWillMount(), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"IPFS Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Registrant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Responsible Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"File Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"File Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.sendTransaction(),\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"all transactions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ttype\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n} // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n\n_s(App, \"CghkTdX3k+JUUL49GUJvisWBppg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Component","FileUpload","SiteName","TransactionAdd","TransactionShow","TransactionInput","TransactionContract","Web3","useEffect","App","fileUrl","setFileUrl","web3","setWeb3","account","setAccount","transactionInstance","setTransactionInstance","ttype","setTtype","componentWillMount","wweb3","providers","HttpProvider","instantiateContract","console","log","contract","require","transaction","setProvider","currentProvider","eth","getAccount","err","accounts","instance","sendTransaction","from","state","value","utils","toWei"],"sources":["D:/공프기/REACT/client/src/App.jsx"],"sourcesContent":["import React, { useState, Component } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport SiteName from './components/SiteName';\nimport TransactionAdd from './components/TransactionAdd';\nimport TransactionShow from './components/TransactionShow';\nimport TransactionInput from './components/TransactionInput';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport { useEffect } from \"react\";\n\n\nexport default function App() {\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [web3, setWeb3] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\n  const [ttype, setTtype] = useState(\"\");\n\n  const componentWillMount = async() => {\n    const wweb3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n\n    setWeb3((web3) => wweb3);\n    this.instantiateContract();\n    // this.setState({\n    //   web3: web3\n    // }, () => {\n    //   this.instantiateContract();\n    // })\n    console.log(web3)\n  }\n\n  const instantiateContract = async() => {\n    const contract = require(\"truffle-contract\");\n    const transaction = contract(TransactionContract);\n    console.log(web3);\n    transaction.setProvider(web3.currentProvider);\n    web3.eth.getAccount((err, accounts) => {\n      setTransactionInstance((transactionInstance) => instance);\n      setAccount((account) => accounts[0]);\n    });\n\n    // web3.eth.getAccounts((error, accounts) => {\n    // setTransactionInstance((transactionInstance) => instance);\n    // setAccount((account) => accounts[0]);\n    //   if (!error){\n    //     transaction.deployed().then(instance => {\n    //       this.setState({transactionInstance: instance, account: accounts[0]});\n    //       this.updateAllTransactions(); //얘는 쓸거다\n    //     })\n    //   }\n    // })\n  }\n\n  const sendTransaction = async() => {\n    transactionInstance.sendTransaction({\n      from: this.state.account,\n      value: this.state.web3.utils.toWei('10', \"ether\"),\n      //gas: 100000\n    })\n    //this.updateAllTransactions();\n  }\n\n  return (\n    componentWillMount(),\n\n    <div>\n      <input type=\"text\" placeholder=\"Type\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Name\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Time\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Registrant\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Type\"></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Description\"></input>\n      <br></br>\n      \n      {/* <FileUpload setUrl={setFileUrl} />\n      FileUrl :{\" \"}\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {fileUrl}\n      </a>\n      <br></br> */}\n\n      <p>Your account: {account}</p>\n      <br></br>\n\n      <button onClick={() => this.sendTransaction()}>\n        트랜잭션 추가\n      </button>\n      <br></br>\n\n      <p>all transactions:</p>\n      <br></br>\n      <p>{ttype}</p>\n    </div>\n  )\n}\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       web3: null,\n//       account: null,\n//       transactionInstance: null,\n\n//       ttype: null,\n//       name: null,\n//       timestamp: null,\n//       ipfs_hash: null,\n//       registrant: null,\n//       responsible_manager: null,\n//       file_type: null,\n//       file_description: null\n//     };\n//   }\n\n//   componentWillMount() {\n//     const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//     this.setState({\n//       web3: web3\n//     }, () => {\n//       this.instantiateContract();\n//     })\n//     console.log(web3)\n//   }\n\n//   instantiateContract(){\n//     const contract = require(\"truffle-contract\");\n//     const transaction = contract(TransactionContract);\n//     console.log(this.state.web3);\n//     transaction.setProvider(this.state.web3.currentProvider);\n\n//     this.state.web3.eth.getAccounts((error, accounts) => {\n//       if (!error){\n//         transaction.deployed().then(instance => {\n//           this.setState({transactionInstance: instance, account: accounts[0]});\n//           //this.updateAllTransactions();\n//         })\n//       }\n//     })\n//   }\n\n//   sendTransaction() {\n//     this.state.transactionInstance.sendTransaction({\n//       from: this.state.account,\n//       value: this.state.web3.utils.toWei('10', \"ether\"),\n//       //gas: 100000\n//     })\n//     //this.updateAllTransactions();\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <input type=\"text\" placeholder=\"Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Name\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Time\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"IPFS Hash\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Registrant\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"Responsible Manager\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Type\"></input>\n//         <br></br>\n//         <input type=\"text\" placeholder=\"File Description\"></input>\n//         <br></br>\n        \n//         {/* <FileUpload setUrl={setFileUrl} />\n//         FileUrl :{\" \"}\n//         <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {fileUrl}\n//         </a>\n//         <br></br> */}\n\n//         <p>Your account: {this.state.account}</p>\n//         <br></br>\n\n//         <button onClick={() => this.sendTransaction()}>\n//           트랜잭션 추가\n//         </button>\n//         <br></br>\n\n//         <p>all transactions:</p>\n//         <br></br>\n//         <p>{this.state.ttype}</p>\n//       </div>\n//     )\n//   }\n// }\n\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
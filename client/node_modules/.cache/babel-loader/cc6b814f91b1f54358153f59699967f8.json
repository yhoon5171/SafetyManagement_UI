{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar configure = require('../../lib/configure.js');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nvar abortSignal = require('../../lib/abort-signal.js');\n\nconst createSetData = configure.configure(api => {\n  async function setData(cid$1, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: [`${cid$1}`],\n        ...options\n      }),\n      ...(await multipartRequest.multipartRequest([data], controller, options.headers))\n    });\n    const {\n      Hash\n    } = await res.json();\n    return cid.CID.parse(Hash);\n  }\n\n  return setData;\n});\nexports.createSetData = createSetData;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","multipartRequest","configure","toUrlSearchParams","abortSignal","createSetData","api","setData","cid$1","data","options","controller","AbortController","signal","res","post","searchParams","arg","headers","Hash","json","CID","parse"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/object/patch/set-data.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar cid = require('multiformats/cid');\r\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\r\nvar configure = require('../../lib/configure.js');\r\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\r\nvar abortSignal = require('../../lib/abort-signal.js');\r\n\r\nconst createSetData = configure.configure(api => {\r\n  async function setData(cid$1, data, options = {}) {\r\n    const controller = new AbortController();\r\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\r\n    const res = await api.post('object/patch/set-data', {\r\n      signal,\r\n      searchParams: toUrlSearchParams.toUrlSearchParams({\r\n        arg: [`${ cid$1 }`],\r\n        ...options\r\n      }),\r\n      ...await multipartRequest.multipartRequest([data], controller, options.headers)\r\n    });\r\n    const {Hash} = await res.json();\r\n    return cid.CID.parse(Hash);\r\n  }\r\n  return setData;\r\n});\r\n\r\nexports.createSetData = createSetData;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,2BAAD,CAAzB;;AAEA,MAAMK,aAAa,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;EAC/C,eAAeC,OAAf,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAkD;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAChD,MAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;IACA,MAAMC,MAAM,GAAGT,WAAW,CAACA,WAAZ,CAAwBO,UAAU,CAACE,MAAnC,EAA2CH,OAAO,CAACG,MAAnD,CAAf;IACA,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,uBAAT,EAAkC;MAClDF,MADkD;MAElDG,YAAY,EAAEb,iBAAiB,CAACA,iBAAlB,CAAoC;QAChDc,GAAG,EAAE,CAAE,GAAGT,KAAO,EAAZ,CAD2C;QAEhD,GAAGE;MAF6C,CAApC,CAFoC;MAMlD,IAAG,MAAMT,gBAAgB,CAACA,gBAAjB,CAAkC,CAACQ,IAAD,CAAlC,EAA0CE,UAA1C,EAAsDD,OAAO,CAACQ,OAA9D,CAAT;IANkD,CAAlC,CAAlB;IAQA,MAAM;MAACC;IAAD,IAAS,MAAML,GAAG,CAACM,IAAJ,EAArB;IACA,OAAOrB,GAAG,CAACsB,GAAJ,CAAQC,KAAR,CAAcH,IAAd,CAAP;EACD;;EACD,OAAOZ,OAAP;AACD,CAhBqB,CAAtB;AAkBAV,OAAO,CAACQ,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}
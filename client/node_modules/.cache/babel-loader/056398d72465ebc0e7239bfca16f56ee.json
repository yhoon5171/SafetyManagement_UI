{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar core = require('web3-core');\n\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\n\nvar Method = require('web3-core-method'); // var formatters = require('web3-core-helpers').formatters;\n\n\nvar Net = require('web3-net');\n\nvar Shh = function Shh() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // overwrite setProvider\n\n  var setProvider = this.setProvider;\n\n  this.setProvider = function () {\n    setProvider.apply(_this, arguments);\n\n    _this.net.setProvider.apply(_this, arguments);\n  };\n\n  this.net = new Net(this.currentProvider);\n  [new Subscriptions({\n    name: 'subscribe',\n    type: 'shh',\n    subscriptions: {\n      'messages': {\n        params: 1 // inputFormatter: [formatters.inputPostFormatter],\n        // outputFormatter: formatters.outputPostFormatter\n\n      }\n    }\n  }), new Method({\n    name: 'getVersion',\n    call: 'shh_version',\n    params: 0\n  }), new Method({\n    name: 'getInfo',\n    call: 'shh_info',\n    params: 0\n  }), new Method({\n    name: 'setMaxMessageSize',\n    call: 'shh_setMaxMessageSize',\n    params: 1\n  }), new Method({\n    name: 'setMinPoW',\n    call: 'shh_setMinPoW',\n    params: 1\n  }), new Method({\n    name: 'markTrustedPeer',\n    call: 'shh_markTrustedPeer',\n    params: 1\n  }), new Method({\n    name: 'newKeyPair',\n    call: 'shh_newKeyPair',\n    params: 0\n  }), new Method({\n    name: 'addPrivateKey',\n    call: 'shh_addPrivateKey',\n    params: 1\n  }), new Method({\n    name: 'deleteKeyPair',\n    call: 'shh_deleteKeyPair',\n    params: 1\n  }), new Method({\n    name: 'hasKeyPair',\n    call: 'shh_hasKeyPair',\n    params: 1\n  }), new Method({\n    name: 'getPublicKey',\n    call: 'shh_getPublicKey',\n    params: 1\n  }), new Method({\n    name: 'getPrivateKey',\n    call: 'shh_getPrivateKey',\n    params: 1\n  }), new Method({\n    name: 'newSymKey',\n    call: 'shh_newSymKey',\n    params: 0\n  }), new Method({\n    name: 'addSymKey',\n    call: 'shh_addSymKey',\n    params: 1\n  }), new Method({\n    name: 'generateSymKeyFromPassword',\n    call: 'shh_generateSymKeyFromPassword',\n    params: 1\n  }), new Method({\n    name: 'hasSymKey',\n    call: 'shh_hasSymKey',\n    params: 1\n  }), new Method({\n    name: 'getSymKey',\n    call: 'shh_getSymKey',\n    params: 1\n  }), new Method({\n    name: 'deleteSymKey',\n    call: 'shh_deleteSymKey',\n    params: 1\n  }), new Method({\n    name: 'newMessageFilter',\n    call: 'shh_newMessageFilter',\n    params: 1\n  }), new Method({\n    name: 'getFilterMessages',\n    call: 'shh_getFilterMessages',\n    params: 1\n  }), new Method({\n    name: 'deleteMessageFilter',\n    call: 'shh_deleteMessageFilter',\n    params: 1\n  }), new Method({\n    name: 'post',\n    call: 'shh_post',\n    params: 1,\n    inputFormatter: [null]\n  }), new Method({\n    name: 'unsubscribe',\n    call: 'shh_unsubscribe',\n    params: 1\n  })].forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n  });\n};\n\nShh.prototype.clearSubscriptions = function () {\n  this._requestManager.clearSubscriptions();\n};\n\ncore.addProviders(Shh);\nmodule.exports = Shh;","map":{"version":3,"names":["core","require","Subscriptions","subscriptions","Method","Net","Shh","_this","packageInit","arguments","setProvider","apply","net","currentProvider","name","type","params","call","inputFormatter","forEach","method","attachToObject","setRequestManager","_requestManager","prototype","clearSubscriptions","addProviders","module","exports"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/truffle-interface-adapter/node_modules/web3-shh/src/index.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar core = require('web3-core');\r\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\r\nvar Method = require('web3-core-method');\r\n// var formatters = require('web3-core-helpers').formatters;\r\nvar Net = require('web3-net');\r\n\r\n\r\nvar Shh = function Shh() {\r\n    var _this = this;\r\n\r\n    // sets _requestmanager\r\n    core.packageInit(this, arguments);\r\n\r\n    // overwrite setProvider\r\n    var setProvider = this.setProvider;\r\n    this.setProvider = function () {\r\n        setProvider.apply(_this, arguments);\r\n        _this.net.setProvider.apply(_this, arguments);\r\n    };\r\n\r\n    this.net = new Net(this.currentProvider);\r\n\r\n    [\r\n        new Subscriptions({\r\n            name: 'subscribe',\r\n            type: 'shh',\r\n            subscriptions: {\r\n                'messages': {\r\n                    params: 1\r\n                    // inputFormatter: [formatters.inputPostFormatter],\r\n                    // outputFormatter: formatters.outputPostFormatter\r\n                }\r\n            }\r\n        }),\r\n\r\n        new Method({\r\n            name: 'getVersion',\r\n            call: 'shh_version',\r\n            params: 0\r\n        }),\r\n        new Method({\r\n            name: 'getInfo',\r\n            call: 'shh_info',\r\n            params: 0\r\n        }),\r\n        new Method({\r\n            name: 'setMaxMessageSize',\r\n            call: 'shh_setMaxMessageSize',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'setMinPoW',\r\n            call: 'shh_setMinPoW',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'markTrustedPeer',\r\n            call: 'shh_markTrustedPeer',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'newKeyPair',\r\n            call: 'shh_newKeyPair',\r\n            params: 0\r\n        }),\r\n        new Method({\r\n            name: 'addPrivateKey',\r\n            call: 'shh_addPrivateKey',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'deleteKeyPair',\r\n            call: 'shh_deleteKeyPair',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'hasKeyPair',\r\n            call: 'shh_hasKeyPair',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'getPublicKey',\r\n            call: 'shh_getPublicKey',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'getPrivateKey',\r\n            call: 'shh_getPrivateKey',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'newSymKey',\r\n            call: 'shh_newSymKey',\r\n            params: 0\r\n        }),\r\n        new Method({\r\n            name: 'addSymKey',\r\n            call: 'shh_addSymKey',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'generateSymKeyFromPassword',\r\n            call: 'shh_generateSymKeyFromPassword',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'hasSymKey',\r\n            call: 'shh_hasSymKey',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'getSymKey',\r\n            call: 'shh_getSymKey',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'deleteSymKey',\r\n            call: 'shh_deleteSymKey',\r\n            params: 1\r\n        }),\r\n\r\n        new Method({\r\n            name: 'newMessageFilter',\r\n            call: 'shh_newMessageFilter',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'getFilterMessages',\r\n            call: 'shh_getFilterMessages',\r\n            params: 1\r\n        }),\r\n        new Method({\r\n            name: 'deleteMessageFilter',\r\n            call: 'shh_deleteMessageFilter',\r\n            params: 1\r\n        }),\r\n\r\n        new Method({\r\n            name: 'post',\r\n            call: 'shh_post',\r\n            params: 1,\r\n            inputFormatter: [null]\r\n        }),\r\n\r\n        new Method({\r\n            name: 'unsubscribe',\r\n            call: 'shh_unsubscribe',\r\n            params: 1\r\n        })\r\n    ].forEach(function(method) {\r\n        method.attachToObject(_this);\r\n        method.setRequestManager(_this._requestManager);\r\n    });\r\n};\r\n\r\nShh.prototype.clearSubscriptions = function () {\r\n     this._requestManager.clearSubscriptions();\r\n};\r\n\r\ncore.addProviders(Shh);\r\n\r\n\r\n\r\nmodule.exports = Shh;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,yBAAD,CAAP,CAAmCE,aAAvD;;AACA,IAAIC,MAAM,GAAGH,OAAO,CAAC,kBAAD,CAApB,C,CACA;;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,UAAD,CAAjB;;AAGA,IAAIK,GAAG,GAAG,SAASA,GAAT,GAAe;EACrB,IAAIC,KAAK,GAAG,IAAZ,CADqB,CAGrB;;;EACAP,IAAI,CAACQ,WAAL,CAAiB,IAAjB,EAAuBC,SAAvB,EAJqB,CAMrB;;EACA,IAAIC,WAAW,GAAG,KAAKA,WAAvB;;EACA,KAAKA,WAAL,GAAmB,YAAY;IAC3BA,WAAW,CAACC,KAAZ,CAAkBJ,KAAlB,EAAyBE,SAAzB;;IACAF,KAAK,CAACK,GAAN,CAAUF,WAAV,CAAsBC,KAAtB,CAA4BJ,KAA5B,EAAmCE,SAAnC;EACH,CAHD;;EAKA,KAAKG,GAAL,GAAW,IAAIP,GAAJ,CAAQ,KAAKQ,eAAb,CAAX;EAEA,CACI,IAAIX,aAAJ,CAAkB;IACdY,IAAI,EAAE,WADQ;IAEdC,IAAI,EAAE,KAFQ;IAGdZ,aAAa,EAAE;MACX,YAAY;QACRa,MAAM,EAAE,CADA,CAER;QACA;;MAHQ;IADD;EAHD,CAAlB,CADJ,EAaI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,YADC;IAEPG,IAAI,EAAE,aAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAbJ,EAkBI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,SADC;IAEPG,IAAI,EAAE,UAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAlBJ,EAuBI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,mBADC;IAEPG,IAAI,EAAE,uBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAvBJ,EA4BI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,WADC;IAEPG,IAAI,EAAE,eAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA5BJ,EAiCI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,iBADC;IAEPG,IAAI,EAAE,qBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAjCJ,EAsCI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,YADC;IAEPG,IAAI,EAAE,gBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAtCJ,EA2CI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,eADC;IAEPG,IAAI,EAAE,mBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA3CJ,EAgDI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,eADC;IAEPG,IAAI,EAAE,mBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAhDJ,EAqDI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,YADC;IAEPG,IAAI,EAAE,gBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CArDJ,EA0DI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,cADC;IAEPG,IAAI,EAAE,kBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA1DJ,EA+DI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,eADC;IAEPG,IAAI,EAAE,mBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA/DJ,EAoEI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,WADC;IAEPG,IAAI,EAAE,eAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CApEJ,EAyEI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,WADC;IAEPG,IAAI,EAAE,eAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAzEJ,EA8EI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,4BADC;IAEPG,IAAI,EAAE,gCAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA9EJ,EAmFI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,WADC;IAEPG,IAAI,EAAE,eAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAnFJ,EAwFI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,WADC;IAEPG,IAAI,EAAE,eAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAxFJ,EA6FI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,cADC;IAEPG,IAAI,EAAE,kBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA7FJ,EAmGI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,kBADC;IAEPG,IAAI,EAAE,sBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAnGJ,EAwGI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,mBADC;IAEPG,IAAI,EAAE,uBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CAxGJ,EA6GI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,qBADC;IAEPG,IAAI,EAAE,yBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA7GJ,EAmHI,IAAIZ,MAAJ,CAAW;IACPU,IAAI,EAAE,MADC;IAEPG,IAAI,EAAE,UAFC;IAGPD,MAAM,EAAE,CAHD;IAIPE,cAAc,EAAE,CAAC,IAAD;EAJT,CAAX,CAnHJ,EA0HI,IAAId,MAAJ,CAAW;IACPU,IAAI,EAAE,aADC;IAEPG,IAAI,EAAE,iBAFC;IAGPD,MAAM,EAAE;EAHD,CAAX,CA1HJ,EA+HEG,OA/HF,CA+HU,UAASC,MAAT,EAAiB;IACvBA,MAAM,CAACC,cAAP,CAAsBd,KAAtB;IACAa,MAAM,CAACE,iBAAP,CAAyBf,KAAK,CAACgB,eAA/B;EACH,CAlID;AAmIH,CAlJD;;AAoJAjB,GAAG,CAACkB,SAAJ,CAAcC,kBAAd,GAAmC,YAAY;EAC1C,KAAKF,eAAL,CAAqBE,kBAArB;AACJ,CAFD;;AAIAzB,IAAI,CAAC0B,YAAL,CAAkBpB,GAAlB;AAIAqB,MAAM,CAACC,OAAP,GAAiBtB,GAAjB"},"metadata":{},"sourceType":"script"}
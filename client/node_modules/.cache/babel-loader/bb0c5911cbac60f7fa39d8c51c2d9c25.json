{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/\\uACF5\\uD504\\uAE30/Capstone test/SafetyManagement_UI/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport var NumberCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(NumberCoder, _Coder);\n\n  var _super = _createSuper(NumberCoder);\n\n  function NumberCoder(size, signed, localName) {\n    var _this;\n\n    _classCallCheck(this, NumberCoder);\n\n    var name = (signed ? \"int\" : \"uint\") + size * 8;\n    _this = _super.call(this, name, name, localName, false);\n    _this.size = size;\n    _this.signed = signed;\n    return _this;\n  }\n\n  _createClass(NumberCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return 0;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      var v = BigNumber.from(value); // Check bounds are safe for encoding\n\n      var maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n\n      if (this.signed) {\n        var bounds = maxUintValue.mask(this.size * 8 - 1);\n\n        if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n          this._throwError(\"value out-of-bounds\", value);\n        }\n      } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n\n      v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n      if (this.signed) {\n        v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n      }\n\n      return writer.writeValue(v);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      var value = reader.readValue().mask(this.size * 8);\n\n      if (this.signed) {\n        value = value.fromTwos(this.size * 8);\n      }\n\n      return reader.coerce(this.name, value);\n    }\n  }]);\n\n  return NumberCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/number.ts"],"names":[],"mappings":"AAAA;;;;;;AAEA,SAAS,SAAT,QAAwC,0BAAxC;AACA,SAAS,UAAT,EAAqB,WAArB,EAAkC,GAAlC,EAAuC,IAAvC,QAAmD,0BAAnD;AAEA,SAAS,KAAT,QAAsC,kBAAtC;AAEA,WAAa,WAAb;EAAA;;EAAA;;EAII,qBAAY,IAAZ,EAA0B,MAA1B,EAA2C,SAA3C,EAA4D;IAAA;;IAAA;;IACxD,IAAM,IAAI,GAAI,CAAC,MAAM,GAAG,KAAH,GAAU,MAAjB,IAA4B,IAAI,GAAG,CAAjD;IACA,0BAAM,IAAN,EAAY,IAAZ,EAAkB,SAAlB,EAA6B,KAA7B;IAEA,MAAK,IAAL,GAAY,IAAZ;IACA,MAAK,MAAL,GAAc,MAAd;IALwD;EAM3D;;EAVL;IAAA;IAAA,OAYI,wBAAY;MACR,OAAO,CAAP;IACH;EAdL;IAAA;IAAA,OAgBI,gBAAO,MAAP,EAAuB,KAAvB,EAA0C;MACtC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAV,CAAe,KAAf,CAAR,CADsC,CAGtC;;MACA,IAAI,YAAY,GAAG,UAAU,CAAC,IAAX,CAAgB,MAAM,CAAC,QAAP,GAAkB,CAAlC,CAAnB;;MACA,IAAI,KAAK,MAAT,EAAiB;QACb,IAAI,MAAM,GAAG,YAAY,CAAC,IAAb,CAAkB,KAAK,IAAL,GAAY,CAAZ,GAAgB,CAAlC,CAAb;;QACA,IAAI,CAAC,CAAC,EAAF,CAAK,MAAL,KAAgB,CAAC,CAAC,EAAF,CAAK,MAAM,CAAC,GAAP,CAAW,GAAX,EAAgB,GAAhB,CAAoB,WAApB,CAAL,CAApB,EAA4D;UACxD,KAAK,WAAL,CAAiB,qBAAjB,EAAwC,KAAxC;QACH;MACJ,CALD,MAKO,IAAI,CAAC,CAAC,EAAF,CAAK,IAAL,KAAc,CAAC,CAAC,EAAF,CAAK,YAAY,CAAC,IAAb,CAAkB,KAAK,IAAL,GAAY,CAA9B,CAAL,CAAlB,EAA0D;QAC7D,KAAK,WAAL,CAAiB,qBAAjB,EAAwC,KAAxC;MACH;;MAED,CAAC,GAAG,CAAC,CAAC,MAAF,CAAS,KAAK,IAAL,GAAY,CAArB,EAAwB,IAAxB,CAA6B,KAAK,IAAL,GAAY,CAAzC,CAAJ;;MAEA,IAAI,KAAK,MAAT,EAAiB;QACb,CAAC,GAAG,CAAC,CAAC,QAAF,CAAW,KAAK,IAAL,GAAY,CAAvB,EAA0B,MAA1B,CAAiC,IAAI,MAAM,CAAC,QAA5C,CAAJ;MACH;;MAED,OAAO,MAAM,CAAC,UAAP,CAAkB,CAAlB,CAAP;IACH;EArCL;IAAA;IAAA,OAuCI,gBAAO,MAAP,EAAqB;MACjB,IAAI,KAAK,GAAG,MAAM,CAAC,SAAP,GAAmB,IAAnB,CAAwB,KAAK,IAAL,GAAY,CAApC,CAAZ;;MAEA,IAAI,KAAK,MAAT,EAAiB;QACb,KAAK,GAAG,KAAK,CAAC,QAAN,CAAe,KAAK,IAAL,GAAY,CAA3B,CAAR;MACH;;MAED,OAAO,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,KAAzB,CAAP;IACH;EA/CL;;EAAA;AAAA,EAAiC,KAAjC","sourceRoot":"","sourcesContent":["\"use strict\";\r\nimport { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\r\nimport { Coder } from \"./abstract-coder\";\r\nexport class NumberCoder extends Coder {\r\n    constructor(size, signed, localName) {\r\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\r\n        super(name, name, localName, false);\r\n        this.size = size;\r\n        this.signed = signed;\r\n    }\r\n    defaultValue() {\r\n        return 0;\r\n    }\r\n    encode(writer, value) {\r\n        let v = BigNumber.from(value);\r\n        // Check bounds are safe for encoding\r\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\r\n        if (this.signed) {\r\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\r\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\r\n                this._throwError(\"value out-of-bounds\", value);\r\n            }\r\n        }\r\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\r\n            this._throwError(\"value out-of-bounds\", value);\r\n        }\r\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\r\n        if (this.signed) {\r\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\r\n        }\r\n        return writer.writeValue(v);\r\n    }\r\n    decode(reader) {\r\n        let value = reader.readValue().mask(this.size * 8);\r\n        if (this.signed) {\r\n            value = value.fromTwos(this.size * 8);\r\n        }\r\n        return reader.coerce(this.name, value);\r\n    }\r\n}\r\n//# sourceMappingURL=number.js.map"]},"metadata":{},"sourceType":"module"}
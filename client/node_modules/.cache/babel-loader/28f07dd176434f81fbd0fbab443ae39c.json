{"ast":null,"code":"\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","map":{"version":3,"names":["window","require","isFunction","parseHeaders","xtend","module","exports","createXHR","default","XMLHttpRequest","noop","XDomainRequest","forEachArray","method","uri","options","callback","initParams","toUpperCase","_createXHR","array","iterator","i","length","isEmpty","obj","hasOwnProperty","params","Error","called","cbOnce","err","response","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","e","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","headers","url","rawRequest","getAllResponseHeaders","cors","key","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/xhr/index.js"],"sourcesContent":["\"use strict\";\r\nvar window = require(\"global/window\")\r\nvar isFunction = require(\"is-function\")\r\nvar parseHeaders = require(\"parse-headers\")\r\nvar xtend = require(\"xtend\")\r\n\r\nmodule.exports = createXHR\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = createXHR;\r\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\r\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\r\n\r\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\r\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\r\n        options = initParams(uri, options, callback)\r\n        options.method = method.toUpperCase()\r\n        return _createXHR(options)\r\n    }\r\n})\r\n\r\nfunction forEachArray(array, iterator) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        iterator(array[i])\r\n    }\r\n}\r\n\r\nfunction isEmpty(obj){\r\n    for(var i in obj){\r\n        if(obj.hasOwnProperty(i)) return false\r\n    }\r\n    return true\r\n}\r\n\r\nfunction initParams(uri, options, callback) {\r\n    var params = uri\r\n\r\n    if (isFunction(options)) {\r\n        callback = options\r\n        if (typeof uri === \"string\") {\r\n            params = {uri:uri}\r\n        }\r\n    } else {\r\n        params = xtend(options, {uri: uri})\r\n    }\r\n\r\n    params.callback = callback\r\n    return params\r\n}\r\n\r\nfunction createXHR(uri, options, callback) {\r\n    options = initParams(uri, options, callback)\r\n    return _createXHR(options)\r\n}\r\n\r\nfunction _createXHR(options) {\r\n    if(typeof options.callback === \"undefined\"){\r\n        throw new Error(\"callback argument missing\")\r\n    }\r\n\r\n    var called = false\r\n    var callback = function cbOnce(err, response, body){\r\n        if(!called){\r\n            called = true\r\n            options.callback(err, response, body)\r\n        }\r\n    }\r\n\r\n    function readystatechange() {\r\n        if (xhr.readyState === 4) {\r\n            setTimeout(loadFunc, 0)\r\n        }\r\n    }\r\n\r\n    function getBody() {\r\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n        var body = undefined\r\n\r\n        if (xhr.response) {\r\n            body = xhr.response\r\n        } else {\r\n            body = xhr.responseText || getXml(xhr)\r\n        }\r\n\r\n        if (isJson) {\r\n            try {\r\n                body = JSON.parse(body)\r\n            } catch (e) {}\r\n        }\r\n\r\n        return body\r\n    }\r\n\r\n    function errorFunc(evt) {\r\n        clearTimeout(timeoutTimer)\r\n        if(!(evt instanceof Error)){\r\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\r\n        }\r\n        evt.statusCode = 0\r\n        return callback(evt, failureResponse)\r\n    }\r\n\r\n    // will load the data & process the response in a special response object\r\n    function loadFunc() {\r\n        if (aborted) return\r\n        var status\r\n        clearTimeout(timeoutTimer)\r\n        if(options.useXDR && xhr.status===undefined) {\r\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n            status = 200\r\n        } else {\r\n            status = (xhr.status === 1223 ? 204 : xhr.status)\r\n        }\r\n        var response = failureResponse\r\n        var err = null\r\n\r\n        if (status !== 0){\r\n            response = {\r\n                body: getBody(),\r\n                statusCode: status,\r\n                method: method,\r\n                headers: {},\r\n                url: uri,\r\n                rawRequest: xhr\r\n            }\r\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\r\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\r\n            }\r\n        } else {\r\n            err = new Error(\"Internal XMLHttpRequest Error\")\r\n        }\r\n        return callback(err, response, response.body)\r\n    }\r\n\r\n    var xhr = options.xhr || null\r\n\r\n    if (!xhr) {\r\n        if (options.cors || options.useXDR) {\r\n            xhr = new createXHR.XDomainRequest()\r\n        }else{\r\n            xhr = new createXHR.XMLHttpRequest()\r\n        }\r\n    }\r\n\r\n    var key\r\n    var aborted\r\n    var uri = xhr.url = options.uri || options.url\r\n    var method = xhr.method = options.method || \"GET\"\r\n    var body = options.body || options.data\r\n    var headers = xhr.headers = options.headers || {}\r\n    var sync = !!options.sync\r\n    var isJson = false\r\n    var timeoutTimer\r\n    var failureResponse = {\r\n        body: undefined,\r\n        headers: {},\r\n        statusCode: 0,\r\n        method: method,\r\n        url: uri,\r\n        rawRequest: xhr\r\n    }\r\n\r\n    if (\"json\" in options && options.json !== false) {\r\n        isJson = true\r\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\r\n        if (method !== \"GET\" && method !== \"HEAD\") {\r\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\r\n            body = JSON.stringify(options.json === true ? body : options.json)\r\n        }\r\n    }\r\n\r\n    xhr.onreadystatechange = readystatechange\r\n    xhr.onload = loadFunc\r\n    xhr.onerror = errorFunc\r\n    // IE9 must have onprogress be set to a unique function.\r\n    xhr.onprogress = function () {\r\n        // IE must die\r\n    }\r\n    xhr.onabort = function(){\r\n        aborted = true;\r\n    }\r\n    xhr.ontimeout = errorFunc\r\n    xhr.open(method, uri, !sync, options.username, options.password)\r\n    //has to be after open\r\n    if(!sync) {\r\n        xhr.withCredentials = !!options.withCredentials\r\n    }\r\n    // Cannot set timeout with sync request\r\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n    if (!sync && options.timeout > 0 ) {\r\n        timeoutTimer = setTimeout(function(){\r\n            if (aborted) return\r\n            aborted = true//IE9 may still call readystatechange\r\n            xhr.abort(\"timeout\")\r\n            var e = new Error(\"XMLHttpRequest timeout\")\r\n            e.code = \"ETIMEDOUT\"\r\n            errorFunc(e)\r\n        }, options.timeout )\r\n    }\r\n\r\n    if (xhr.setRequestHeader) {\r\n        for(key in headers){\r\n            if(headers.hasOwnProperty(key)){\r\n                xhr.setRequestHeader(key, headers[key])\r\n            }\r\n        }\r\n    } else if (options.headers && !isEmpty(options.headers)) {\r\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\r\n    }\r\n\r\n    if (\"responseType\" in options) {\r\n        xhr.responseType = options.responseType\r\n    }\r\n\r\n    if (\"beforeSend\" in options &&\r\n        typeof options.beforeSend === \"function\"\r\n    ) {\r\n        options.beforeSend(xhr)\r\n    }\r\n\r\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n    // XMLHttpRequest spec says to pass null as body to indicate no body\r\n    // See https://github.com/naugtur/xhr/issues/100.\r\n    xhr.send(body || null)\r\n\r\n    return xhr\r\n\r\n\r\n}\r\n\r\nfunction getXml(xhr) {\r\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\r\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\r\n    try {\r\n        if (xhr.responseType === \"document\") {\r\n            return xhr.responseXML\r\n        }\r\n        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\r\n        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n            return xhr.responseXML\r\n        }\r\n    } catch (e) {}\r\n\r\n    return null\r\n}\r\n\r\nfunction noop() {}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
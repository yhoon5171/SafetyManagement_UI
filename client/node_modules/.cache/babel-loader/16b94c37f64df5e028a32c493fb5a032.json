{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\n\nvar buffer_1 = require(\"buffer\");\n\nvar externals_1 = require(\"./externals\");\n/**\r\n * 2^64-1\r\n */\n\n\nexports.MAX_UINT64 = new externals_1.BN('ffffffffffffffff', 16);\n/**\r\n * The max integer that the evm can handle (2^256-1)\r\n */\n\nexports.MAX_INTEGER = new externals_1.BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\r\n * 2^256\r\n */\n\nexports.TWO_POW256 = new externals_1.BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\r\n * Keccak-256 hash of null\r\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\r\n * Keccak-256 hash of null\r\n */\n\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\r\n * Keccak-256 of an RLP of an empty array\r\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\r\n * Keccak-256 of an RLP of an empty array\r\n */\n\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\r\n * Keccak-256 hash of the RLP of null\r\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\r\n * Keccak-256 hash of the RLP of null\r\n */\n\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');","map":{"version":3,"sources":["../src/constants.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA;;AAEG;;;AACU,OAAA,CAAA,UAAA,GAAa,IAAI,WAAA,CAAA,EAAJ,CAAO,kBAAP,EAA2B,EAA3B,CAAb;AAEb;;AAEG;;AACU,OAAA,CAAA,WAAA,GAAc,IAAI,WAAA,CAAA,EAAJ,CACzB,kEADyB,EAEzB,EAFyB,CAAd;AAKb;;AAEG;;AACU,OAAA,CAAA,UAAA,GAAa,IAAI,WAAA,CAAA,EAAJ,CACxB,mEADwB,EAExB,EAFwB,CAAb;AAKb;;AAEG;;AACU,OAAA,CAAA,gBAAA,GAAmB,kEAAnB;AAEb;;AAEG;;AACU,OAAA,CAAA,cAAA,GAAiB,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,OAAA,CAAA,gBAAZ,EAA8B,KAA9B,CAAjB;AAEb;;AAEG;;AACU,OAAA,CAAA,qBAAA,GACX,kEADW;AAGb;;AAEG;;AACU,OAAA,CAAA,mBAAA,GAAsB,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,OAAA,CAAA,qBAAZ,EAAmC,KAAnC,CAAtB;AAEb;;AAEG;;AACU,OAAA,CAAA,eAAA,GAAkB,kEAAlB;AAEb;;AAEG;;AACU,OAAA,CAAA,aAAA,GAAgB,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,OAAA,CAAA,eAAZ,EAA6B,KAA7B,CAAhB","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\r\nvar buffer_1 = require(\"buffer\");\r\nvar externals_1 = require(\"./externals\");\r\n/**\r\n * 2^64-1\r\n */\r\nexports.MAX_UINT64 = new externals_1.BN('ffffffffffffffff', 16);\r\n/**\r\n * The max integer that the evm can handle (2^256-1)\r\n */\r\nexports.MAX_INTEGER = new externals_1.BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\r\n/**\r\n * 2^256\r\n */\r\nexports.TWO_POW256 = new externals_1.BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\r\n/**\r\n * Keccak-256 hash of null\r\n */\r\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\r\n/**\r\n * Keccak-256 hash of null\r\n */\r\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\r\n/**\r\n * Keccak-256 of an RLP of an empty array\r\n */\r\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\r\n/**\r\n * Keccak-256 of an RLP of an empty array\r\n */\r\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\r\n/**\r\n * Keccak-256 hash of the RLP of null\r\n */\r\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\r\n/**\r\n * Keccak-256 hash of the RLP of null\r\n */\r\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\r\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"script"}
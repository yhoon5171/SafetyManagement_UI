{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createSet = configure.configure(api => {\n  const set = async function (key, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n\n    const params = { ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n\n  return set;\n});\n\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return {\n        arg: [key, value.toString()],\n        bool: true\n      };\n\n    case 'string':\n      return {\n        arg: [key, value]\n      };\n\n    default:\n      return {\n        arg: [key, JSON.stringify(value)],\n        json: true\n      };\n  }\n};\n\nexports.createSet = createSet;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createSet","api","set","key","options","Error","params","encodeParam","res","post","signal","searchParams","headers","text","arg","toString","bool","JSON","stringify","json"],"sources":["D:/공프기/Capstone test/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/config/set.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar configure = require('../lib/configure.js');\r\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\r\n\r\nconst createSet = configure.configure(api => {\r\n  const set = async (key, value, options = {}) => {\r\n    if (typeof key !== 'string') {\r\n      throw new Error('Invalid key type');\r\n    }\r\n    const params = {\r\n      ...options,\r\n      ...encodeParam(key, value)\r\n    };\r\n    const res = await api.post('config', {\r\n      signal: options.signal,\r\n      searchParams: toUrlSearchParams.toUrlSearchParams(params),\r\n      headers: options.headers\r\n    });\r\n    await res.text();\r\n  };\r\n  return set;\r\n});\r\nconst encodeParam = (key, value) => {\r\n  switch (typeof value) {\r\n  case 'boolean':\r\n    return {\r\n      arg: [\r\n        key,\r\n        value.toString()\r\n      ],\r\n      bool: true\r\n    };\r\n  case 'string':\r\n    return {\r\n      arg: [\r\n        key,\r\n        value\r\n      ]\r\n    };\r\n  default:\r\n    return {\r\n      arg: [\r\n        key,\r\n        JSON.stringify(value)\r\n      ],\r\n      json: true\r\n    };\r\n  }\r\n};\r\n\r\nexports.createSet = createSet;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAME,SAAS,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;EAC3C,MAAMC,GAAG,GAAG,gBAAOC,GAAP,EAAYP,KAAZ,EAAoC;IAAA,IAAjBQ,OAAiB,uEAAP,EAAO;;IAC9C,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;MAC3B,MAAM,IAAIE,KAAJ,CAAU,kBAAV,CAAN;IACD;;IACD,MAAMC,MAAM,GAAG,EACb,GAAGF,OADU;MAEb,GAAGG,WAAW,CAACJ,GAAD,EAAMP,KAAN;IAFD,CAAf;IAIA,MAAMY,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,QAAT,EAAmB;MACnCC,MAAM,EAAEN,OAAO,CAACM,MADmB;MAEnCC,YAAY,EAAEZ,iBAAiB,CAACA,iBAAlB,CAAoCO,MAApC,CAFqB;MAGnCM,OAAO,EAAER,OAAO,CAACQ;IAHkB,CAAnB,CAAlB;IAKA,MAAMJ,GAAG,CAACK,IAAJ,EAAN;EACD,CAdD;;EAeA,OAAOX,GAAP;AACD,CAjBiB,CAAlB;;AAkBA,MAAMK,WAAW,GAAG,CAACJ,GAAD,EAAMP,KAAN,KAAgB;EAClC,QAAQ,OAAOA,KAAf;IACA,KAAK,SAAL;MACE,OAAO;QACLkB,GAAG,EAAE,CACHX,GADG,EAEHP,KAAK,CAACmB,QAAN,EAFG,CADA;QAKLC,IAAI,EAAE;MALD,CAAP;;IAOF,KAAK,QAAL;MACE,OAAO;QACLF,GAAG,EAAE,CACHX,GADG,EAEHP,KAFG;MADA,CAAP;;IAMF;MACE,OAAO;QACLkB,GAAG,EAAE,CACHX,GADG,EAEHc,IAAI,CAACC,SAAL,CAAetB,KAAf,CAFG,CADA;QAKLuB,IAAI,EAAE;MALD,CAAP;EAjBF;AAyBD,CA1BD;;AA4BAxB,OAAO,CAACK,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}
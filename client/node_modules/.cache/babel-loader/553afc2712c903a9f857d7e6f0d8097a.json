{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createFlush = configure.configure(api => {\n  async function flush(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path');\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return cid.CID.parse(data.Cid);\n  }\n\n  return flush;\n});\nexports.createFlush = createFlush;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createFlush","api","flush","path","options","Error","res","post","signal","searchParams","arg","headers","data","json","CID","parse","Cid"],"sources":["C:/Users/Runner/Desktop/test1/SafetyManagement_UI/client/node_modules/ipfs-http-client/cjs/src/files/flush.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar cid = require('multiformats/cid');\r\nvar configure = require('../lib/configure.js');\r\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\r\n\r\nconst createFlush = configure.configure(api => {\r\n  async function flush(path, options = {}) {\r\n    if (!path || typeof path !== 'string') {\r\n      throw new Error('ipfs.files.flush requires a path');\r\n    }\r\n    const res = await api.post('files/flush', {\r\n      signal: options.signal,\r\n      searchParams: toUrlSearchParams.toUrlSearchParams({\r\n        arg: path,\r\n        ...options\r\n      }),\r\n      headers: options.headers\r\n    });\r\n    const data = await res.json();\r\n    return cid.CID.parse(data.Cid);\r\n  }\r\n  return flush;\r\n});\r\n\r\nexports.createFlush = createFlush;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAMG,WAAW,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;EAC7C,eAAeC,KAAf,CAAqBC,IAArB,EAAyC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IACvC,IAAI,CAACD,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;MACrC,MAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;IACD;;IACD,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwB;MACxCC,MAAM,EAAEJ,OAAO,CAACI,MADwB;MAExCC,YAAY,EAAEV,iBAAiB,CAACA,iBAAlB,CAAoC;QAChDW,GAAG,EAAEP,IAD2C;QAEhD,GAAGC;MAF6C,CAApC,CAF0B;MAMxCO,OAAO,EAAEP,OAAO,CAACO;IANuB,CAAxB,CAAlB;IAQA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;IACA,OAAOjB,GAAG,CAACkB,GAAJ,CAAQC,KAAR,CAAcH,IAAI,CAACI,GAAnB,CAAP;EACD;;EACD,OAAOd,KAAP;AACD,CAjBmB,CAApB;AAmBAR,OAAO,CAACM,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}
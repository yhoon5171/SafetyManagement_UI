{"ast":null,"code":"import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n\n  return keccak256(concat([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));\n}","map":{"version":3,"sources":["../src.ts/message.ts"],"names":[],"mappings":"AAAA,SAAgB,MAAhB,QAA8B,sBAA9B;AACA,SAAS,SAAT,QAA0B,0BAA1B;AACA,SAAS,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAM,aAAa,GAAG,gCAAtB;AAEP,OAAM,SAAU,WAAV,CAAsB,OAAtB,EAA6C;EAC/C,IAAI,OAAO,OAAP,KAAoB,QAAxB,EAAkC;IAAE,OAAO,GAAG,WAAW,CAAC,OAAD,CAArB;EAAiC;;EACrE,OAAO,SAAS,CAAC,MAAM,CAAC,CACpB,WAAW,CAAC,aAAD,CADS,EAEpB,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAT,CAAP,CAFS,EAGpB,OAHoB,CAAD,CAAP,CAAhB;AAKH","sourceRoot":"","sourcesContent":["import { concat } from \"@ethersproject/bytes\";\r\nimport { keccak256 } from \"@ethersproject/keccak256\";\r\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\r\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\r\nexport function hashMessage(message) {\r\n    if (typeof (message) === \"string\") {\r\n        message = toUtf8Bytes(message);\r\n    }\r\n    return keccak256(concat([\r\n        toUtf8Bytes(messagePrefix),\r\n        toUtf8Bytes(String(message.length)),\r\n        message\r\n    ]));\r\n}\r\n//# sourceMappingURL=message.js.map"]},"metadata":{},"sourceType":"module"}
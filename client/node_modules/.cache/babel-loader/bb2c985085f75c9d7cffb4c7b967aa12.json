{"ast":null,"code":"'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","map":{"version":3,"names":["randomFromSeed","require","ORIGINAL","alphabet","previousSeed","shuffled","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","shuffle","sourceArray","targetArray","r","nextValue","characterIndex","Math","floor","push","splice","getShuffled","lookup","index","alphabetShuffled","get","module","exports"],"sources":["C:/Users/mcnl/Desktop/gong/test/SafetyManagement_UI/client/node_modules/shortid/lib/alphabet.js"],"sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
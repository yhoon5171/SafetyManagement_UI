[{"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\index.js":"1","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\blockchain\\connection.js":"2","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\FirstPage.js":"3","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\App.jsx":"4","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Login.js":"5","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\SignUp.js":"6","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Ray.js":"7","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\All.js":"8","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Temp.js":"9","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\CCTV.js":"10","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Pressure.js":"11","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\CheckList.js":"12","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Documents.js":"13","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\WriteTransaction.js":"14","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\MainSidebar.js":"15","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\MainNavbar.js":"16","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainFooter.js":"17","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pagination.js":"18","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\Editor.js":"19","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\common\\PageTitle.js":"20","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarMainNavbar.js":"21","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarSearch.js":"22","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItems.js":"23","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarSearch.js":"24","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarToggle.js":"25","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\NavbarNav.js":"26","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\index.js":"27","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItem.js":"28","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\elements\\CompleteFormExample.js":"29","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\Notifications.js":"30","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\UserActions.js":"31","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\dispatcher.js":"32","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\constants.js":"33","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\store.js":"34","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\data\\sidebar-nav-items.js":"35"},{"size":1471,"mtime":1660097185758,"results":"36","hashOfConfig":"37"},{"size":7204,"mtime":1660110511786,"results":"38","hashOfConfig":"37"},{"size":2738,"mtime":1660097185748,"results":"39","hashOfConfig":"37"},{"size":9023,"mtime":1660097185726,"results":"40","hashOfConfig":"37"},{"size":3945,"mtime":1660110471450,"results":"41","hashOfConfig":"37"},{"size":3990,"mtime":1660110480697,"results":"42","hashOfConfig":"37"},{"size":950,"mtime":1660097185750,"results":"43","hashOfConfig":"37"},{"size":9230,"mtime":1660108384944,"results":"44","hashOfConfig":"37"},{"size":155,"mtime":1660097185750,"results":"45","hashOfConfig":"37"},{"size":2818,"mtime":1660097185747,"results":"46","hashOfConfig":"37"},{"size":160,"mtime":1660097185749,"results":"47","hashOfConfig":"37"},{"size":9195,"mtime":1660108384946,"results":"48","hashOfConfig":"37"},{"size":9200,"mtime":1660108384947,"results":"49","hashOfConfig":"37"},{"size":766,"mtime":1660097185751,"results":"50","hashOfConfig":"37"},{"size":2008,"mtime":1660097185744,"results":"51","hashOfConfig":"37"},{"size":1088,"mtime":1660097185742,"results":"52","hashOfConfig":"37"},{"size":1434,"mtime":1660097185741,"results":"53","hashOfConfig":"37"},{"size":1577,"mtime":1660097185751,"results":"54","hashOfConfig":"37"},{"size":559,"mtime":1660097185733,"results":"55","hashOfConfig":"37"},{"size":724,"mtime":1660097185737,"results":"56","hashOfConfig":"37"},{"size":1947,"mtime":1660097185745,"results":"57","hashOfConfig":"37"},{"size":701,"mtime":1660097185746,"results":"58","hashOfConfig":"37"},{"size":1004,"mtime":1660097185746,"results":"59","hashOfConfig":"37"},{"size":629,"mtime":1660097185743,"results":"60","hashOfConfig":"37"},{"size":742,"mtime":1660097185744,"results":"61","hashOfConfig":"37"},{"size":296,"mtime":1660097185742,"results":"62","hashOfConfig":"37"},{"size":162,"mtime":1660097185740,"results":"63","hashOfConfig":"37"},{"size":864,"mtime":1660097185745,"results":"64","hashOfConfig":"37"},{"size":6238,"mtime":1660097185739,"results":"65","hashOfConfig":"37"},{"size":2475,"mtime":1660097185743,"results":"66","hashOfConfig":"37"},{"size":1505,"mtime":1660108384943,"results":"67","hashOfConfig":"37"},{"size":72,"mtime":1660097185740,"results":"68","hashOfConfig":"37"},{"size":79,"mtime":1660097185739,"results":"69","hashOfConfig":"37"},{"size":1153,"mtime":1660097185740,"results":"70","hashOfConfig":"37"},{"size":968,"mtime":1660097185738,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"46w0oy",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\index.js",["161","162","163","164"],"// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import Connection from './blockchain/connection';\r\n// import {BrowserRouter as Router} from 'react-router-dom';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <Router>\r\n//     <Connection />\r\n//   </Router>\r\n// );\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import Connection from './blockchain/connection';\r\n// import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n// import FirstPage from './components/pages/FirstPage';\r\n// import All from './components/pages/All';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <Router>\r\n//     <Routes>\r\n//         <Route exact path=\"/\" element={<FirstPage />} />\r\n//         <Route path=\"/connect\" element={<Connection />} />\r\n//     </Routes>\r\n//   </Router>\r\n// );\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport Connection from './blockchain/connection';\r\nimport FirstPage from './components/pages/FirstPage';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Router>\r\n    <FirstPage />\r\n  </Router>\r\n);","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\blockchain\\connection.js",["165","166","167","168","169","170","171","172"],"import React, { useEffect, useState, useRef } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\nimport TransactionContract from \"../contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\nimport App from '../App.jsx';\r\n\r\n\r\n\r\nexport default function Connection() {\r\n  // const [fileUrl, setFileUrl] = useState(\"\");\r\n  // const [web3, setWeb3] = useState(\"\");\r\n  // const [account, setAccount] = useState(\"\");\r\n  // const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  // const [category, setCategory] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  // const [registrant, setRegsitrant] = useState(\"\");\r\n  // const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  // const [fileType, setFileType] = useState(\"\");\r\n  // const [fileDescription, setFileDescription] = useState(\"\");\r\n  // const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  // const [time, setTime] = useState(\"\");\r\n  // const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  // const [category_, setCategory_] = useState(\"\");\r\n  // const [name_, setName_] = useState(\"\");\r\n  // const [registrant_, setRegsitrant_] = useState(\"\");\r\n  // const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  // const [fileType_, setFileType_] = useState(\"\");\r\n  // const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n  // const submitReview = ()=>{\r\n  //   Axios.post('http://localhost:3001/api/insert', {\r\n  //     category: category,\r\n  //     name: name,\r\n  //     time: time,\r\n  //     ipfsHash: ipfsHash,\r\n  //     registrant: registrant,\r\n  //     responsible: responsibleManager,\r\n  //     filetype: fileType,\r\n  //     filedes: fileDescription\r\n  //   }).then(()=>{\r\n  //     alert('등록 완료!');\r\n  //   })\r\n  // };\r\n\r\n\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const [block_list, setblock_list] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com::8545'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            let temp = 0;\r\n            if(sessionStorage.getItem('company') == 'SDS') temp = 0;\r\n            else if(sessionStorage.getItem('company') == 'KLL') temp = 1;\r\n            else if(sessionStorage.getItem('company') == 'KOR') temp = 2;\r\n            else if(sessionStorage.getItem('company') == 'LOS') temp = 3;\r\n            setAccount(accounts[temp]);\r\n            setLoading(true);\r\n          })\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillMount();    \r\n\r\n  }, []);\r\n\r\n  const nextId = useRef(1);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      \r\n\r\n\r\n      for(let i = 0; i < events.length; i += 1){\r\n        \r\n        var time_ = moment.unix(events[i].returnValues.time);\r\n        \r\n        block_list.push({\r\n          id: nextId.current,\r\n          category : events[i].returnValues.category.toString(),\r\n          name : events[i].returnValues.name.toString(),\r\n          time : time_.toString(), \r\n          ipfsHash : events[i].returnValues.ipfs_hash.toString(),\r\n          registrant : events[i].returnValues.registrant.toString(),\r\n          responsible : events[i].returnValues.responsible_manager.toString(),\r\n          filetype : events[i].returnValues.file_type.toString(),\r\n          filedes : events[i].returnValues.file_description.toString()\r\n        }\r\n        )\r\n        \r\n        nextId.current += 1;\r\n\r\n        console.log(events[i].returnValues);\r\n      }\r\n      console.log('events.length = ', events.length);\r\n      console.log(events);\r\n      console.log('block_list = ', block_list);\r\n      console.log(account);\r\n  \r\n    }\r\n\r\n    if (loading == true) updateAllTransactions();\r\n\r\n}, [loading]);\r\n\r\n\r\n\r\n  // const sendTransaction = async (e) => {\r\n  //   console.log(web3);\r\n  //   console.log(account);\r\n  //   console.log(transactionInstance);\r\n  //   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n  //     from: account,\r\n  //     //value: e.web3.utils.toWei('10', \"ether\"),\r\n  //     gas: 1000000\r\n  //   })\r\n    \r\n  //   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n  //   console.log(events[events.length-1].transactionHash)\r\n  //   //this.updateAllTransactions();\r\n\r\n  //   submitReview();\r\n  // }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Login />\r\n      <Signup />\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      {/* <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button> *//*}\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p> */}\r\n      <App block_list={block_list} transactionInstance={transactionInstance} account={account}/>\r\n    </div>\r\n  )\r\n}","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\FirstPage.js",["173","174","175","176","177","178"],"// import React from 'react'\r\n// import '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n// import '../../App.css'\r\n// import { Routes, Route, Link } from 'react-router-dom'\r\n\r\n// import Login from './Login'\r\n// import SignUp from './SignUp'\r\n// import MainNavbar from '../layout/MainNavbar/MainNavbar'\r\n// import Connection from '../../blockchain/connection'\r\n\r\n// export default function FirstPage() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//     <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n//         <div className=\"container\">\r\n//         {<MainNavbar />}\r\n//         <Link className=\"navbar-brand\" to={'/sign-in'}>\r\n//             positronX\r\n//         </Link>\r\n//         <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n//             <ul className=\"navbar-nav ml-auto\">\r\n//             <li className=\"nav-item\">\r\n//                 <Link className=\"nav-link\" to={'/sign-in'}>\r\n//                 Login\r\n//                 </Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//                 <Link className=\"nav-link\" to={'/sign-up'}>\r\n//                 Sign up\r\n//                 </Link>\r\n//             </li>\r\n//             </ul>\r\n//         </div>\r\n//         </div>\r\n//     </nav>\r\n\r\n//     <div className=\"auth-wrapper\">\r\n//         <div className=\"auth-inner\">\r\n//         <Routes>\r\n//             <Route exact path=\"/\" element={<Login />} />\r\n//             <Route path=\"/sign-in\" element={<Login />} />\r\n//             <Route path=\"/sign-up\" element={<SignUp />} />\r\n//         </Routes>\r\n//         </div>\r\n//     </div>\r\n//     </div>\r\n//   )\r\n// };\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport '../../App.css'\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\n\r\nimport Login from './Login'\r\nimport SignUp from './SignUp'\r\nimport Connection from '../../blockchain/connection';\r\n\r\nexport default function FirstPage() {\r\n   // 로그인 상태 관리\r\n   const [isLogin, setIsLogin] = useState(false)\r\n \r\n   useEffect(() => {\r\n     if(sessionStorage.getItem('user_id') === null){\r\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\r\n       console.log('isLogin ?? :: ', isLogin)\r\n     } else {\r\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\r\n     // 로그인 상태 변경\r\n       setIsLogin(true)\r\n       console.log('isLogin ?? :: ', isLogin)\r\n     }\r\n   })\r\n\r\n  return (\r\n    \r\n    <div>\r\n\r\n        {isLogin ? \r\n      \t// Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\r\n        <Connection/> : \r\n        <Login />}\r\n    </div>\r\n  )\r\n};","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\App.jsx",["179","180","181","182","183","184"],"// import React, { useEffect, useState } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\n// import \"./App.css\";\r\n// import TransactionContract from \"../src/contracts/Transaction.json\"\r\n// import Web3 from 'web3';\r\n// import moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\n\r\n\r\n\r\n// export default function App() {\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n//   const [web3, setWeb3] = useState(\"\");\r\n//   const [account, setAccount] = useState(\"\");\r\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\r\n//   const [registrant, setRegsitrant] = useState(\"\");\r\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n//   const [fileType, setFileType] = useState(\"\");\r\n//   const [fileDescription, setFileDescription] = useState(\"\");\r\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n//   const [time, setTime] = useState(\"\");\r\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n//   const [category_, setCategory_] = useState(\"\");\r\n//   const [name_, setName_] = useState(\"\");\r\n//   const [registrant_, setRegsitrant_] = useState(\"\");\r\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n//   const [fileType_, setFileType_] = useState(\"\");\r\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n//   const submitReview = ()=>{\r\n//     Axios.post('http://localhost:3001/api/insert', {\r\n//       category: category,\r\n//       name: name,\r\n//       time: time,\r\n//       ipfsHash: ipfsHash,\r\n//       registrant: registrant,\r\n//       responsible: responsibleManager,\r\n//       filetype: fileType,\r\n//       filedes: fileDescription\r\n//     }).then(()=>{\r\n//       alert('등록 완료!');\r\n//     })\r\n//   };\r\n\r\n\r\n//   useEffect(() => {\r\n//     async function componentWillMount(e) {\r\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n//       setWeb3(web3);\r\n//       console.log(web3)\r\n//       const contract = require(\"truffle-contract\");\r\n//       const transaction = contract(TransactionContract);\r\n//       console.log(web3);\r\n//       transaction.setProvider(web3.currentProvider);\r\n  \r\n//       web3.eth.getAccounts((error, accounts) => {\r\n//         if (!error){\r\n//           transaction.deployed().then(instance => {\r\n//             setTransactionInstance(instance);\r\n//             setAccount(accounts[0]);\r\n//             setLoading(true);\r\n//           })\r\n//         }\r\n//       })\r\n      \r\n//     }\r\n\r\n//     componentWillMount();\r\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\r\n//     // updateAllTransactions();\r\n\r\n    \r\n\r\n//   }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     async function updateAllTransactions(e){\r\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n//       for(let i=0; i<events.length; i+=1){\r\n//         const record = {};\r\n//         var time_ = moment.unix(events[i].returnValues.time);\r\n\r\n//         setCategory_(events[i].returnValues.category.toString());\r\n//         setName_(events[i].returnValues.name.toString());\r\n//         setTime(time_.toString());\r\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\r\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\r\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\r\n//         setFileType_(events[i].returnValues.file_type.toString());\r\n//         setFileDescription_(events[i].returnValues.file_description.toString());\r\n//         setTransactionCnt(transactionInstance.cntTransactions());\r\n//         console.log(events[i].returnValues);\r\n//       }\r\n//       console.log(events.length);\r\n//       console.log(events);\r\n  \r\n//     }\r\n\r\n//     if (loading == true) updateAllTransactions();\r\n\r\n// }, [loading]);\r\n\r\n\r\n//   const sendTransaction = async (e) => {\r\n//     console.log(web3);\r\n//     console.log(account);\r\n//     console.log(transactionInstance);\r\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n//       from: account,\r\n//       //value: e.web3.utils.toWei('10', \"ether\"),\r\n//       gas: 1000000\r\n//     })\r\n    \r\n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n//     console.log(events[events.length-1].transactionHash)\r\n//     //this.updateAllTransactions();\r\n\r\n//     submitReview();\r\n//   }\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <Login />\r\n//       <Signup />\r\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n//       <br></br>\r\n      \r\n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n//       FileUrl :{\" \"}\r\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//         {fileUrl}\r\n//       </a>\r\n//       <br></br>\r\n\r\n//       <p>Your account: {account}</p>\r\n//       <br></br>\r\n\r\n//       <button onClick={sendTransaction}>\r\n//         트랜잭션 추가\r\n//       </button>\r\n//       {/* <button onClick={updateAllTransactions}>\r\n//         트랜잭션 보여주기\r\n//       </button> */}\r\n//       <br></br>\r\n\r\n//       <p>all transactions:</p>\r\n//       <br></br>\r\n//       <p>Category: {category_}</p>\r\n//       <p>File Name: {name_}</p>\r\n//       <p>Time: {time}</p>\r\n//       <p>IPFS Hash: {ipfsHash_}</p>\r\n//       <p>Registrant: {registrant_}</p>\r\n//       <p>Responsible Manager: {responsibleManager_}</p>\r\n//       <p>File Type: {fileType_}</p>\r\n//       <p>File Description: {fileDescription_}</p>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { Route, Routes,  Navigate } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nimport Ray from \"./components/pages/Ray\";\r\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\r\nimport CCTV from \"./components/pages/CCTV\";\r\nimport All from \"./components/pages/All\";\r\nimport Pressure from \"./components/pages/Pressure\";\r\nimport Temp from \"./components/pages/Temp\";\r\nimport CheckList from \"./components/pages/CheckList\";\r\nimport Documents from \"./components/pages/Documents\";\r\n\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\r\nimport MainFooter from \"./components/layout/MainFooter\";\r\n\r\nimport WriteTransaction from \"./components/pages/WriteTransaction\"\r\n\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n\r\nexport default function App({block_list, transactionInstance, account}) {\r\n  \r\n  console.log(\"App!!!\")\r\n\r\n  return(\r\n      <Container fluid>\r\n        <Row>\r\n          <MainSidebar/>\r\n          <Col\r\n            className=\"main-content p-0\"\r\n            lg={{ size: 10, offset: 2 }}\r\n            md={{ size: 9, offset: 3 }}\r\n            sm=\"12\"\r\n            tag=\"main\"\r\n          >\r\n            {<MainNavbar />}\r\n            <Routes>\r\n              <Route path=\"/\" element={<Navigate to=\"/all\"/>} />\r\n              <Route path=\"/all\" element={<All transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/cctv\" element={<CCTV/>} />\r\n              <Route path=\"/documents\" element={<Documents transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/checklist\" element={<CheckList transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/temp\" element={<Temp/>} />\r\n              <Route path=\"/pressure\" element={<Pressure/>} />\r\n              <Route path=\"/ray\" element={<Ray/>} />\r\n              <Route path=\"/writetransaction\" element={<WriteTransaction transactionInstance={transactionInstance} account={account} />}/>\r\n            </Routes>\r\n            <br></br><br></br>\r\n            {<MainFooter />}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n  )\r\n};","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Login.js",["185","186","187","188","189","190","191","192"],"import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport Connection from '../../blockchain/connection'\r\n\r\nimport \"../../\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport Axios from 'axios';\r\nimport SignUp from './SignUp'\r\n\r\nexport default function Login()  {\r\n    const [inputId, setinputId] = useState(\"\")\r\n    const [inputPw, setinputPw] = useState(\"\")\r\n    const [signup, setsignup] = useState(false)\r\n\r\n    let navigate = useNavigate();\r\n    const routeChange = () => {\r\n        let path = '/connect';\r\n        navigate(path);\r\n    }\r\n\r\n\r\n    const onClickLogin = () => {\r\n        Axios.post('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com:3001/onLogin', null, {\r\n            params: {\r\n            'user_id': inputId,\r\n            'user_pw': inputPw\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.msg)\r\n                alert(res.data.msg);\r\n            else{\r\n                sessionStorage.setItem('user_id', inputId)\r\n                sessionStorage.setItem('company', res.data.company)\r\n            }\r\n            document.location.href = '/'\r\n        })\r\n        .catch()\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"App\">\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <div className=\"auth-wrapper\">\r\n        &nbsp;&nbsp;&nbsp;\r\n        <div className=\"auth-inner\">\r\n        <Link to={'/'} style ={{textDecoration: \"none\"}}>\r\n        <h2 style ={{ \r\n                        fontWeight: \"bold\"\r\n                        }}>&nbsp;&nbsp;&nbsp;Safety Management</h2>\r\n        </Link>\r\n        <br></br>\r\n        {\r\n            signup ? <SignUp />\r\n            : \r\n            <div>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                    <Col>\r\n                        <form>\r\n                            <FormGroup>\r\n                                <FormInput id=\"feInputAddress\" size=\"lg\" placeholder=\"아이디\" onChange = {(event) => setinputId(event.target.value)}/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <FormInput\r\n                                type='password'\r\n                                id=\"feInputAddress2\"\r\n                                size=\"lg\"\r\n                                placeholder=\"비밀번호\"\r\n                                onChange = {(event) => setinputPw(event.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <br></br>\r\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>로그인</Button>\r\n                            \r\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" outline onClick={(event) => setsignup(true)}>\r\n                                회원가입\r\n                            </Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n        {/* <div className=\"login\">\r\n            <Button onClick={(event) => setsignup(true)}>\r\n                <p stlye ={{  left: \"50%\",\r\n                                top: \"69%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                position: \"absolute\",\r\n                                color: \"#5a6169\"}}>회원가입</p>\r\n            </Button>\r\n        </div> */}\r\n        </div>\r\n        }\r\n        \r\n      </div>\r\n      &nbsp;&nbsp;&nbsp;\r\n      </div>\r\n      </div>\r\n    )\r\n}","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\SignUp.js",["193","194","195","196","197","198","199","200"],"import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport Connection from '../../blockchain/connection'\r\n\r\nimport \"../../\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport Axios from 'axios';\r\n\r\nexport default function SignUp()  {\r\n  const [CompanySelect, setCompanySelect] = useState(\"\")\r\n  const [ID, setID] = useState(\"\")\r\n  const [Password, setPassword] = useState(\"\")\r\n  const [Password2, setPassword2] = useState(\"\")\r\n  const [Name, setName] = useState(\"\")\r\n  const [Email, setEmail] = useState(\"\")\r\n\r\n  const Company_select = (e) => {\r\n    setCompanySelect(e.target.value);\r\n    console.log(CompanySelect);\r\n  };\r\n\r\n  \r\n\r\n  const onClickLogin = () => {\r\n    Axios.post('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com:3001/signup', null, {\r\n        params: {\r\n        'id': ID,\r\n        'pw': Password2,\r\n        'nick': ' ',\r\n        'email': Email,\r\n        'name': Name,\r\n        'company': CompanySelect\r\n        }\r\n    })\r\n    .then(res => {\r\n    \r\n      console.log(res)\r\n      alert('등록 완료')\r\n      document.location.href = '/'\r\n    })\r\n    .catch()\r\n  }\r\n\r\n  return(\r\n      <ListGroup flush>\r\n      <ListGroupItem className=\"p-3\">\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputState\">회사</label>\r\n                <FormSelect id=\"feInputState\" size=\"lg\" style={{fontSize: \".875rem\"}} value={CompanySelect} onChange={Company_select}>\r\n                  <option value = \"선택\">선택</option>\r\n                  <option value = \"SDS\">SDS</option>\r\n                  <option value = \"KLL\">KLL</option>\r\n                  <option value = \"KOR\">KOR</option>\r\n                  <option value = \"LOS\">LOS</option>\r\n                </FormSelect>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress\">아이디</label>\r\n                <FormInput \r\n                id=\"feInputAddress\"  \r\n                size=\"lg\" \r\n                onChange = {(event) => setID(event.target.value)}/>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">비밀번호</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  type='password'\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setPassword(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">비밀번호 재확인</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  type='password'\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setPassword2(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">이름</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setName(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">이메일</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setEmail(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <br></br>\r\n              <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>회원가입</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n}","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Ray.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\All.js",["201","202","203","204","205","206","207","208","209"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction All({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          console.log(fileurl)\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default All;\r\n\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Temp.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\CCTV.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Pressure.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\CheckList.js",["210","211","212","213","214","215","216","217","218"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction CheckList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default CheckList;\r\n\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\Documents.js",["219","220","221","222","223","224","225","226","227"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction Documents({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('documentTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Documents;\r\n\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pages\\WriteTransaction.js",["228","229","230","231"],"import Editor from \"../Editor\"\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\r\n\r\n\r\nfunction WriteTransaction({transactionInstance, account}){\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Add New Transaction\" className=\"text-sm-left\" />\r\n        </Row>\r\n    \r\n\r\n        {/* Editor */}\r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n            <Editor transactionInstance={transactionInstance} account={account} />\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n      \r\n    )\r\n}\r\n\r\nexport default WriteTransaction;\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\MainSidebar.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\MainNavbar.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainFooter.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\pagination.js",["232","233","234","235","236","237"],"// import styled from \"styled-components\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Nav } from \"shards-react\";\r\n\r\nfunction Pagination({ total, limit, page, setPage }) {\r\n  const numPages = Math.ceil(total / limit);\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n          &lt;\r\n        </Button>\r\n        {Array(numPages)\r\n          .fill()\r\n          .map((_, i) => (\r\n            <Button\r\n              key={i + 1}\r\n              onClick={() => setPage(i + 1)}\r\n              aria-current={page === i + 1 ? \"page\" : null}\r\n            >\r\n              {i + 1}\r\n            </Button>\r\n          ))}\r\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\r\n          &gt;\r\n        </Button>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// const Nav = styled.nav`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   gap: 4px;\r\n//   margin: 16px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   border: none;\r\n//   border-radius: 8px;\r\n//   padding: 8px;\r\n//   margin: 0;\r\n//   background: black;\r\n//   color: white;\r\n//   font-size: 1rem;\r\n\r\n//   &:hover {\r\n//     background: tomato;\r\n//     cursor: pointer;\r\n//     transform: translateY(-2px);\r\n//   }\r\n\r\n//   &[disabled] {\r\n//     background: grey;\r\n//     cursor: revert;\r\n//     transform: revert;\r\n//   }\r\n\r\n//   &[aria-current] {\r\n//     background: deeppink;\r\n//     font-weight: bold;\r\n//     cursor: revert;\r\n//     transform: revert;\r\n//   }\r\n// `;\r\n\r\nexport default Pagination;","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\Editor.js",["238","239","240","241","242","243","244"],"import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  Alert\r\n} from \"shards-react\";\r\n\r\nimport CompleteFormExample from \"./elements/CompleteFormExample\"\r\n\r\nfunction Editor({transactionInstance, account}) {\r\n  return (\r\n    <Card small>\r\n    <CardHeader className=\"border-bottom\">\r\n      <h6 className=\"m-0\">Form Example</h6>\r\n    </CardHeader>\r\n    <CompleteFormExample transactionInstance={transactionInstance} account={account}/>\r\n  </Card>\r\n  )\r\n};\r\n\r\nexport default Editor;\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\common\\PageTitle.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarMainNavbar.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarSearch.js",["245"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n        <FormInput\r\n          className=\"navbar-search\"\r\n          placeholder=\"Search for something...\"\r\n          aria-label=\"Search\"\r\n        />\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItems.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarSearch.js",["246"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <FormInput\r\n        className=\"navbar-search\"\r\n        placeholder=\"Search for something...\"\r\n        Style={{width:\"20%\"}}\r\n      />\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarToggle.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\NavbarNav.js",["247","248"],"import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n  <Nav navbar className=\"border-left flex-row\">\r\n    {/* <Notifications /> */}\r\n    <UserActions />\r\n  </Nav>\r\n);\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\index.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItem.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\elements\\CompleteFormExample.js",["249","250","251","252","253","254","255","256","257"],"\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\r\nconst ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\n\r\n\r\nfunction CompleteFormExample({transactionInstance, account}){\r\n\r\n  const [CategorySelect, setCategorySelect] = useState(\"\")\r\n  const [Filename, setFilename] = useState(\"\")\r\n  const [Filedes, setFiledes] = useState(\"\")\r\n  const [Regsitrant, setRegsitrant] = useState(\"\")\r\n  const [Responsible, setResponsible] = useState(\"\")\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  const [Filetype, setFiletype] = useState(\"\");\r\n  \r\n  const [file, setFile] = useState({})\r\n  const [fileUrl, setFileUrl] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [uploaded, setUploaded] = useState(false)\r\n\r\n\r\n  const uploadFile = async (e) => {\r\n    // setLoading(true)\r\n    e.preventDefault()\r\n\r\n    try {\r\n        const added = await ipfs.add(file);\r\n        console.log(file)\r\n        console.log(added)\r\n        const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n        console.log(url)\r\n        // setUrl(url)\r\n        setFileUrl(url)\r\n        setUploaded(true)\r\n        setIpfsHash(ipfsHash => added.path)\r\n        setLoading(true)\r\n    } catch (err) {\r\n        console.log('Error uploading the file : ', err)\r\n        setLoading(false)\r\n    }\r\n}\r\n\r\nconst preUpload = (e) => {\r\n    if (e.target.value !== '') {\r\n        setFile(e.target.files[0])\r\n    } else {\r\n        setFile({})\r\n    }\r\n}\r\n\r\n  const sendTransaction = async (e) => {\r\n\r\n    let cnt = file.name.length;\r\n    let target = '';\r\n    for(let i = cnt-1; i > 0; i-- ){\r\n      target += file.name[i];\r\n      if(file.name[i] == '.') break;\r\n    }\r\n    let temp = '';\r\n    for(let i = target.length-2; i >= 0; i--){\r\n      temp += target[i];\r\n    }\r\n    console.log(ipfsHash)\r\n    await transactionInstance.sendTrans(CategorySelect, Filename, ipfsHash, Regsitrant, Responsible, temp, Filedes,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n  \r\n  const category_select = (e) => {\r\n    setCategorySelect(e.target.value);\r\n    console.log(CategorySelect);\r\n  };\r\n  \r\n  const ipfsupload = (e) => {\r\n    setFileUrl(e.target.value);\r\n    // setFiletype(fileUrl);\r\n    // setLoading(true);\r\n    preUpload(e);\r\n  }\r\n\r\n  const uploadbutton = () => {\r\n    if (file.name) {\r\n    return (\r\n      <div>\r\n    {ipfsHash ? (\r\n      <h5>\r\n          Uploaded Successfully ✅\r\n      </h5>\r\n  ) : \r\n  (\r\n      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={uploadFile}>Upload File</Button>\r\n  )}\r\n  </div>\r\n    )\r\n  }\r\n  }\r\n\r\n  const CustomFileUpload = () => {\r\n\r\n    return (\r\n    <div className=\"custom-file mb-3\">\r\n    <input type=\"file\" className=\"custom-file-input\" id=\"customFile2\" \r\n                onChange = {ipfsupload}/>\r\n    {file.name ?\r\n    \r\n       (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n       {file.name}\r\n        </label>) : \r\n        (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n       파일을 선택하세요\r\n        </label>)\r\n    }\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <ListGroup flush>\r\n      <ListGroupItem className=\"p-3\">\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputState\">카테고리</label>\r\n                <FormSelect id=\"feInputState\" value={CategorySelect} onChange={category_select}>\r\n                  {/* <option>CCTV</option> */}\r\n                  <option value = \"선택\">선택</option>\r\n                  <option value = \"Document\">전자문서</option>\r\n                  <option value = \"CheckList\">체크리스트</option>\r\n                  {/* <option>온도 센서</option>\r\n                  <option>압력 센서</option>\r\n                  <option>적외선 센서</option>  */}\r\n                </FormSelect>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress\">파일명</label>\r\n                <FormInput id=\"feInputAddress\" placeholder=\"파일명을 입력하세요\" onChange = {(event) => setFilename(event.target.value)}/>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  placeholder=\"파일 설명을 입력하세요\"\r\n                  onChange = {(event) => setFiledes(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  placeholder=\"업로더 이름을 입력하세요\"\r\n                  onChange = {(event) => setRegsitrant(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  placeholder=\"업로드 책임자를 입력하세요\"\r\n                  onChange = {(event) => setResponsible(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <strong className=\"d-block mb-2\">\r\n                파일 업로드\r\n              </strong>\r\n            </Form>\r\n              <CustomFileUpload />\r\n              \r\n              {uploadbutton()}\r\n              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>트랜잭션 업로드</Button>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n                };\r\n\r\nexport default CompleteFormExample;\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\Notifications.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\UserActions.js",["258","259","260","261"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink\r\n} from \"shards-react\";\r\n\r\nexport default class UserActions extends React.Component {\r\n\r\n  // const [user_name, setUser_name] = useState(\"\");\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleUserActions = this.toggleUserActions.bind(this);\r\n  }\r\n\r\n  toggleUserActions() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  log_out(){\r\n    sessionStorage.removeItem('user_id')\r\n    document.location.href = '/'\r\n  }\r\n\r\n  // useEffect(() => {\r\n  \r\n  //   async function user_set_id(){\r\n\r\n  //     setUser_name(sessionStorage.getItem('user_id'));\r\n  //   }\r\n  //   user_set_id();\r\n  \r\n  // }, []);\r\n\r\n  render() {\r\n    return (\r\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n          <span className=\"d-none d-md-inline-block\">{sessionStorage.getItem('user_id')}</span>\r\n        </DropdownToggle>\r\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n          <DropdownItem onClick={this.log_out} className=\"text-danger\">\r\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\dispatcher.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\constants.js",["262"],"export default {\r\n  CHANGE: \"CHANGE\",\r\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\flux\\store.js",[],"D:\\공프기\\Capstone test\\SafetyManagement_UI\\client\\src\\components\\data\\sidebar-nav-items.js",["263"],"export default function() {\r\n  return [\r\n    {\r\n      title: \"전체보기\",\r\n      to: \"/all\",\r\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\r\n      htmlAfter: \"\"\r\n    },\r\n    {\r\n      title: \"CCTV\",\r\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\r\n      to: \"/cctv\",\r\n    },\r\n    {\r\n      title: \"전자문서\",\r\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\r\n      to: \"/documents\",\r\n    },\r\n    {\r\n      title: \"체크리스트\",\r\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\r\n      to: \"/checklist\",\r\n    },\r\n    {\r\n      title: \"온도 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\r\n      to: \"/temp\",\r\n    },\r\n    {\r\n      title: \"압력 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">person</i>',\r\n      to: \"/pressure\",\r\n    },\r\n    {\r\n      title: \"적외선 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">error</i>',\r\n      to: \"/ray\",\r\n    }\r\n  ];\r\n}\r\n",{"ruleId":"264","severity":1,"message":"265","line":35,"column":17,"nodeType":"266","messageId":"267","endLine":35,"endColumn":23},{"ruleId":"264","severity":1,"message":"268","line":35,"column":25,"nodeType":"266","messageId":"267","endLine":35,"endColumn":34},{"ruleId":"264","severity":1,"message":"269","line":35,"column":36,"nodeType":"266","messageId":"267","endLine":35,"endColumn":44},{"ruleId":"264","severity":1,"message":"270","line":38,"column":8,"nodeType":"266","messageId":"267","endLine":38,"endColumn":18},{"ruleId":"264","severity":1,"message":"271","line":54,"column":10,"nodeType":"266","messageId":"267","endLine":54,"endColumn":14},{"ruleId":"264","severity":1,"message":"272","line":59,"column":22,"nodeType":"266","messageId":"267","endLine":59,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":76,"column":50,"nodeType":"275","messageId":"276","endLine":76,"endColumn":52},{"ruleId":"273","severity":1,"message":"274","line":77,"column":55,"nodeType":"275","messageId":"276","endLine":77,"endColumn":57},{"ruleId":"273","severity":1,"message":"274","line":78,"column":55,"nodeType":"275","messageId":"276","endLine":78,"endColumn":57},{"ruleId":"273","severity":1,"message":"274","line":79,"column":55,"nodeType":"275","messageId":"276","endLine":79,"endColumn":57},{"ruleId":"273","severity":1,"message":"274","line":131,"column":17,"nodeType":"275","messageId":"276","endLine":131,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":133,"column":4,"nodeType":"279","endLine":133,"endColumn":13,"suggestions":"280"},{"ruleId":"264","severity":1,"message":"265","line":50,"column":17,"nodeType":"266","messageId":"267","endLine":50,"endColumn":23},{"ruleId":"264","severity":1,"message":"281","line":54,"column":10,"nodeType":"266","messageId":"267","endLine":54,"endColumn":16},{"ruleId":"264","severity":1,"message":"282","line":54,"column":18,"nodeType":"266","messageId":"267","endLine":54,"endColumn":23},{"ruleId":"264","severity":1,"message":"283","line":54,"column":25,"nodeType":"266","messageId":"267","endLine":54,"endColumn":29},{"ruleId":"264","severity":1,"message":"284","line":57,"column":8,"nodeType":"266","messageId":"267","endLine":57,"endColumn":14},{"ruleId":"277","severity":1,"message":"285","line":64,"column":4,"nodeType":"266","endLine":64,"endColumn":13,"suggestions":"286"},{"ruleId":"264","severity":1,"message":"265","line":187,"column":17,"nodeType":"266","messageId":"267","endLine":187,"endColumn":23},{"ruleId":"264","severity":1,"message":"268","line":187,"column":25,"nodeType":"266","messageId":"267","endLine":187,"endColumn":34},{"ruleId":"264","severity":1,"message":"269","line":187,"column":36,"nodeType":"266","messageId":"267","endLine":187,"endColumn":44},{"ruleId":"264","severity":1,"message":"287","line":209,"column":8,"nodeType":"266","messageId":"267","endLine":209,"endColumn":27},{"ruleId":"264","severity":1,"message":"288","line":210,"column":8,"nodeType":"266","messageId":"267","endLine":210,"endColumn":12},{"ruleId":"264","severity":1,"message":"289","line":211,"column":8,"nodeType":"266","messageId":"267","endLine":211,"endColumn":14},{"ruleId":"264","severity":1,"message":"265","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":23},{"ruleId":"264","severity":1,"message":"268","line":1,"column":25,"nodeType":"266","messageId":"267","endLine":1,"endColumn":34},{"ruleId":"264","severity":1,"message":"290","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":7},{"ruleId":"264","severity":1,"message":"291","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":15},{"ruleId":"264","severity":1,"message":"292","line":12,"column":3,"nodeType":"266","messageId":"267","endLine":12,"endColumn":13},{"ruleId":"264","severity":1,"message":"270","line":16,"column":8,"nodeType":"266","messageId":"267","endLine":16,"endColumn":18},{"ruleId":"264","severity":1,"message":"289","line":23,"column":8,"nodeType":"266","messageId":"267","endLine":23,"endColumn":14},{"ruleId":"264","severity":1,"message":"293","line":33,"column":11,"nodeType":"266","messageId":"267","endLine":33,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":23},{"ruleId":"264","severity":1,"message":"268","line":1,"column":25,"nodeType":"266","messageId":"267","endLine":1,"endColumn":34},{"ruleId":"264","severity":1,"message":"291","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":15},{"ruleId":"264","severity":1,"message":"270","line":16,"column":8,"nodeType":"266","messageId":"267","endLine":16,"endColumn":18},{"ruleId":"264","severity":1,"message":"283","line":22,"column":10,"nodeType":"266","messageId":"267","endLine":22,"endColumn":14},{"ruleId":"264","severity":1,"message":"294","line":22,"column":16,"nodeType":"266","messageId":"267","endLine":22,"endColumn":27},{"ruleId":"264","severity":1,"message":"289","line":23,"column":8,"nodeType":"266","messageId":"267","endLine":23,"endColumn":14},{"ruleId":"264","severity":1,"message":"295","line":29,"column":10,"nodeType":"266","messageId":"267","endLine":29,"endColumn":18},{"ruleId":"264","severity":1,"message":"290","line":10,"column":3,"nodeType":"266","messageId":"267","endLine":10,"endColumn":7},{"ruleId":"264","severity":1,"message":"296","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":12},{"ruleId":"264","severity":1,"message":"297","line":12,"column":3,"nodeType":"266","messageId":"267","endLine":12,"endColumn":12},{"ruleId":"264","severity":1,"message":"291","line":13,"column":3,"nodeType":"266","messageId":"267","endLine":13,"endColumn":15},{"ruleId":"264","severity":1,"message":"292","line":14,"column":3,"nodeType":"266","messageId":"267","endLine":14,"endColumn":13},{"ruleId":"264","severity":1,"message":"298","line":15,"column":3,"nodeType":"266","messageId":"267","endLine":15,"endColumn":9},{"ruleId":"264","severity":1,"message":"299","line":21,"column":17,"nodeType":"266","messageId":"267","endLine":21,"endColumn":25},{"ruleId":"264","severity":1,"message":"272","line":23,"column":22,"nodeType":"266","messageId":"267","endLine":23,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":40,"column":16,"nodeType":"275","messageId":"276","endLine":40,"endColumn":18},{"ruleId":"264","severity":1,"message":"290","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":7},{"ruleId":"264","severity":1,"message":"296","line":12,"column":3,"nodeType":"266","messageId":"267","endLine":12,"endColumn":12},{"ruleId":"264","severity":1,"message":"297","line":13,"column":3,"nodeType":"266","messageId":"267","endLine":13,"endColumn":12},{"ruleId":"264","severity":1,"message":"291","line":14,"column":3,"nodeType":"266","messageId":"267","endLine":14,"endColumn":15},{"ruleId":"264","severity":1,"message":"292","line":15,"column":3,"nodeType":"266","messageId":"267","endLine":15,"endColumn":13},{"ruleId":"264","severity":1,"message":"298","line":16,"column":3,"nodeType":"266","messageId":"267","endLine":16,"endColumn":9},{"ruleId":"264","severity":1,"message":"299","line":21,"column":17,"nodeType":"266","messageId":"267","endLine":21,"endColumn":25},{"ruleId":"264","severity":1,"message":"272","line":23,"column":22,"nodeType":"266","messageId":"267","endLine":23,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":40,"column":16,"nodeType":"275","messageId":"276","endLine":40,"endColumn":18},{"ruleId":"264","severity":1,"message":"290","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":7},{"ruleId":"264","severity":1,"message":"296","line":12,"column":3,"nodeType":"266","messageId":"267","endLine":12,"endColumn":12},{"ruleId":"264","severity":1,"message":"297","line":13,"column":3,"nodeType":"266","messageId":"267","endLine":13,"endColumn":12},{"ruleId":"264","severity":1,"message":"291","line":14,"column":3,"nodeType":"266","messageId":"267","endLine":14,"endColumn":15},{"ruleId":"264","severity":1,"message":"292","line":15,"column":3,"nodeType":"266","messageId":"267","endLine":15,"endColumn":13},{"ruleId":"264","severity":1,"message":"298","line":16,"column":3,"nodeType":"266","messageId":"267","endLine":16,"endColumn":9},{"ruleId":"264","severity":1,"message":"299","line":22,"column":17,"nodeType":"266","messageId":"267","endLine":22,"endColumn":25},{"ruleId":"264","severity":1,"message":"272","line":24,"column":22,"nodeType":"266","messageId":"267","endLine":24,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":41,"column":16,"nodeType":"275","messageId":"276","endLine":41,"endColumn":18},{"ruleId":"264","severity":1,"message":"300","line":3,"column":31,"nodeType":"266","messageId":"267","endLine":3,"endColumn":35},{"ruleId":"264","severity":1,"message":"301","line":3,"column":37,"nodeType":"266","messageId":"267","endLine":3,"endColumn":47},{"ruleId":"264","severity":1,"message":"302","line":3,"column":49,"nodeType":"266","messageId":"267","endLine":3,"endColumn":57},{"ruleId":"264","severity":1,"message":"298","line":3,"column":59,"nodeType":"266","messageId":"267","endLine":3,"endColumn":65},{"ruleId":"264","severity":1,"message":"303","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":19},{"ruleId":"264","severity":1,"message":"304","line":2,"column":21,"nodeType":"266","messageId":"267","endLine":2,"endColumn":24},{"ruleId":"264","severity":1,"message":"305","line":2,"column":26,"nodeType":"266","messageId":"267","endLine":2,"endColumn":29},{"ruleId":"264","severity":1,"message":"300","line":2,"column":31,"nodeType":"266","messageId":"267","endLine":2,"endColumn":35},{"ruleId":"264","severity":1,"message":"301","line":2,"column":37,"nodeType":"266","messageId":"267","endLine":2,"endColumn":47},{"ruleId":"264","severity":1,"message":"302","line":2,"column":49,"nodeType":"266","messageId":"267","endLine":2,"endColumn":57},{"ruleId":"264","severity":1,"message":"303","line":3,"column":3,"nodeType":"266","messageId":"267","endLine":3,"endColumn":12},{"ruleId":"264","severity":1,"message":"304","line":4,"column":3,"nodeType":"266","messageId":"267","endLine":4,"endColumn":6},{"ruleId":"264","severity":1,"message":"305","line":5,"column":3,"nodeType":"266","messageId":"267","endLine":5,"endColumn":6},{"ruleId":"264","severity":1,"message":"306","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":12},{"ruleId":"264","severity":1,"message":"307","line":9,"column":3,"nodeType":"266","messageId":"267","endLine":9,"endColumn":16},{"ruleId":"264","severity":1,"message":"290","line":10,"column":3,"nodeType":"266","messageId":"267","endLine":10,"endColumn":7},{"ruleId":"264","severity":1,"message":"308","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":8},{"ruleId":"309","severity":1,"message":"310","line":10,"column":1,"nodeType":"311","endLine":25,"endColumn":3},{"ruleId":"309","severity":1,"message":"310","line":10,"column":1,"nodeType":"311","endLine":25,"endColumn":3},{"ruleId":"264","severity":1,"message":"312","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":21},{"ruleId":"309","severity":1,"message":"310","line":7,"column":1,"nodeType":"311","endLine":12,"endColumn":3},{"ruleId":"264","severity":1,"message":"265","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":23},{"ruleId":"264","severity":1,"message":"268","line":2,"column":25,"nodeType":"266","messageId":"267","endLine":2,"endColumn":34},{"ruleId":"264","severity":1,"message":"291","line":12,"column":3,"nodeType":"266","messageId":"267","endLine":12,"endColumn":15},{"ruleId":"264","severity":1,"message":"313","line":29,"column":10,"nodeType":"266","messageId":"267","endLine":29,"endColumn":18},{"ruleId":"264","severity":1,"message":"314","line":29,"column":20,"nodeType":"266","messageId":"267","endLine":29,"endColumn":31},{"ruleId":"264","severity":1,"message":"315","line":32,"column":10,"nodeType":"266","messageId":"267","endLine":32,"endColumn":17},{"ruleId":"264","severity":1,"message":"316","line":33,"column":10,"nodeType":"266","messageId":"267","endLine":33,"endColumn":17},{"ruleId":"264","severity":1,"message":"317","line":34,"column":10,"nodeType":"266","messageId":"267","endLine":34,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":72,"column":23,"nodeType":"275","messageId":"276","endLine":72,"endColumn":25},{"ruleId":"264","severity":1,"message":"268","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"269","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"265","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":44},{"ruleId":"264","severity":1,"message":"283","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"309","severity":1,"message":"318","line":1,"column":1,"nodeType":"311","endLine":4,"endColumn":3},{"ruleId":"309","severity":1,"message":"319","line":1,"column":1,"nodeType":"311","endLine":40,"endColumn":2},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Connection' is defined but never used.","'web3' is assigned a value but never used.","'setblock_list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account', 'block_list', and 'transactionInstance'. Either include them or remove the dependency array.","ArrayExpression",["320"],"'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'SignUp' is defined but never used.","React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isLogin] as a second argument to the useEffect Hook.",["321"],"'TransactionContract' is defined but never used.","'Web3' is defined but never used.","'moment' is defined but never used.","'Form' is defined but never used.","'FormCheckbox' is defined but never used.","'FormSelect' is defined but never used.","'routeChange' is assigned a value but never used.","'useNavigate' is defined but never used.","'Password' is assigned a value but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'setLimit' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Alert' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Notifications' is defined but never used.","'Filetype' is assigned a value but never used.","'setFiletype' is assigned a value but never used.","'fileUrl' is assigned a value but never used.","'loading' is assigned a value but never used.","'uploaded' is assigned a value but never used.","Assign object to a variable before exporting as module default","Unexpected default export of anonymous function",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},"Update the dependencies array to be: [account, block_list, loading, transactionInstance]",{"range":"326","text":"327"},"Add dependencies array: [isLogin]",{"range":"328","text":"329"},[4674,4683],"[account, block_list, loading, transactionInstance]",[2454,2454],", [isLogin]"]
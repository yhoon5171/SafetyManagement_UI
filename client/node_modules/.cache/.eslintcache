[{"/home/ubuntu/SafetyManagement_UI/client/src/index.js":"1","/home/ubuntu/SafetyManagement_UI/client/src/blockchain/connection.js":"2","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/FirstPage.js":"3","/home/ubuntu/SafetyManagement_UI/client/src/App.jsx":"4","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Login.js":"5","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/SignUp.js":"6","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Ray.js":"7","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/CCTV.js":"8","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/All.js":"9","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Pressure.js":"10","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Temp.js":"11","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/CheckList.js":"12","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Documents.js":"13","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/WriteTransaction.js":"14","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/search_result.js":"15","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainFooter.js":"16","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/MainSidebar.js":"17","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/MainNavbar.js":"18","/home/ubuntu/SafetyManagement_UI/client/src/components/pagination.js":"19","/home/ubuntu/SafetyManagement_UI/client/src/components/Editor.js":"20","/home/ubuntu/SafetyManagement_UI/client/src/components/common/PageTitle.js":"21","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarMainNavbar.js":"22","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarSearch.js":"23","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarNavItems.js":"24","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarSearch.js":"25","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarToggle.js":"26","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarNav/NavbarNav.js":"27","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/index.js":"28","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarNavItem.js":"29","/home/ubuntu/SafetyManagement_UI/client/src/components/elements/CompleteFormExample.js":"30","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarNav/Notifications.js":"31","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarNav/UserActions.js":"32","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/constants.js":"33","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/dispatcher.js":"34","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/store.js":"35","/home/ubuntu/SafetyManagement_UI/client/src/components/data/sidebar-nav-items.js":"36"},{"size":1425,"mtime":1660631068949,"results":"37","hashOfConfig":"38"},{"size":6998,"mtime":1660631068941,"results":"39","hashOfConfig":"38"},{"size":2702,"mtime":1660631068945,"results":"40","hashOfConfig":"38"},{"size":8955,"mtime":1660631068941,"results":"41","hashOfConfig":"38"},{"size":3823,"mtime":1660631068945,"results":"42","hashOfConfig":"38"},{"size":3859,"mtime":1660631068945,"results":"43","hashOfConfig":"38"},{"size":911,"mtime":1660631068945,"results":"44","hashOfConfig":"38"},{"size":2732,"mtime":1660631068945,"results":"45","hashOfConfig":"38"},{"size":9810,"mtime":1660631068945,"results":"46","hashOfConfig":"38"},{"size":150,"mtime":1660631068945,"results":"47","hashOfConfig":"38"},{"size":145,"mtime":1660631068945,"results":"48","hashOfConfig":"38"},{"size":9713,"mtime":1660631068945,"results":"49","hashOfConfig":"38"},{"size":8944,"mtime":1660631068945,"results":"50","hashOfConfig":"38"},{"size":739,"mtime":1660631068945,"results":"51","hashOfConfig":"38"},{"size":9795,"mtime":1660631068945,"results":"52","hashOfConfig":"38"},{"size":1367,"mtime":1660631068945,"results":"53","hashOfConfig":"38"},{"size":1918,"mtime":1660631068945,"results":"54","hashOfConfig":"38"},{"size":1043,"mtime":1660631068945,"results":"55","hashOfConfig":"38"},{"size":1509,"mtime":1660631068945,"results":"56","hashOfConfig":"38"},{"size":532,"mtime":1660631068941,"results":"57","hashOfConfig":"38"},{"size":691,"mtime":1660631068941,"results":"58","hashOfConfig":"38"},{"size":1993,"mtime":1660631068945,"results":"59","hashOfConfig":"38"},{"size":676,"mtime":1660631068945,"results":"60","hashOfConfig":"38"},{"size":957,"mtime":1660631068945,"results":"61","hashOfConfig":"38"},{"size":1774,"mtime":1660631068945,"results":"62","hashOfConfig":"38"},{"size":712,"mtime":1660631068945,"results":"63","hashOfConfig":"38"},{"size":284,"mtime":1660631068945,"results":"64","hashOfConfig":"38"},{"size":153,"mtime":1660631068945,"results":"65","hashOfConfig":"38"},{"size":831,"mtime":1660631068945,"results":"66","hashOfConfig":"38"},{"size":6668,"mtime":1660631068945,"results":"67","hashOfConfig":"38"},{"size":2399,"mtime":1660631068945,"results":"68","hashOfConfig":"38"},{"size":1444,"mtime":1660631068945,"results":"69","hashOfConfig":"38"},{"size":75,"mtime":1660631068945,"results":"70","hashOfConfig":"38"},{"size":69,"mtime":1660631068945,"results":"71","hashOfConfig":"38"},{"size":1100,"mtime":1660631068945,"results":"72","hashOfConfig":"38"},{"size":928,"mtime":1660631068945,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"5uo3t1",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},"/home/ubuntu/SafetyManagement_UI/client/src/index.js",["166","167","168","169"],"// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import Connection from './blockchain/connection';\n// import {BrowserRouter as Router} from 'react-router-dom';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Connection />\n//   </Router>\n// );\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import Connection from './blockchain/connection';\n// import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n// import FirstPage from './components/pages/FirstPage';\n// import All from './components/pages/All';\n// import { Navigate } from 'react-router-dom';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Routes>\n//         <Route exact path=\"/\" element={<FirstPage />} />\n//         <Route path=\"/connect\" element={<Connection />} />\n//     </Routes>\n//   </Router>\n// );\n\n\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Connection from './blockchain/connection';\nimport FirstPage from './components/pages/FirstPage';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router>\n    <FirstPage />\n  </Router>\n);","/home/ubuntu/SafetyManagement_UI/client/src/blockchain/connection.js",["170","171","172","173","174","175","176","177"],"import React, { useEffect, useState, useRef } from \"react\";\n// import {FileUpload} from './components/FileUpload';\nimport TransactionContract from \"../contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport moment from \"moment\";\n// import Axios from 'axios';\n// import Login from './login';\n// import Signup from './signup';\nimport App from '../App.jsx';\n\n\n\nexport default function Connection() {\n  // const [fileUrl, setFileUrl] = useState(\"\");\n  // const [web3, setWeb3] = useState(\"\");\n  // const [account, setAccount] = useState(\"\");\n  // const [transactionInstance, setTransactionInstance] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  // const [category, setCategory] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const [ipfsHash, setIpfsHash] = useState(\"\");\n  // const [registrant, setRegsitrant] = useState(\"\");\n  // const [responsibleManager, setResponsibleManager] = useState(\"\");\n  // const [fileType, setFileType] = useState(\"\");\n  // const [fileDescription, setFileDescription] = useState(\"\");\n  // const [transactionCnt, setTransactionCnt] = useState(\"\");\n\n  // const [time, setTime] = useState(\"\");\n  // const [ipfsHash_, setIpfsHash_] = useState(\"\");\n  // const [category_, setCategory_] = useState(\"\");\n  // const [name_, setName_] = useState(\"\");\n  // const [registrant_, setRegsitrant_] = useState(\"\");\n  // const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n  // const [fileType_, setFileType_] = useState(\"\");\n  // const [fileDescription_, setFileDescription_] = useState(\"\");\n\n  // const submitReview = ()=>{\n  //   Axios.post('http://localhost:3001/api/insert', {\n  //     category: category,\n  //     name: name,\n  //     time: time,\n  //     ipfsHash: ipfsHash,\n  //     registrant: registrant,\n  //     responsible: responsibleManager,\n  //     filetype: fileType,\n  //     filedes: fileDescription\n  //   }).then(()=>{\n  //     alert('등록 완료!');\n  //   })\n  // };\n\n\n  const [web3, setWeb3] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n  const [block_list, setblock_list] = useState([]);\n\n  useEffect(() => {\n    async function componentWillMount(e) {\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-52-78-43-195.ap-northeast-2.compute.amazonaws.com:8545'));\n      setWeb3(web3);\n      console.log(web3)\n      const contract = require(\"truffle-contract\");\n      const transaction = contract(TransactionContract);\n      console.log(web3);\n      transaction.setProvider(web3.currentProvider);\n  \n      web3.eth.getAccounts((error, accounts) => {\n        if (!error){\n          transaction.deployed().then(instance => {\n            setTransactionInstance(instance);\n            let temp = 0;\n            if(sessionStorage.getItem('company') == 'SDS') temp = 0;\n            else if(sessionStorage.getItem('company') == 'KLL') temp = 1;\n            else if(sessionStorage.getItem('company') == 'KOR') temp = 2;\n            else if(sessionStorage.getItem('company') == 'LOS') temp = 3;\n            setAccount(accounts[temp]);\n            setLoading(true);\n          })\n        }\n      })\n      \n    }\n\n    componentWillMount();    \n\n  }, []);\n\n  const nextId = useRef(1);\n\n  \n\n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n      \n\n\n      for(let i = 0; i < events.length; i += 1){\n        \n        var time_ = moment.unix(events[i].returnValues.time);\n        \n        block_list.push({\n          id: nextId.current,\n          category : events[i].returnValues.category.toString(),\n          name : events[i].returnValues.name.toString(),\n          time : time_.toString(), \n          ipfsHash : events[i].returnValues.ipfs_hash.toString(),\n          registrant : events[i].returnValues.registrant.toString(),\n          responsible : events[i].returnValues.responsible_manager.toString(),\n          filetype : events[i].returnValues.file_type.toString(),\n          filedes : events[i].returnValues.file_description.toString()\n        }\n        )\n        \n        nextId.current += 1;\n\n        console.log(events[i].returnValues);\n      }\n      console.log('events.length = ', events.length);\n      console.log(events);\n      console.log('block_list = ', block_list);\n      console.log(account);\n  \n    }\n\n    if (loading == true) updateAllTransactions();\n\n}, [loading]);\n\n\n\n  // const sendTransaction = async (e) => {\n  //   console.log(web3);\n  //   console.log(account);\n  //   console.log(transactionInstance);\n  //   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n  //     from: account,\n  //     //value: e.web3.utils.toWei('10', \"ether\"),\n  //     gas: 1000000\n  //   })\n    \n  //   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n  //   console.log(events[events.length-1].transactionHash)\n  //   //this.updateAllTransactions();\n\n  //   submitReview();\n  // }\n\n\n\n\n  return (\n    <div>\n      {/* <Login />\n      <Signup />\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\n      <br></br>\n      \n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\n      FileUrl :{\" \"}\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {fileUrl}\n      </a>\n      <br></br>\n\n      <p>Your account: {account}</p>\n      <br></br>\n\n      <button onClick={sendTransaction}>\n        트랜잭션 추가\n      </button>\n      {/* <button onClick={updateAllTransactions}>\n        트랜잭션 보여주기\n      </button> *//*}\n      <br></br>\n\n      <p>all transactions:</p>\n      <br></br>\n      <p>Category: {category_}</p>\n      <p>File Name: {name_}</p>\n      <p>Time: {time}</p>\n      <p>IPFS Hash: {ipfsHash_}</p>\n      <p>Registrant: {registrant_}</p>\n      <p>Responsible Manager: {responsibleManager_}</p>\n      <p>File Type: {fileType_}</p>\n      <p>File Description: {fileDescription_}</p> */}\n      <App block_list={block_list} transactionInstance={transactionInstance} account={account}/>\n    </div>\n  )\n}","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/FirstPage.js",["178","179","180","181","182","183"],"// import React from 'react'\n// import '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n// import '../../App.css'\n// import { Routes, Route, Link } from 'react-router-dom'\n\n// import Login from './Login'\n// import SignUp from './SignUp'\n// import MainNavbar from '../layout/MainNavbar/MainNavbar'\n// import Connection from '../../blockchain/connection'\n\n// export default function FirstPage() {\n//   return (\n//     <div className=\"App\">\n//     <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n//         <div className=\"container\">\n//         {<MainNavbar />}\n//         <Link className=\"navbar-brand\" to={'/sign-in'}>\n//             positronX\n//         </Link>\n//         <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n//             <ul className=\"navbar-nav ml-auto\">\n//             <li className=\"nav-item\">\n//                 <Link className=\"nav-link\" to={'/sign-in'}>\n//                 Login\n//                 </Link>\n//             </li>\n//             <li className=\"nav-item\">\n//                 <Link className=\"nav-link\" to={'/sign-up'}>\n//                 Sign up\n//                 </Link>\n//             </li>\n//             </ul>\n//         </div>\n//         </div>\n//     </nav>\n\n//     <div className=\"auth-wrapper\">\n//         <div className=\"auth-inner\">\n//         <Routes>\n//             <Route exact path=\"/\" element={<Login />} />\n//             <Route path=\"/sign-in\" element={<Login />} />\n//             <Route path=\"/sign-up\" element={<SignUp />} />\n//         </Routes>\n//         </div>\n//     </div>\n//     </div>\n//   )\n// };\n\nimport React, { useRef, useEffect, useState } from \"react\";\n\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../../App.css'\nimport { Routes, Route, Link } from 'react-router-dom'\n\nimport Login from './Login'\nimport SignUp from './SignUp'\nimport Connection from '../../blockchain/connection';\n\nexport default function FirstPage() {\n   // 로그인 상태 관리\n   const [isLogin, setIsLogin] = useState(false)\n \n   useEffect(() => {\n     if(sessionStorage.getItem('user_id') === null){\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\n       console.log('isLogin ?? :: ', isLogin)\n     } else {\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\n     // 로그인 상태 변경\n       setIsLogin(true)\n       console.log('isLogin ?? :: ', isLogin)\n     }\n     \n    // sessionStorage.removeItem('search')\n   })\n\n  return (\n    \n    <div>\n\n        {isLogin ? \n      \t// Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\n        <Connection/> : \n        <Login />}\n    </div>\n  )\n};","/home/ubuntu/SafetyManagement_UI/client/src/App.jsx",["184","185","186","187","188","189","190"],"// import React, { useEffect, useState } from \"react\";\n// import {FileUpload} from './components/FileUpload';\n// import \"./App.css\";\n// import TransactionContract from \"../src/contracts/Transaction.json\"\n// import Web3 from 'web3';\n// import moment from \"moment\";\n// import Axios from 'axios';\n// import Login from './login';\n// import Signup from './signup';\n\n\n\n// export default function App() {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   const [web3, setWeb3] = useState(\"\");\n//   const [account, setAccount] = useState(\"\");\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const [category, setCategory] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\n//   const [registrant, setRegsitrant] = useState(\"\");\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\n//   const [fileType, setFileType] = useState(\"\");\n//   const [fileDescription, setFileDescription] = useState(\"\");\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\n\n//   const [time, setTime] = useState(\"\");\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\n//   const [category_, setCategory_] = useState(\"\");\n//   const [name_, setName_] = useState(\"\");\n//   const [registrant_, setRegsitrant_] = useState(\"\");\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n//   const [fileType_, setFileType_] = useState(\"\");\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\n\n//   const submitReview = ()=>{\n//     Axios.post('http://localhost:3001/api/insert', {\n//       category: category,\n//       name: name,\n//       time: time,\n//       ipfsHash: ipfsHash,\n//       registrant: registrant,\n//       responsible: responsibleManager,\n//       filetype: fileType,\n//       filedes: fileDescription\n//     }).then(()=>{\n//       alert('등록 완료!');\n//     })\n//   };\n\n\n//   useEffect(() => {\n//     async function componentWillMount(e) {\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//       setWeb3(web3);\n//       console.log(web3)\n//       const contract = require(\"truffle-contract\");\n//       const transaction = contract(TransactionContract);\n//       console.log(web3);\n//       transaction.setProvider(web3.currentProvider);\n  \n//       web3.eth.getAccounts((error, accounts) => {\n//         if (!error){\n//           transaction.deployed().then(instance => {\n//             setTransactionInstance(instance);\n//             setAccount(accounts[0]);\n//             setLoading(true);\n//           })\n//         }\n//       })\n      \n//     }\n\n//     componentWillMount();\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\n//     // updateAllTransactions();\n\n    \n\n//   }, []);\n\n\n//   useEffect(() => {\n\n//     async function updateAllTransactions(e){\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n//       for(let i=0; i<events.length; i+=1){\n//         const record = {};\n//         var time_ = moment.unix(events[i].returnValues.time);\n\n//         setCategory_(events[i].returnValues.category.toString());\n//         setName_(events[i].returnValues.name.toString());\n//         setTime(time_.toString());\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\n//         setFileType_(events[i].returnValues.file_type.toString());\n//         setFileDescription_(events[i].returnValues.file_description.toString());\n//         setTransactionCnt(transactionInstance.cntTransactions());\n//         console.log(events[i].returnValues);\n//       }\n//       console.log(events.length);\n//       console.log(events);\n  \n//     }\n\n//     if (loading == true) updateAllTransactions();\n\n// }, [loading]);\n\n\n//   const sendTransaction = async (e) => {\n//     console.log(web3);\n//     console.log(account);\n//     console.log(transactionInstance);\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n//       from: account,\n//       //value: e.web3.utils.toWei('10', \"ether\"),\n//       gas: 1000000\n//     })\n    \n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n//     console.log(events[events.length-1].transactionHash)\n//     //this.updateAllTransactions();\n\n//     submitReview();\n//   }\n\n\n\n\n//   return (\n//     <div>\n//       <Login />\n//       <Signup />\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\n//       <br></br>\n      \n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n\n//       <p>Your account: {account}</p>\n//       <br></br>\n\n//       <button onClick={sendTransaction}>\n//         트랜잭션 추가\n//       </button>\n//       {/* <button onClick={updateAllTransactions}>\n//         트랜잭션 보여주기\n//       </button> */}\n//       <br></br>\n\n//       <p>all transactions:</p>\n//       <br></br>\n//       <p>Category: {category_}</p>\n//       <p>File Name: {name_}</p>\n//       <p>Time: {time}</p>\n//       <p>IPFS Hash: {ipfsHash_}</p>\n//       <p>Registrant: {registrant_}</p>\n//       <p>Responsible Manager: {responsibleManager_}</p>\n//       <p>File Type: {fileType_}</p>\n//       <p>File Description: {fileDescription_}</p>\n//     </div>\n//   )\n// }\n\n\n\n\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Route, Routes,  Navigate } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\n\nimport Ray from \"./components/pages/Ray\";\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\nimport CCTV from \"./components/pages/CCTV\";\nimport All from \"./components/pages/All\";\nimport Pressure from \"./components/pages/Pressure\";\nimport Temp from \"./components/pages/Temp\";\nimport CheckList from \"./components/pages/CheckList\";\nimport Documents from \"./components/pages/Documents\";\n\nimport { Container, Row, Col } from \"shards-react\";\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\nimport MainFooter from \"./components/layout/MainFooter\";\n\nimport WriteTransaction from \"./components/pages/WriteTransaction\"\n\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport moment from \"moment\";\nimport Search_Result from \"./components/pages/search_result\";\n\nexport default function App({block_list, transactionInstance, account}) {\n  \n  console.log(\"App!!!\")\n\n  return(\n      <Container fluid>\n        <Row>\n          <MainSidebar/>\n          <Col\n            className=\"main-content p-0\"\n            lg={{ size: 10, offset: 2 }}\n            md={{ size: 9, offset: 3 }}\n            sm=\"12\"\n            tag=\"main\"\n          >\n            {<MainNavbar />}\n            <Routes>\n              <Route path=\"/\" element={<Navigate to=\"/all\"/>} />\n              <Route path=\"/all\" element={<All transactionInstance={transactionInstance}/>} />\n              <Route path=\"/cctv\" element={<CCTV/>} />\n              <Route path=\"/documents\" element={<Documents transactionInstance={transactionInstance}/>} />\n              <Route path=\"/checklist\" element={<CheckList transactionInstance={transactionInstance}/>} />\n              <Route path=\"/search_result\" element={<Search_Result transactionInstance={transactionInstance}/>} />\n              <Route path=\"/temp\" element={<Temp/>} />\n              <Route path=\"/pressure\" element={<Pressure/>} />\n              <Route path=\"/ray\" element={<Ray/>} />\n              <Route path=\"/writetransaction\" element={<WriteTransaction transactionInstance={transactionInstance} account={account} />}/>\n            </Routes>\n            <br></br><br></br>\n            {<MainFooter />}\n          </Col>\n        </Row>\n      </Container>\n  )\n};","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Login.js",["191","192","193","194","195","196","197","198"],"import React, { useRef, useEffect, useState } from \"react\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\nimport Connection from '../../blockchain/connection'\n\nimport \"../../\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\n\nimport { Link, useNavigate } from 'react-router-dom'\nimport moment from \"moment\";\nimport Axios from 'axios';\nimport SignUp from './SignUp'\n\nexport default function Login()  {\n    const [inputId, setinputId] = useState(\"\")\n    const [inputPw, setinputPw] = useState(\"\")\n    const [signup, setsignup] = useState(false)\n\n    let navigate = useNavigate();\n    const routeChange = () => {\n        let path = '/connect';\n        navigate(path);\n    }\n\n\n    const onClickLogin = () => {\n        Axios.post('http://ec2-52-78-43-195.ap-northeast-2.compute.amazonaws.com:3001/onLogin', null, {\n            params: {\n            'user_id': inputId,\n            'user_pw': inputPw\n            }\n        })\n        .then(res => {\n            console.log(res)\n            if(res.data.msg)\n                alert(res.data.msg);\n            else{\n                sessionStorage.setItem('user_id', inputId)\n                sessionStorage.setItem('company', res.data.company)\n            }\n            document.location.href = '/'\n        })\n        .catch()\n    }\n\n\n    return (\n    <div className=\"App\">\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    <div className=\"auth-wrapper\">\n        &nbsp;&nbsp;&nbsp;\n        <div className=\"auth-inner\">\n        <Link to={'/'} style ={{textDecoration: \"none\"}}>\n        <h2 style ={{ \n                        fontWeight: \"bold\"\n                        }}>&nbsp;&nbsp;&nbsp;Safety Management</h2>\n        </Link>\n        <br></br>\n        {\n            signup ? <SignUp />\n            : \n            <div>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n                <Row>\n                    <Col>\n                        <form>\n                            <FormGroup>\n                                <FormInput id=\"feInputAddress\" size=\"lg\" placeholder=\"아이디\" onChange = {(event) => setinputId(event.target.value)}/>\n                            </FormGroup>\n\n                            <FormGroup>\n                                <FormInput\n                                type='password'\n                                id=\"feInputAddress2\"\n                                size=\"lg\"\n                                placeholder=\"비밀번호\"\n                                onChange = {(event) => setinputPw(event.target.value)}\n                                />\n                            </FormGroup>\n                            <br></br>\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>로그인</Button>\n                            \n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" outline onClick={(event) => setsignup(true)}>\n                                회원가입\n                            </Button>\n                        </form>\n                    </Col>\n                </Row>\n            </ListGroupItem>\n        </ListGroup>\n        {/* <div className=\"login\">\n            <Button onClick={(event) => setsignup(true)}>\n                <p stlye ={{  left: \"50%\",\n                                top: \"69%\",\n                                transform: \"translate(-50%, -50%)\",\n                                position: \"absolute\",\n                                color: \"#5a6169\"}}>회원가입</p>\n            </Button>\n        </div> */}\n        </div>\n        }\n        \n      </div>\n      &nbsp;&nbsp;&nbsp;\n      </div>\n      </div>\n    )\n}","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/SignUp.js",["199","200","201","202","203","204","205","206"],"import React, { useRef, useEffect, useState } from \"react\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\nimport Connection from '../../blockchain/connection'\n\nimport \"../../\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\n\nimport { Link, useNavigate } from 'react-router-dom'\nimport moment from \"moment\";\nimport Axios from 'axios';\n\nexport default function SignUp()  {\n  const [CompanySelect, setCompanySelect] = useState(\"\")\n  const [ID, setID] = useState(\"\")\n  const [Password, setPassword] = useState(\"\")\n  const [Password2, setPassword2] = useState(\"\")\n  const [Name, setName] = useState(\"\")\n  const [Email, setEmail] = useState(\"\")\n\n  const Company_select = (e) => {\n    setCompanySelect(e.target.value);\n    console.log(CompanySelect);\n  };\n\n  \n\n  const onClickLogin = () => {\n    Axios.post('http://ec2-52-78-43-195.ap-northeast-2.compute.amazonaws.com:3001/signup', null, {\n        params: {\n        'id': ID,\n        'pw': Password2,\n        'nick': ' ',\n        'email': Email,\n        'name': Name,\n        'company': CompanySelect\n        }\n    })\n    .then(res => {\n    \n      console.log(res)\n      alert('등록 완료')\n      document.location.href = '/'\n    })\n    .catch()\n  }\n\n  return(\n      <ListGroup flush>\n      <ListGroupItem className=\"p-3\">\n        <Row>\n          <Col>\n            <Form>\n              <FormGroup>\n                <label htmlFor=\"feInputState\">회사</label>\n                <FormSelect id=\"feInputState\" size=\"lg\" style={{fontSize: \".875rem\"}} value={CompanySelect} onChange={Company_select}>\n                  <option value = \"선택\">선택</option>\n                  <option value = \"SDS\">SDS</option>\n                  <option value = \"KLL\">KLL</option>\n                  <option value = \"KOR\">KOR</option>\n                  <option value = \"LOS\">LOS</option>\n                </FormSelect>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress\">아이디</label>\n                <FormInput \n                id=\"feInputAddress\"  \n                size=\"lg\" \n                onChange = {(event) => setID(event.target.value)}/>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">비밀번호</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  type='password'\n                  size=\"lg\"\n                  onChange = {(event) => setPassword(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">비밀번호 재확인</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  type='password'\n                  size=\"lg\"\n                  onChange = {(event) => setPassword2(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">이름</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  size=\"lg\"\n                  onChange = {(event) => setName(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">이메일</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  size=\"lg\"\n                  onChange = {(event) => setEmail(event.target.value)}\n                />\n              </FormGroup>\n              <br></br>\n              <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>회원가입</Button>\n            </Form>\n          </Col>\n        </Row>\n      </ListGroupItem>\n    </ListGroup>\n  )\n}","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Ray.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/pages/CCTV.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/pages/All.js",["207","208","209","210","211","212","213","214","215"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\n\nfunction All({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        console.log(sessionStorage.getItem('search'));\n        // if(sessionStorage.getItem('search') === null){\n          arr.push(\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n              <th scope=\"row\" >{i+1}</th>\n              <td >{child[i].name}</td>\n              <td>{child[i].responsible}</td>\n              <td>{child[i].filetype}</td>\n              <td>{child[i].filedes}</td>\n              <td>{child[i].time}</td>\n            </tr>\n            )\n        // }\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\n        //   arr.push(\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n        //       <th scope=\"row\" >{i+1}</th>\n        //       <td >{child[i].name}</td>\n        //       <td>{child[i].responsible}</td>\n        //       <td>{child[i].filetype}</td>\n        //       <td>{child[i].filedes}</td>\n        //       <td>{child[i].time}</td>\n        //     </tr>\n        //     )\n        // }\n      }\n  \n      return arr;\n    }\n\n  }\n\n\n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          console.log(fileurl)\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default All;\n\n","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Pressure.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Temp.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/pages/CheckList.js",["216","217","218","219","220","221","222","223","224"],"\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\nfunction CheckList({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        // if(sessionStorage.getItem('search') === null){\n          arr.push(\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n            <th scope=\"row\" >{i+1}</th>\n            <td >{child[i].name}</td>\n            <td>{child[i].responsible}</td>\n            <td>{child[i].filetype}</td>\n            <td>{child[i].filedes}</td>\n            <td>{child[i].time}</td>\n          </tr>\n          )\n        // }\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\n        //   arr.push(\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n        //       <th scope=\"row\" >{i+1}</th>\n        //       <td >{child[i].name}</td>\n        //       <td>{child[i].responsible}</td>\n        //       <td>{child[i].filetype}</td>\n        //       <td>{child[i].filedes}</td>\n        //       <td>{child[i].time}</td>\n        //     </tr>\n        //     )\n        // }\n      }\n  \n      return arr;\n    }\n\n  }\n\n  \n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Check List\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default CheckList;\n\n","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/Documents.js",["225","226","227","228","229","230","231","232","233"],"\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\n\nfunction Documents({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        arr.push(\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n          <th scope=\"row\" >{i+1}</th>\n          <td >{child[i].name}</td>\n          <td>{child[i].responsible}</td>\n          <td>{child[i].filetype}</td>\n          <td>{child[i].filedes}</td>\n          <td>{child[i].time}</td>\n        </tr>\n        )\n      }\n  \n      return arr;\n    }\n\n  }\n\n\n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('documentTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Documents\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default Documents;\n\n","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/WriteTransaction.js",["234","235","236","237"],"import Editor from \"../Editor\"\nimport PageTitle from \"../common/PageTitle\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\n\nfunction WriteTransaction({transactionInstance, account}){\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Add New Transaction\" className=\"text-sm-left\" />\n        </Row>\n    \n\n        {/* Editor */}\n        <Row>\n          <Col lg=\"7\" md=\"12\">\n            <Editor transactionInstance={transactionInstance} account={account} />\n          </Col>\n        </Row>\n\n      </Container>\n      \n    )\n}\n\nexport default WriteTransaction;\n","/home/ubuntu/SafetyManagement_UI/client/src/components/pages/search_result.js",["238","239","240","241","242","243","244","245","246"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\n\nfunction Search_Result({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        console.log(sessionStorage.getItem('search'));\n        if(sessionStorage.getItem('search') === null){\n          arr.push(\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n              <th scope=\"row\" >{i+1}</th>\n              <td >{child[i].name}</td>\n              <td>{child[i].responsible}</td>\n              <td>{child[i].filetype}</td>\n              <td>{child[i].filedes}</td>\n              <td>{child[i].time}</td>\n            </tr>\n            )\n        }\n        else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\n          arr.push(\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n              <th scope=\"row\" >{i+1}</th>\n              <td >{child[i].name}</td>\n              <td>{child[i].responsible}</td>\n              <td>{child[i].filetype}</td>\n              <td>{child[i].filedes}</td>\n              <td>{child[i].time}</td>\n            </tr>\n            )\n        }\n      }\n  \n      return arr;\n    }\n\n  }\n\n\n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          console.log(fileurl)\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    // sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Results\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default Search_Result;\n\n","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainFooter.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/MainSidebar.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/MainNavbar.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/pagination.js",["247","248","249","250","251","252"],"// import styled from \"styled-components\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Nav } from \"shards-react\";\n\nfunction Pagination({ total, limit, page, setPage }) {\n  const numPages = Math.ceil(total / limit);\n\n  return (\n    <>\n      <Nav>\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\n          &lt;\n        </Button>\n        {Array(numPages)\n          .fill()\n          .map((_, i) => (\n            <Button\n              key={i + 1}\n              onClick={() => setPage(i + 1)}\n              aria-current={page === i + 1 ? \"page\" : null}\n            >\n              {i + 1}\n            </Button>\n          ))}\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\n          &gt;\n        </Button>\n      </Nav>\n    </>\n  );\n}\n\n// const Nav = styled.nav`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   gap: 4px;\n//   margin: 16px;\n// `;\n\n// const Button = styled.button`\n//   border: none;\n//   border-radius: 8px;\n//   padding: 8px;\n//   margin: 0;\n//   background: black;\n//   color: white;\n//   font-size: 1rem;\n\n//   &:hover {\n//     background: tomato;\n//     cursor: pointer;\n//     transform: translateY(-2px);\n//   }\n\n//   &[disabled] {\n//     background: grey;\n//     cursor: revert;\n//     transform: revert;\n//   }\n\n//   &[aria-current] {\n//     background: deeppink;\n//     font-weight: bold;\n//     cursor: revert;\n//     transform: revert;\n//   }\n// `;\n\nexport default Pagination;","/home/ubuntu/SafetyManagement_UI/client/src/components/Editor.js",["253","254","255","256","257","258","259"],"import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  ListGroup,\n  ListGroupItem,\n  Form,\n  Alert\n} from \"shards-react\";\n\nimport CompleteFormExample from \"./elements/CompleteFormExample\"\n\nfunction Editor({transactionInstance, account}) {\n  return (\n    <Card small>\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">Form Example</h6>\n    </CardHeader>\n    <CompleteFormExample transactionInstance={transactionInstance} account={account}/>\n  </Card>\n  )\n};\n\nexport default Editor;\n","/home/ubuntu/SafetyManagement_UI/client/src/components/common/PageTitle.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarMainNavbar.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarSearch.js",["260"],"import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarNavItems.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarSearch.js",["261","262","263","264","265","266","267","268","269"],"import React, {Component} from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput,\n  Button\n} from \"shards-react\";\nimport { FormControl } from \"react-bootstrap\";\nimport {Link, Routes, Route, useNavigate} from 'react-router-dom';\n\nexport default class Search extends Component{ \n\nstate = {\n  searchText: \"\"\n};\n\nhandleSearchInput = event => {\n  this.setState({\n    searchText: event.target.value\n  });\n};\n\n  handleSearchSubmit = (event) => {\n    event.preventDefault();\n    window.location.replace(\"/search_result\")\n      // this.props.history.push({\n      //   pathname: \"/search_result\"\n      // });\n    \n    // if (sessionStorage.getItem('search')) {\n    //   this.props.history.push({\n    //     pathname: \"/results\",\n    //     state: {\n    //       searchText: this.state.searchText\n    //     }\n    //   });\n    // } else {\n    //   alert(\"Please enter some search text!\");\n    // }\n  };\n\n  \n\nrender(){\n  return(\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\" onSubmit={this.handleSearchSubmit}>\n    {/* <InputGroup seamless className=\"ml-3\"> */}\n      {/* <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n      </InputGroupAddon> */}\n      <FormControl\n        className=\"navbar-search\"\n        placeholder=\"Search for something...\"\n        Style={{width:\"20%\"}}\n        // onChange={this.handleSearchInput}\n        // value={this.state.searchText}\n\n        onChange = {(event) => sessionStorage.setItem('search', event.target.value)}\n      />\n      \n      {/* <Button onClick={this.handleSearchSubmit} variant=\"outline-info\">\n              Search\n            </Button> */}\n    {/* </InputGroup> */}\n  </Form>\n  )\n}\n}\n","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarToggle.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarNav/NavbarNav.js",["270","271"],"import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    {/* <Notifications /> */}\n    <UserActions />\n  </Nav>\n);\n","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/index.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainSidebar/SidebarNavItem.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/elements/CompleteFormExample.js",["272","273","274","275","276","277","278","279","280"],"\nimport React, { useRef, useEffect, useState } from \"react\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\n// const ipfsClient = require('ipfs-http-client');\n\nconst projectId = '2DCS0fCRlt3GtE33WGUMaHo05dI';\nconst projectSecret = '1df2c89edfa1422733bd46ebf81be1fa';\nconst auth =\n    'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst client = ipfsHttpClient({\n    host: 'infura-ipfs.io',\n    port: 5001,\n    protocol: 'https',\n    // apiPath: '/api/v0',\n    headers: {\n        authorization: auth,\n    },\n});\n// client.pin.add('QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn').then((res) => {\n//   console.log(res);\n// });\n\n// const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\n\n\nfunction CompleteFormExample({transactionInstance, account}){\n\n  const [CategorySelect, setCategorySelect] = useState(\"\")\n  const [Filename, setFilename] = useState(\"\")\n  const [Filedes, setFiledes] = useState(\"\")\n  const [Regsitrant, setRegsitrant] = useState(\"\")\n  const [Responsible, setResponsible] = useState(\"\")\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  const [Filetype, setFiletype] = useState(\"\");\n  \n  const [file, setFile] = useState({})\n  const [fileUrl, setFileUrl] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [uploaded, setUploaded] = useState(false)\n\n\n  const uploadFile = async (e) => {\n    // setLoading(true)\n    e.preventDefault()\n\n    try {\n      console.log('Error ipfs')\n        const added = await client.add(file);\n        console.log('Error ipfs')\n        console.log(file)\n        console.log(added)\n        const url = `https://safetymanagement.infura-ipfs.io/ipfs/${added.path}`\n        console.log(url)\n        // setUrl(url)\n        setFileUrl(url)\n        setUploaded(true)\n        setIpfsHash(ipfsHash => added.path)\n        setLoading(true)\n    } catch (err) {\n        console.log('Error uploading the file : ', err)\n        setLoading(false)\n    }\n}\n\nconst preUpload = (e) => {\n    if (e.target.value !== '') {\n        setFile(e.target.files[0])\n    } else {\n        setFile({})\n    }\n}\n\n  const sendTransaction = async (e) => {\n\n    let cnt = file.name.length;\n    let target = '';\n    for(let i = cnt-1; i > 0; i-- ){\n      target += file.name[i];\n      if(file.name[i] == '.') break;\n    }\n    let temp = '';\n    for(let i = target.length-2; i >= 0; i--){\n      temp += target[i];\n    }\n    console.log(ipfsHash)\n    await transactionInstance.sendTrans(CategorySelect, Filename, ipfsHash, Regsitrant, Responsible, temp, Filedes,{\n      from: account,\n      //value: e.web3.utils.toWei('10', \"ether\"),\n      gas: 1000000\n    })\n    \n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n    console.log(events[events.length-1].transactionHash)\n    //this.updateAllTransactions();\n    window.location.replace(\"/\")\n    // submitReview();\n  }\n  \n  const category_select = (e) => {\n    setCategorySelect(e.target.value);\n    console.log(CategorySelect);\n  };\n  \n  const ipfsupload = (e) => {\n    setFileUrl(e.target.value);\n    // setFiletype(fileUrl);\n    // setLoading(true);\n    preUpload(e);\n  }\n\n  const uploadbutton = () => {\n    if (file.name) {\n    return (\n      <div>\n    {ipfsHash ? (\n      <h5>\n          Uploaded Successfully ✅\n      </h5>\n  ) : \n  (\n      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={uploadFile}>Upload File</Button>\n  )}\n  </div>\n    )\n  }\n  }\n\n  const CustomFileUpload = () => {\n\n    return (\n    <div className=\"custom-file mb-3\">\n    <input type=\"file\" className=\"custom-file-input\" id=\"customFile2\" \n                onChange = {ipfsupload}/>\n    {file.name ?\n    \n       (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\n       {file.name}\n        </label>) : \n        (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\n       파일을 선택하세요\n        </label>)\n    }\n    </div>\n    )\n  }\n\n  return(\n    <ListGroup flush>\n      <ListGroupItem className=\"p-3\">\n        <Row>\n          <Col>\n            <Form>\n              <FormGroup>\n                <label htmlFor=\"feInputState\">카테고리</label>\n                <FormSelect id=\"feInputState\" value={CategorySelect} onChange={category_select}>\n                  {/* <option>CCTV</option> */}\n                  <option value = \"선택\">선택</option>\n                  <option value = \"Document\">전자문서</option>\n                  <option value = \"CheckList\">체크리스트</option>\n                  {/* <option>온도 센서</option>\n                  <option>압력 센서</option>\n                  <option>적외선 센서</option>  */}\n                </FormSelect>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress\">파일명</label>\n                <FormInput id=\"feInputAddress\" placeholder=\"파일명을 입력하세요\" onChange = {(event) => setFilename(event.target.value)}/>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  placeholder=\"파일 설명을 입력하세요\"\n                  onChange = {(event) => setFiledes(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  placeholder=\"업로더 이름을 입력하세요\"\n                  onChange = {(event) => setRegsitrant(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  placeholder=\"업로드 책임자를 입력하세요\"\n                  onChange = {(event) => setResponsible(event.target.value)}\n                />\n              </FormGroup>\n\n              <strong className=\"d-block mb-2\">\n                파일 업로드\n              </strong>\n            </Form>\n              <CustomFileUpload />\n              \n              {uploadbutton()}\n              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>트랜잭션 업로드</Button>\n          </Col>\n        </Row>\n      </ListGroupItem>\n    </ListGroup>\n  )\n                };\n\nexport default CompleteFormExample;","/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarNav/Notifications.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/layout/MainNavbar/NavbarNav/UserActions.js",["281","282","283","284"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\n\nexport default class UserActions extends React.Component {\n\n  // const [user_name, setUser_name] = useState(\"\");\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  log_out(){\n    sessionStorage.removeItem('user_id')\n    document.location.href = '/'\n  }\n\n  // useEffect(() => {\n  \n  //   async function user_set_id(){\n\n  //     setUser_name(sessionStorage.getItem('user_id'));\n  //   }\n  //   user_set_id();\n  \n  // }, []);\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <span className=\"d-none d-md-inline-block\">{sessionStorage.getItem('user_id')}</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem onClick={this.log_out} className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/constants.js",["285"],"export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","/home/ubuntu/SafetyManagement_UI/client/src/components/flux/dispatcher.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/flux/store.js",[],"/home/ubuntu/SafetyManagement_UI/client/src/components/data/sidebar-nav-items.js",["286"],"export default function() {\n  return [\n    {\n      title: \"전체보기\",\n      to: \"/all\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"CCTV\",\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: \"/cctv\",\n    },\n    {\n      title: \"전자문서\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/documents\",\n    },\n    {\n      title: \"체크리스트\",\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\n      to: \"/checklist\",\n    },\n    {\n      title: \"온도 센서\",\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n      to: \"/temp\",\n    },\n    {\n      title: \"압력 센서\",\n      htmlBefore: '<i class=\"material-icons\">person</i>',\n      to: \"/pressure\",\n    },\n    {\n      title: \"적외선 센서\",\n      htmlBefore: '<i class=\"material-icons\">error</i>',\n      to: \"/ray\",\n    }\n  ];\n}\n",{"ruleId":"287","severity":1,"message":"288","line":35,"column":17,"nodeType":"289","messageId":"290","endLine":35,"endColumn":23},{"ruleId":"287","severity":1,"message":"291","line":35,"column":25,"nodeType":"289","messageId":"290","endLine":35,"endColumn":34},{"ruleId":"287","severity":1,"message":"292","line":35,"column":36,"nodeType":"289","messageId":"290","endLine":35,"endColumn":44},{"ruleId":"287","severity":1,"message":"293","line":38,"column":8,"nodeType":"289","messageId":"290","endLine":38,"endColumn":18},{"ruleId":"287","severity":1,"message":"294","line":54,"column":10,"nodeType":"289","messageId":"290","endLine":54,"endColumn":14},{"ruleId":"287","severity":1,"message":"295","line":59,"column":22,"nodeType":"289","messageId":"290","endLine":59,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":76,"column":50,"nodeType":"298","messageId":"299","endLine":76,"endColumn":52},{"ruleId":"296","severity":1,"message":"297","line":77,"column":55,"nodeType":"298","messageId":"299","endLine":77,"endColumn":57},{"ruleId":"296","severity":1,"message":"297","line":78,"column":55,"nodeType":"298","messageId":"299","endLine":78,"endColumn":57},{"ruleId":"296","severity":1,"message":"297","line":79,"column":55,"nodeType":"298","messageId":"299","endLine":79,"endColumn":57},{"ruleId":"296","severity":1,"message":"297","line":131,"column":17,"nodeType":"298","messageId":"299","endLine":131,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":133,"column":4,"nodeType":"302","endLine":133,"endColumn":13,"suggestions":"303"},{"ruleId":"287","severity":1,"message":"288","line":50,"column":17,"nodeType":"289","messageId":"290","endLine":50,"endColumn":23},{"ruleId":"287","severity":1,"message":"304","line":54,"column":10,"nodeType":"289","messageId":"290","endLine":54,"endColumn":16},{"ruleId":"287","severity":1,"message":"305","line":54,"column":18,"nodeType":"289","messageId":"290","endLine":54,"endColumn":23},{"ruleId":"287","severity":1,"message":"306","line":54,"column":25,"nodeType":"289","messageId":"290","endLine":54,"endColumn":29},{"ruleId":"287","severity":1,"message":"307","line":57,"column":8,"nodeType":"289","messageId":"290","endLine":57,"endColumn":14},{"ruleId":"300","severity":1,"message":"308","line":64,"column":4,"nodeType":"289","endLine":64,"endColumn":13,"suggestions":"309"},{"ruleId":"287","severity":1,"message":"288","line":187,"column":17,"nodeType":"289","messageId":"290","endLine":187,"endColumn":23},{"ruleId":"287","severity":1,"message":"291","line":187,"column":25,"nodeType":"289","messageId":"290","endLine":187,"endColumn":34},{"ruleId":"287","severity":1,"message":"292","line":187,"column":36,"nodeType":"289","messageId":"290","endLine":187,"endColumn":44},{"ruleId":"287","severity":1,"message":"310","line":209,"column":8,"nodeType":"289","messageId":"290","endLine":209,"endColumn":27},{"ruleId":"287","severity":1,"message":"311","line":210,"column":8,"nodeType":"289","messageId":"290","endLine":210,"endColumn":12},{"ruleId":"287","severity":1,"message":"312","line":211,"column":8,"nodeType":"289","messageId":"290","endLine":211,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":236,"column":53,"nodeType":"315","messageId":"316","endLine":236,"endColumn":111},{"ruleId":"287","severity":1,"message":"288","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":23},{"ruleId":"287","severity":1,"message":"291","line":1,"column":25,"nodeType":"289","messageId":"290","endLine":1,"endColumn":34},{"ruleId":"287","severity":1,"message":"317","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":7},{"ruleId":"287","severity":1,"message":"318","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":15},{"ruleId":"287","severity":1,"message":"319","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":13},{"ruleId":"287","severity":1,"message":"293","line":16,"column":8,"nodeType":"289","messageId":"290","endLine":16,"endColumn":18},{"ruleId":"287","severity":1,"message":"312","line":23,"column":8,"nodeType":"289","messageId":"290","endLine":23,"endColumn":14},{"ruleId":"287","severity":1,"message":"320","line":33,"column":11,"nodeType":"289","messageId":"290","endLine":33,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":23},{"ruleId":"287","severity":1,"message":"291","line":1,"column":25,"nodeType":"289","messageId":"290","endLine":1,"endColumn":34},{"ruleId":"287","severity":1,"message":"318","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":15},{"ruleId":"287","severity":1,"message":"293","line":16,"column":8,"nodeType":"289","messageId":"290","endLine":16,"endColumn":18},{"ruleId":"287","severity":1,"message":"306","line":22,"column":10,"nodeType":"289","messageId":"290","endLine":22,"endColumn":14},{"ruleId":"287","severity":1,"message":"321","line":22,"column":16,"nodeType":"289","messageId":"290","endLine":22,"endColumn":27},{"ruleId":"287","severity":1,"message":"312","line":23,"column":8,"nodeType":"289","messageId":"290","endLine":23,"endColumn":14},{"ruleId":"287","severity":1,"message":"322","line":29,"column":10,"nodeType":"289","messageId":"290","endLine":29,"endColumn":18},{"ruleId":"287","severity":1,"message":"317","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":7},{"ruleId":"287","severity":1,"message":"323","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":12},{"ruleId":"287","severity":1,"message":"324","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":12},{"ruleId":"287","severity":1,"message":"318","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":15},{"ruleId":"287","severity":1,"message":"319","line":14,"column":3,"nodeType":"289","messageId":"290","endLine":14,"endColumn":13},{"ruleId":"287","severity":1,"message":"325","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":9},{"ruleId":"287","severity":1,"message":"326","line":21,"column":17,"nodeType":"289","messageId":"290","endLine":21,"endColumn":25},{"ruleId":"287","severity":1,"message":"295","line":23,"column":22,"nodeType":"289","messageId":"290","endLine":23,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":40,"column":16,"nodeType":"298","messageId":"299","endLine":40,"endColumn":18},{"ruleId":"287","severity":1,"message":"317","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":7},{"ruleId":"287","severity":1,"message":"323","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":12},{"ruleId":"287","severity":1,"message":"324","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":12},{"ruleId":"287","severity":1,"message":"318","line":14,"column":3,"nodeType":"289","messageId":"290","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"319","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":13},{"ruleId":"287","severity":1,"message":"325","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":9},{"ruleId":"287","severity":1,"message":"326","line":21,"column":17,"nodeType":"289","messageId":"290","endLine":21,"endColumn":25},{"ruleId":"287","severity":1,"message":"295","line":23,"column":22,"nodeType":"289","messageId":"290","endLine":23,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":40,"column":16,"nodeType":"298","messageId":"299","endLine":40,"endColumn":18},{"ruleId":"287","severity":1,"message":"317","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":7},{"ruleId":"287","severity":1,"message":"323","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":12},{"ruleId":"287","severity":1,"message":"324","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":12},{"ruleId":"287","severity":1,"message":"318","line":14,"column":3,"nodeType":"289","messageId":"290","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"319","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":13},{"ruleId":"287","severity":1,"message":"325","line":16,"column":3,"nodeType":"289","messageId":"290","endLine":16,"endColumn":9},{"ruleId":"287","severity":1,"message":"326","line":22,"column":17,"nodeType":"289","messageId":"290","endLine":22,"endColumn":25},{"ruleId":"287","severity":1,"message":"295","line":24,"column":22,"nodeType":"289","messageId":"290","endLine":24,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":41,"column":16,"nodeType":"298","messageId":"299","endLine":41,"endColumn":18},{"ruleId":"287","severity":1,"message":"327","line":3,"column":31,"nodeType":"289","messageId":"290","endLine":3,"endColumn":35},{"ruleId":"287","severity":1,"message":"328","line":3,"column":37,"nodeType":"289","messageId":"290","endLine":3,"endColumn":47},{"ruleId":"287","severity":1,"message":"329","line":3,"column":49,"nodeType":"289","messageId":"290","endLine":3,"endColumn":57},{"ruleId":"287","severity":1,"message":"325","line":3,"column":59,"nodeType":"289","messageId":"290","endLine":3,"endColumn":65},{"ruleId":"287","severity":1,"message":"317","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":7},{"ruleId":"287","severity":1,"message":"323","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":12},{"ruleId":"287","severity":1,"message":"324","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":12},{"ruleId":"287","severity":1,"message":"318","line":13,"column":3,"nodeType":"289","messageId":"290","endLine":13,"endColumn":15},{"ruleId":"287","severity":1,"message":"319","line":14,"column":3,"nodeType":"289","messageId":"290","endLine":14,"endColumn":13},{"ruleId":"287","severity":1,"message":"325","line":15,"column":3,"nodeType":"289","messageId":"290","endLine":15,"endColumn":9},{"ruleId":"287","severity":1,"message":"326","line":21,"column":17,"nodeType":"289","messageId":"290","endLine":21,"endColumn":25},{"ruleId":"287","severity":1,"message":"295","line":23,"column":22,"nodeType":"289","messageId":"290","endLine":23,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":40,"column":16,"nodeType":"298","messageId":"299","endLine":40,"endColumn":18},{"ruleId":"287","severity":1,"message":"330","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":19},{"ruleId":"287","severity":1,"message":"331","line":2,"column":21,"nodeType":"289","messageId":"290","endLine":2,"endColumn":24},{"ruleId":"287","severity":1,"message":"332","line":2,"column":26,"nodeType":"289","messageId":"290","endLine":2,"endColumn":29},{"ruleId":"287","severity":1,"message":"327","line":2,"column":31,"nodeType":"289","messageId":"290","endLine":2,"endColumn":35},{"ruleId":"287","severity":1,"message":"328","line":2,"column":37,"nodeType":"289","messageId":"290","endLine":2,"endColumn":47},{"ruleId":"287","severity":1,"message":"329","line":2,"column":49,"nodeType":"289","messageId":"290","endLine":2,"endColumn":57},{"ruleId":"287","severity":1,"message":"330","line":3,"column":3,"nodeType":"289","messageId":"290","endLine":3,"endColumn":12},{"ruleId":"287","severity":1,"message":"331","line":4,"column":3,"nodeType":"289","messageId":"290","endLine":4,"endColumn":6},{"ruleId":"287","severity":1,"message":"332","line":5,"column":3,"nodeType":"289","messageId":"290","endLine":5,"endColumn":6},{"ruleId":"287","severity":1,"message":"333","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":12},{"ruleId":"287","severity":1,"message":"334","line":9,"column":3,"nodeType":"289","messageId":"290","endLine":9,"endColumn":16},{"ruleId":"287","severity":1,"message":"317","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":7},{"ruleId":"287","severity":1,"message":"335","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":8},{"ruleId":"336","severity":1,"message":"337","line":10,"column":1,"nodeType":"338","endLine":25,"endColumn":3},{"ruleId":"287","severity":1,"message":"339","line":4,"column":3,"nodeType":"289","messageId":"290","endLine":4,"endColumn":13},{"ruleId":"287","severity":1,"message":"340","line":5,"column":3,"nodeType":"289","messageId":"290","endLine":5,"endColumn":18},{"ruleId":"287","severity":1,"message":"341","line":6,"column":3,"nodeType":"289","messageId":"290","endLine":6,"endColumn":17},{"ruleId":"287","severity":1,"message":"323","line":7,"column":3,"nodeType":"289","messageId":"290","endLine":7,"endColumn":12},{"ruleId":"287","severity":1,"message":"325","line":8,"column":3,"nodeType":"289","messageId":"290","endLine":8,"endColumn":9},{"ruleId":"287","severity":1,"message":"306","line":11,"column":9,"nodeType":"289","messageId":"290","endLine":11,"endColumn":13},{"ruleId":"287","severity":1,"message":"304","line":11,"column":15,"nodeType":"289","messageId":"290","endLine":11,"endColumn":21},{"ruleId":"287","severity":1,"message":"305","line":11,"column":23,"nodeType":"289","messageId":"290","endLine":11,"endColumn":28},{"ruleId":"287","severity":1,"message":"321","line":11,"column":30,"nodeType":"289","messageId":"290","endLine":11,"endColumn":41},{"ruleId":"287","severity":1,"message":"342","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":21},{"ruleId":"336","severity":1,"message":"337","line":7,"column":1,"nodeType":"338","endLine":12,"endColumn":3},{"ruleId":"287","severity":1,"message":"288","line":2,"column":17,"nodeType":"289","messageId":"290","endLine":2,"endColumn":23},{"ruleId":"287","severity":1,"message":"291","line":2,"column":25,"nodeType":"289","messageId":"290","endLine":2,"endColumn":34},{"ruleId":"287","severity":1,"message":"318","line":12,"column":3,"nodeType":"289","messageId":"290","endLine":12,"endColumn":15},{"ruleId":"287","severity":1,"message":"343","line":49,"column":10,"nodeType":"289","messageId":"290","endLine":49,"endColumn":18},{"ruleId":"287","severity":1,"message":"344","line":49,"column":20,"nodeType":"289","messageId":"290","endLine":49,"endColumn":31},{"ruleId":"287","severity":1,"message":"345","line":52,"column":10,"nodeType":"289","messageId":"290","endLine":52,"endColumn":17},{"ruleId":"287","severity":1,"message":"346","line":53,"column":10,"nodeType":"289","messageId":"290","endLine":53,"endColumn":17},{"ruleId":"287","severity":1,"message":"347","line":54,"column":10,"nodeType":"289","messageId":"290","endLine":54,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":94,"column":23,"nodeType":"298","messageId":"299","endLine":94,"endColumn":25},{"ruleId":"287","severity":1,"message":"291","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":26},{"ruleId":"287","severity":1,"message":"292","line":1,"column":28,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"288","line":1,"column":38,"nodeType":"289","messageId":"290","endLine":1,"endColumn":44},{"ruleId":"287","severity":1,"message":"306","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":14},{"ruleId":"336","severity":1,"message":"348","line":1,"column":1,"nodeType":"338","endLine":4,"endColumn":3},{"ruleId":"336","severity":1,"message":"349","line":1,"column":1,"nodeType":"338","endLine":40,"endColumn":2},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Connection' is defined but never used.","'web3' is assigned a value but never used.","'setblock_list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account', 'block_list', and 'transactionInstance'. Either include them or remove the dependency array.","ArrayExpression",["350"],"'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'SignUp' is defined but never used.","React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isLogin] as a second argument to the useEffect Hook.",["351"],"'TransactionContract' is defined but never used.","'Web3' is defined but never used.","'moment' is defined but never used.","react/jsx-pascal-case","Imported JSX component Search_Result must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'Form' is defined but never used.","'FormCheckbox' is defined but never used.","'FormSelect' is defined but never used.","'routeChange' is assigned a value but never used.","'useNavigate' is defined but never used.","'Password' is assigned a value but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'setLimit' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Alert' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Notifications' is defined but never used.","'Filetype' is assigned a value but never used.","'setFiletype' is assigned a value but never used.","'fileUrl' is assigned a value but never used.","'loading' is assigned a value but never used.","'uploaded' is assigned a value but never used.","Assign object to a variable before exporting as module default","Unexpected default export of anonymous function",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [account, block_list, loading, transactionInstance]",{"range":"356","text":"357"},"Add dependencies array: [isLogin]",{"range":"358","text":"359"},[4540,4549],"[account, block_list, loading, transactionInstance]",[2430,2430],", [isLogin]"]
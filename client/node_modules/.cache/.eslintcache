<<<<<<< HEAD
[{"C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\index.js":"1","C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\App.jsx":"2","C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js":"3","C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\login.js":"4","C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\signup.js":"5"},{"size":265,"mtime":1657517658392,"results":"6","hashOfConfig":"7"},{"size":6212,"mtime":1658295764253,"results":"8","hashOfConfig":"7"},{"size":2843,"mtime":1657517658392,"results":"9","hashOfConfig":"7"},{"size":1676,"mtime":1658213576982,"results":"10","hashOfConfig":"7"},{"size":3192,"mtime":1658295825730,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xpouwb",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\index.js",[],["23","24"],"C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\App.jsx",["25","26","27","28","29"],"C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js",[],"C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\login.js",[],"C:\\Users\\mcnl\\Desktop\\gong\\BlockchainSafetyManagement\\client\\src\\signup.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":15,"column":10,"nodeType":"36","messageId":"37","endLine":15,"endColumn":14},{"ruleId":"34","severity":1,"message":"38","line":27,"column":10,"nodeType":"36","messageId":"37","endLine":27,"endColumn":24},{"ruleId":"34","severity":1,"message":"39","line":90,"column":15,"nodeType":"36","messageId":"37","endLine":90,"endColumn":21},{"ruleId":"40","severity":1,"message":"41","line":109,"column":17,"nodeType":"42","messageId":"43","endLine":109,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":111,"column":4,"nodeType":"46","endLine":111,"endColumn":13,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'web3' is assigned a value but never used.","Identifier","unusedVar","'transactionCnt' is assigned a value but never used.","'record' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transactionInstance'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTransactionCnt' needs the current value of 'transactionInstance'.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [loading, transactionInstance]",{"range":"53","text":"54"},[3821,3830],"[loading, transactionInstance]"]
=======
[{"D:\\BlockchainSafetyManagement\\client\\src\\index.js":"1","D:\\BlockchainSafetyManagement\\client\\src\\App.jsx":"2","D:\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js":"3","D:\\BlockchainSafetyManagement\\client\\src\\login.js":"4"},{"size":265,"mtime":1657170204734,"results":"5","hashOfConfig":"6"},{"size":5980,"mtime":1658283363843,"results":"7","hashOfConfig":"6"},{"size":2843,"mtime":1657260466623,"results":"8","hashOfConfig":"6"},{"size":1621,"mtime":1658283261021,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"q0esf",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"D:\\BlockchainSafetyManagement\\client\\src\\index.js",[],["20","21"],"D:\\BlockchainSafetyManagement\\client\\src\\App.jsx",["22","23","24","25"],"import React, { useEffect, useState } from \"react\";\nimport {FileUpload} from './components/FileUpload';\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport moment from \"moment\";\nimport Axios from 'axios';\nimport Login from './login';\n\n\n\nexport default function App() {\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [web3, setWeb3] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [category, setCategory] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  const [registrant, setRegsitrant] = useState(\"\");\n  const [responsibleManager, setResponsibleManager] = useState(\"\");\n  const [fileType, setFileType] = useState(\"\");\n  const [fileDescription, setFileDescription] = useState(\"\");\n  const [transactionCnt, setTransactionCnt] = useState(\"\");\n\n  const [time, setTime] = useState(\"\");\n  const [ipfsHash_, setIpfsHash_] = useState(\"\");\n  const [category_, setCategory_] = useState(\"\");\n  const [name_, setName_] = useState(\"\");\n  const [registrant_, setRegsitrant_] = useState(\"\");\n  const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n  const [fileType_, setFileType_] = useState(\"\");\n  const [fileDescription_, setFileDescription_] = useState(\"\");\n\n  const submitReview = ()=>{\n    Axios.post('http://localhost:3001/api/insert', {\n      category: category_,\n      name: name_,\n      time: time,\n      ipfsHash: ipfsHash_,\n      registrant: registrant_,\n      responsible: responsibleManager_,\n      filetype: fileType_,\n      filedes: fileDescription_\n    }).then(()=>{\n      alert('등록 완료!');\n    })\n  };\n\n\n  useEffect(() => {\n    async function componentWillMount(e) {\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n      setWeb3(web3);\n      console.log(web3)\n      const contract = require(\"truffle-contract\");\n      const transaction = contract(TransactionContract);\n      console.log(web3);\n      transaction.setProvider(web3.currentProvider);\n  \n      web3.eth.getAccounts((error, accounts) => {\n        if (!error){\n          transaction.deployed().then(instance => {\n            setTransactionInstance(instance);\n            setAccount(accounts[0]);\n            setLoading(true);\n          })\n        }\n      })\n      \n    }\n\n    componentWillMount();\n    // setTimeout(() => {  console.log(\"World!\"); }, 1000);\n    // updateAllTransactions();\n\n    \n\n  }, []);\n\n\n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n      for(let i=0; i<events.length; i+=1){\n        const record = {};\n        var time_ = moment.unix(events[i].returnValues.time);\n\n        setCategory_(events[i].returnValues.category.toString());\n        setName_(events[i].returnValues.name.toString());\n        setTime(time_.toString());\n        setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\n        setRegsitrant_(events[i].returnValues.registrant.toString());\n        setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\n        setFileType_(events[i].returnValues.file_type.toString());\n        setFileDescription_(events[i].returnValues.file_description.toString());\n        setTransactionCnt(transactionInstance.cntTransactions());\n        console.log(events[i].returnValues);\n      }\n      console.log(events.length);\n      console.log(events);\n  \n    }\n\n    if (loading == true) updateAllTransactions();\n\n}, [loading]);\n\n\n  const sendTransaction = async (e) => {\n    console.log(web3);\n    console.log(account);\n    console.log(transactionInstance);\n    await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n      from: account,\n      //value: e.web3.utils.toWei('10', \"ether\"),\n      gas: 1000000\n    })\n    \n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n    console.log(events[events.length-1].transactionHash)\n    //this.updateAllTransactions();\n\n    submitReview();\n  }\n\n\n\n\n  return (\n    <div>\n      <Login />\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\n      <br></br>\n      \n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\n      FileUrl :{\" \"}\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {fileUrl}\n      </a>\n      <br></br>\n\n      <p>Your account: {account}</p>\n      <br></br>\n\n      <button onClick={sendTransaction}>\n        트랜잭션 추가\n      </button>\n      {/* <button onClick={updateAllTransactions}>\n        트랜잭션 보여주기\n      </button> */}\n      <br></br>\n\n      <p>all transactions:</p>\n      <br></br>\n      <p>Category: {category_}</p>\n      <p>File Name: {name_}</p>\n      <p>Time: {time}</p>\n      <p>IPFS Hash: {ipfsHash_}</p>\n      <p>Registrant: {registrant_}</p>\n      <p>Responsible Manager: {responsibleManager_}</p>\n      <p>File Type: {fileType_}</p>\n      <p>File Description: {fileDescription_}</p>\n    </div>\n  )\n}\n\n","D:\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js",[],"D:\\BlockchainSafetyManagement\\client\\src\\login.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":26,"column":10,"nodeType":"32","messageId":"33","endLine":26,"endColumn":24},{"ruleId":"30","severity":1,"message":"34","line":89,"column":15,"nodeType":"32","messageId":"33","endLine":89,"endColumn":21},{"ruleId":"35","severity":1,"message":"36","line":108,"column":17,"nodeType":"37","messageId":"38","endLine":108,"endColumn":19},{"ruleId":"39","severity":1,"message":"40","line":110,"column":4,"nodeType":"41","endLine":110,"endColumn":13,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'transactionCnt' is assigned a value but never used.","Identifier","unusedVar","'record' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transactionInstance'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTransactionCnt' needs the current value of 'transactionInstance'.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [loading, transactionInstance]",{"range":"48","text":"49"},[3687,3696],"[loading, transactionInstance]"]
>>>>>>> 1e28845e7bb4410d045b8042c02b49e9ac7b6e3f

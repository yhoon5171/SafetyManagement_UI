{"version":3,"sources":["../node_modules/truffle-contract/node_modules/web3-eth-accounts/src sync","../node_modules/truffle-interface-adapter/node_modules/web3-eth-accounts/src sync","components/pages/Ray.js","components/flux/constants.js","components/flux/dispatcher.js","components/flux/store.js","components/data/sidebar-nav-items.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/common/PageTitle.js","components/pages/CCTV.js","components/pagination.js","components/pages/All.js","components/pages/Pressure.js","components/pages/Temp.js","components/pages/CheckList.js","components/pages/Documents.js","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainFooter.js","components/Editor.js","components/pages/WriteTransaction.js","components/pages/search_result.js","App.jsx","blockchain/connection.js","components/pages/SignUp.js","components/pages/Login.js","components/pages/FirstPage.js","index.js","components/elements/CompleteFormExample.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Ray","fluid","className","pill","Dispatcher","_store","menuVisible","navItems","title","to","htmlBefore","htmlAfter","registerToActions","bind","toggleSidebar","register","actionType","payload","Constants","this","emit","callback","on","removeListener","EventEmitter","SidebarMainNavbar","props","handleToggleSidebar","dispatch","hideLogoText","type","href","style","lineHeight","onClick","React","Component","defaultProps","display","minHeight","seamless","placeholder","SidebarNavItem","item","tag","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","state","Store","getSidebarItems","onChange","addChangeListener","removeChangeListener","setState","items","map","idx","MainSidebar","sidebarNavItems","getMenuState","classes","classNames","lg","size","md","sm","order","offset","theme","outline","SidebarSearch","PageTitle","subtitle","attrs","xs","CCTV","noGutters","small","scope","Pagination","total","limit","page","setPage","numPages","Math","ceil","disabled","Array","fill","_","i","All","transactionInstance","useState","block_list","loading","setLoading","first","setFirst","detail","setDetail","detailcnt","setDetailcnt","repeatboardchild","child","start","arr","end","length","console","log","sessionStorage","getItem","push","cnt","cursor","name","responsible","filetype","filedes","time","nextId","useRef","useEffect","getPastEvents","fromBlock","toBlock","events","time_","moment","unix","returnValues","fileurl","ipfs_hash","toString","current","category","ipfsHash","registrant","responsible_manager","file_type","file_description","updateAllTransactions","removeItem","flush","htmlFor","target","rel","Pressure","Temp","CheckList","Documents","Search","searchText","handleSearchInput","event","value","handleSearchSubmit","preventDefault","window","location","replace","onSubmit","FormControl","Style","width","setItem","UserActions","visible","toggleUserActions","document","Dropdown","caret","toggle","NavLink","DropdownMenu","right","open","log_out","navbar","NavbarToggle","handleClick","MainNavbar","layout","stickyTop","maxWidth","NavbarNav","MainFooter","contained","menuItems","copyright","Link","Editor","account","CompleteFormExample","WriteTransaction","Search_Result","detail_click","App","path","element","Connection","setWeb3","setAccount","setTransactionInstance","web3","Web3","providers","HttpProvider","contract","require","transaction","TransactionContract","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","temp","componentWillMount","SignUp","CompanySelect","setCompanySelect","ID","setID","setPassword","Password2","setPassword2","Name","setName","Email","setEmail","fontSize","block","Axios","post","params","res","alert","catch","Login","inputId","setinputId","inputPw","setinputPw","signup","setsignup","useNavigate","textDecoration","fontWeight","data","msg","company","FirstPage","isLogin","setIsLogin","ReactDOM","createRoot","getElementById","render","auth","Buffer","from","projectId","client","ipfsHttpClient","host","port","protocol","headers","authorization","CategorySelect","setCategorySelect","Filename","setFilename","Filedes","setFiledes","Regsitrant","setRegsitrant","Responsible","setResponsible","setIpfsHash","file","setFile","setFileUrl","setUploaded","uploadFile","add","added","url","sendTransaction","sendTrans","gas","transactionHash","ipfsupload","files","preUpload","CustomFileUpload","uploadbutton"],"mappings":"yKAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,0CCRzB,SAAST,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,oMC6BVC,MAlBf,WAEE,OACC,cAAC,IAAD,CAAWC,OAAK,EAACC,UAAU,mCAA3B,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qCACA,uDACA,wFACA,cAAC,IAAD,CAAQC,MAAI,EAAZ,kCAMR,E,sEClCc,EACL,SADK,EAEG,iBCAH,M,OAAIC,Y,QCIfC,EAAS,CACXC,aAAa,EACbC,SCPO,CACL,CACEC,MAAO,2BACPC,GAAI,OACJC,WAAY,qCACZC,UAAW,IAEb,CACEH,MAAO,OACPE,WAAY,+CACZD,GAAI,SAEN,CACED,MAAO,2BACPE,WAAY,yCACZD,GAAI,cAEN,CACED,MAAO,iCACPE,WAAY,4CACZD,GAAI,cAEN,CACED,MAAO,4BACPE,WAAY,4CACZD,GAAI,SAEN,CACED,MAAO,4BACPE,WAAY,uCACZD,GAAI,aAEN,CACED,MAAO,kCACPE,WAAY,sCACZD,GAAI,UDgBK,M,kDAxCb,aAAe,IAAD,8BACZ,gBAEKG,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAErBT,EAAWW,SAAS,EAAKH,kBAAkBC,KAAvB,iBANR,CAOb,C,qDAED,YAA4C,IAAxBG,EAAuB,EAAvBA,WAAuB,EAAXC,QAC9B,GAAQD,IACDE,EACHC,KAAKL,eAIV,G,2BAED,WACET,EAAOC,aAAeD,EAAOC,YAC7Ba,KAAKC,KAAKF,EACX,G,0BAED,WACE,OAAOb,EAAOC,WACf,G,6BAED,WACE,OAAOD,EAAOE,QACf,G,+BAED,SAAkBc,GAChBF,KAAKG,GAAGJ,EAAkBG,EAC3B,G,kCAED,SAAqBA,GACnBF,KAAKI,eAAeL,EAAkBG,EACvC,K,GAtCiBG,iBEJdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,oBAAsB,EAAKA,oBAAoBd,KAAzB,gBAHV,CAIlB,C,uDAED,WACET,EAAWwB,SAAS,CAClBZ,WAAYE,GAEf,G,oBAED,WACE,IAAQW,EAAiBV,KAAKO,MAAtBG,aACR,OACE,qBAAK3B,UAAU,cAAf,SACE,eAAC,IAAD,CACEA,UAAU,gEACV4B,KAAK,QAFP,UAIE,cAAC,IAAD,CACE5B,UAAU,aACV6B,KAAK,IACLC,MAAO,CAAEC,WAAY,QAHvB,SAME,qBAAK/B,UAAU,iBAAf,UAQI2B,GAEJ,cAAC,IAAD,CAAMpB,GAAG,IAAT,SACI,sBAAMP,UAAU,0BAAhB,qCAQN,mBACEA,UAAU,iDACVgC,QAASf,KAAKQ,oBAFhB,SAIE,mBAAGzB,UAAU,iBAAb,0BAKT,K,GAvD6BiC,IAAMC,WAiEtCX,EAAkBY,aAAe,CAC/BR,cAAc,GAGDJ,QCnEA,oBACb,cAAC,IAAD,CAAMvB,UAAU,wEAAwE8B,MAAO,CAAEM,QAAS,OAAQC,UAAW,QAA7H,SACE,cAAC,IAAD,CAAYC,UAAQ,EAACtC,UAAU,OAA/B,SACE,eAAC,IAAD,CAAiB4B,KAAK,UAAtB,UACE,cAAC,IAAD,UACE,mBAAG5B,UAAU,iBAAb,sBAEF,cAAC,IAAD,CACEA,UAAU,gBACVuC,YAAY,0BACZ,aAAW,iBAVrB,ECuBeC,EA3BQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrB,cAAC,IAAD,UACE,eAAC,IAAD,CAASC,IAAKC,IAAcpC,GAAIkC,EAAKlC,GAArC,UACGkC,EAAKjC,YACJ,qBACER,UAAU,mCACV4C,wBAAyB,CAAEC,OAAQJ,EAAKjC,cAG3CiC,EAAKnC,OAAS,+BAAOmC,EAAKnC,QAC1BmC,EAAKhC,WACJ,qBACET,UAAU,mCACV4C,wBAAyB,CAAEC,OAAQJ,EAAKhC,iBAb3B,ECyCRqC,E,kDAvCb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,MAAQ,CACX1C,SAAU2C,EAAMC,mBAGlB,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBAPC,CAQlB,C,sDAED,WACEqC,EAAMG,kBAAkBlC,KAAKiC,SAC9B,G,kCAED,WACEF,EAAMI,qBAAqBnC,KAAKiC,SACjC,G,sBAED,WACEjC,KAAKoC,SAAL,2BACKpC,KAAK8B,OADV,IAEE1C,SAAU2C,EAAMC,oBAEnB,G,oBAED,WACE,IAAkBK,EAAUrC,KAAK8B,MAAzB1C,SACR,OACE,qBAAKL,UAAU,cAAf,SACE,cAAC,IAAD,CAAKA,UAAU,8BAAf,SACGsD,EAAMC,KAAI,SAACd,EAAMe,GAAP,OACT,cAAC,EAAD,CAA0Bf,KAAMA,GAAXe,EADZ,OAMlB,K,GArC2BvB,IAAMC,WCO9BuB,E,kDACJ,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,MAAQ,CACX3C,aAAa,EACbsD,gBAAiBV,EAAMC,mBAGzB,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBARC,CASlB,C,sDAED,WACEqC,EAAMG,kBAAkBlC,KAAKiC,SAC9B,G,kCAED,WACEF,EAAMI,qBAAqBnC,KAAKiC,SACjC,G,sBAED,WACEjC,KAAKoC,SAAL,2BACKpC,KAAK8B,OADV,IAEE3C,YAAa4C,EAAMW,eACnBD,gBAAiBV,EAAMC,oBAE1B,G,oBAGD,WAEE,IAAMW,EAAUC,IACd,eACA,OACA,SACA5C,KAAK8B,MAAM3C,aAAe,QAG5B,OACE,eAAC,IAAD,CACEsC,IAAI,QACJ1C,UAAW4D,EACXE,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,GAJd,UAME,cAAC,EAAD,CAAmBpC,aAAcV,KAAKO,MAAMG,eAE9C,cAAC,IAAD,gBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAKsC,GAAK,CAACC,MAAM,EAAGC,OAAQ,GAA5B,SACE,cAAC,IAAD,CAAM5D,GAAK,oBAAX,SACE,eAAC,IAAD,CAAQN,MAAI,EAACmE,MAAM,YAAYC,SAAO,EAACN,KAAK,KAAK/D,UAAU,OAA3D,UACI,mBAAGA,UAAU,qCAAb,iBADJ,kDAOJ,cAACsE,EAAD,IACA,cAAC,EAAD,MAGL,K,GA9DuBrC,IAAMC,WAwEhCuB,EAAYtB,aAAe,CACzBR,cAAc,GAGD8B,Q,4CCzDAc,EA3BG,SAAC,GAA8C,IAA5CjE,EAA2C,EAA3CA,MAAOkE,EAAoC,EAApCA,SAAUxE,EAA0B,EAA1BA,UAAcyE,EAAY,iBACxDb,EAAUC,IACd7D,EACA,cACA,eACA,WAGF,OACE,eAAC,IAAD,yBAAK0E,GAAG,KAAKT,GAAG,IAAIjE,UAAW4D,GAAca,GAA7C,cACE,sBAAMzE,UAAU,+BAAhB,SAAgDwE,IAChD,oBAAIxE,UAAU,aAAd,SAA4BM,OAGjC,ECiEcqE,MAjFf,WAEE,OACE,eAAC,IAAD,CAAW5E,OAAK,EAACC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK4E,WAAS,EAAC5E,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAWiE,GAAG,IAAI3D,MAAM,OAAON,UAAU,mBAG3C,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAM6E,OAAK,EAAC7E,UAAU,OAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEF,cAAC,IAAD,CAAUA,UAAU,WAApB,SACE,wBAAOA,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,eAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,wBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,qBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,kBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,wBAKJ,kCACE,+BACE,mCACA,qCACA,uCACA,oDACA,6CACA,6CAEF,+BACE,mCACA,uCACA,wCACA,yCACA,mDACA,mDAEF,+BACE,mCACA,uCACA,wCACA,wCACA,gDACA,6CAEF,+BACE,mCACA,sCACA,wCACA,yCACA,8CACA,oEAUnB,ECdc+E,MAjEf,YAAsD,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAClCC,EAAWC,KAAKC,KAAKN,EAAQC,GAEnC,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQjD,QAAS,kBAAMmD,EAAQD,EAAO,EAArB,EAAyBK,SAAmB,IAATL,EAApD,eAGCM,MAAMJ,GACJK,OACAlC,KAAI,SAACmC,EAAGC,GAAJ,OACH,cAAC,IAAD,CAEE3D,QAAS,kBAAMmD,EAAQQ,EAAI,EAAlB,EACT,eAAcT,IAASS,EAAI,EAAI,OAAS,KAH1C,SAKGA,EAAI,GAJAA,EAAI,EAFR,IASP,cAAC,IAAD,CAAQ3D,QAAS,kBAAMmD,EAAQD,EAAO,EAArB,EAAyBK,SAAUL,IAASE,EAA7D,mBAMP,ECiScQ,MA5Sf,YAAoC,IAAtBC,EAAqB,EAArBA,oBAEZ,EAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KACA,GADA,KACwBa,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaC,EAAb,KACA,EAAoCW,mBAAS,IAA7C,mBAAOC,EAAP,KACA,GADA,KAC8BD,oBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAkCP,oBAAU,GAA5C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAOA,SAASC,EAAiBC,EAAOC,GAC/B,GAAGV,EAAQ,CAET,IAAIW,EAAM,GAEE,GAATD,EAAYA,EAAQ,GAErBA,IACAA,GAAS,IAGX,IAAIE,EAAMF,EAAQ,GAEdE,EAAMH,EAAMI,SACdD,EAAMH,EAAMI,QAGdC,QAAQC,IAAI,WAAYN,GAExBK,QAAQC,IAAI,oBAAqBN,EAAMI,QACvC,IAnBS,eAmBDlB,GACNmB,QAAQC,IAAI,+BAAgCpB,EAAGe,EAAOE,GACtDE,QAAQC,IAAIC,eAAeC,QAAQ,WAEjCN,EAAIO,KACF,qBAAYlF,QAAS,kBA9BTmF,EA8B4BxB,EA7BhDU,GAAU,QACVE,EAAaY,GAFM,IAACA,CA8BS,EAAuBrF,MAAO,CAACsF,OAAQ,WAA5D,UACE,oBAAItC,MAAM,MAAV,SAAkBa,EAAE,IACpB,6BAAMc,EAAMd,GAAG0B,OACf,6BAAKZ,EAAMd,GAAG2B,cACd,6BAAKb,EAAMd,GAAG4B,WACd,6BAAKd,EAAMd,GAAG6B,UACd,6BAAKf,EAAMd,GAAG8B,SANP9B,GAxBN,EAmBDA,EAAIe,EAAOf,EAAIiB,EAAKjB,IAAK,EAAzBA,GA6BR,OAAOgB,CACR,CAEF,CA2HD,IAAMe,EAASC,iBAAO,GAqDpB,OAlDFC,qBAAU,WAAM,sDAGd,WAAqCtI,GAArC,2FACKuG,GAAwBK,EAD7B,wBAGIY,QAAQC,IAAIlB,GAHhB,SAIuBA,EAAoBgC,cAAc,oBAAqB,CAACC,UAAU,EAAGC,QAAQ,WAJpG,OAQI,IAJIC,EAJR,OAQYrC,EAAIqC,EAAOnB,OAAS,EAAGlB,GAAK,EAAGA,IAEjCsC,EAAQC,IAAOC,KAAKH,EAAOrC,GAAGyC,aAAaX,MAC3CY,EAAU,+BACdA,GAAWL,EAAOrC,GAAGyC,aAAaE,UAAUC,WAE5CzB,QAAQC,IAAIsB,GAEZtC,EAAWmB,KAAK,CACdrH,GAAI6H,EAAOc,QACXC,SAAWT,EAAOrC,GAAGyC,aAAaK,SAASF,WAC3ClB,KAAOW,EAAOrC,GAAGyC,aAAaf,KAAKkB,WACnCd,KAAOQ,EAAMM,WACbG,SAAWL,EACXM,WAAaX,EAAOrC,GAAGyC,aAAaO,WAAWJ,WAC/CjB,YAAcU,EAAOrC,GAAGyC,aAAaQ,oBAAoBL,WACzDhB,SAAWS,EAAOrC,GAAGyC,aAAaS,UAAUN,WAC5Cf,QAAUQ,EAAOrC,GAAGyC,aAAaU,iBAAiBP,aAIpDb,EAAOc,SAAW,EAElB1B,QAAQC,IAAIiB,EAAOrC,GAAGyC,cAExBnC,GAAW,GACXE,GAAS,GACTW,QAAQC,IAAI,mBAAoBiB,EAAOnB,QACvCC,QAAQC,IAAIiB,GACZlB,QAAQC,IAAI,gBAAiBhB,GArCjC,6CAHc,uBAAC,SAAD,2BA6CdgD,GACA/B,eAAegC,WAAW,SAE7B,IAGK,eAAC,IAAD,CAAWjJ,OAAK,EAACC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK4E,WAAS,EAAC5E,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAWiE,GAAG,IAAI3D,MAAM,MAAMN,UAAU,oBA9K9C8G,QAAQC,IAAIb,GACZY,QAAQC,IAAIX,IAERA,GAAUF,EAEV,gCACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMrB,OAAK,EAAC7E,UAAU,OAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEF,cAAC,IAAD,CAAUA,UAAU,WAApB,SACE,wBAAOA,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,eAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,wBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,sBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,8BAKJ,gCACGwG,EAAiBT,EAAYb,iBAQ1C,cAAC,EAAD,CACMF,MAAOe,EAAWc,OAClB5B,MAAOA,EACPC,KAAMA,EACNC,QAASA,OAKViB,GAAUF,EAIf,cAAC,IAAD,UACE,cAAC,IAAD,CAAKpC,GAAG,IAAIE,GAAG,KAAf,SACA,eAAC,IAAD,CAAMa,OAAK,EAAX,UACA,cAAC,IAAD,CAAY7E,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEA,cAAC,IAAD,CAAWiJ,OAAK,EAAhB,SACA,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACM,uBAAOkJ,QAAQ,eAAf,sCACA,uBACCnD,EAAWO,GAAWmC,SAEvB,uBACA,uBACA,uBAAOS,QAAQ,iBAAf,gCACA,uBACCnD,EAAWO,GAAWe,KAEvB,uBACA,uBACA,uBAAO6B,QAAQ,kBAAf,uCACA,uBACCnD,EAAWO,GAAWkB,QAEvB,uBACA,uBACA,uBAAO0B,QAAQ,kBAAf,6CACA,uBACCnD,EAAWO,GAAWqC,WAEvB,uBACA,uBACA,uBAAOO,QAAQ,kBAAf,mDACA,uBACCnD,EAAWO,GAAWgB,YAEvB,uBACA,uBACA,uBAAO4B,QAAQ,kBAAf,8BACA,uBAhCN,YAiCgB,IACV,mBAAGrH,KAAMkE,EAAWO,GAAWoC,SAAUS,OAAO,SAASC,IAAI,sBAA7D,SACCrD,EAAWO,GAAWoC,gCAhDpC,KA2KR,ECpTcW,MARf,WACI,OACI,qBAAKrJ,UAAU,YAAf,SACI,2CAGX,ECEcsJ,MARf,WACI,OACI,qBAAKtJ,UAAU,YAAf,SACI,8CAGX,ECmTcuJ,MAvSf,YAA0C,IAAtB1D,EAAqB,EAArBA,oBAElB,EAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KACA,GADA,KACwBa,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaC,EAAb,KACA,EAAoCW,mBAAS,IAA7C,mBAAOC,EAAP,KACA,GADA,KAC8BD,oBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAkCP,oBAAU,GAA5C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAOA,SAASC,EAAiBC,EAAOC,GAC/B,GAAGV,EAAQ,CAET,IAAIW,EAAM,GAEE,GAATD,EAAYA,EAAQ,GAErBA,IACAA,GAAS,IAGX,IAAIE,EAAMF,EAAQ,GAEdE,EAAMH,EAAMI,SACdD,EAAMH,EAAMI,QAGdC,QAAQC,IAAI,WAAYN,GAExBK,QAAQC,IAAI,oBAAqBN,EAAMI,QACvC,IAnBS,eAmBDlB,GACNmB,QAAQC,IAAI,+BAAgCpB,EAAGe,EAAOE,GAEpDD,EAAIO,KACJ,qBAAYlF,QAAS,kBA7BPmF,EA6B0BxB,EA5B9CU,GAAU,QACVE,EAAaY,GAFM,IAACA,CA6BO,EAAuBrF,MAAO,CAACsF,OAAQ,WAA5D,UACE,oBAAItC,MAAM,MAAV,SAAkBa,EAAE,IACpB,6BAAMc,EAAMd,GAAG0B,OACf,6BAAKZ,EAAMd,GAAG2B,cACd,6BAAKb,EAAMd,GAAG4B,WACd,6BAAKd,EAAMd,GAAG6B,UACd,6BAAKf,EAAMd,GAAG8B,SANP9B,GAvBJ,EAmBDA,EAAIe,EAAOf,EAAIiB,EAAKjB,IAAK,EAAzBA,GA4BR,OAAOgB,CACR,CAEF,CA0HD,IAAMe,EAASC,iBAAO,GAkDpB,OA/CFC,qBAAU,WAAM,sDAEd,WAAqCtI,GAArC,2FACKuG,GAAwBK,EAD7B,wBAGIY,QAAQC,IAAIlB,GAHhB,SAIuBA,EAAoBgC,cAAc,mBAAoB,CAACC,UAAU,EAAGC,QAAQ,WAJnG,OAQI,IAJIC,EAJR,OAQYrC,EAAIqC,EAAOnB,OAAS,EAAGlB,GAAK,EAAGA,IAEjCsC,EAAQC,IAAOC,KAAKH,EAAOrC,GAAGyC,aAAaX,MAC3CY,EAAU,+BACdA,GAAWL,EAAOrC,GAAGyC,aAAaE,UAAUC,WAE5CxC,EAAWmB,KAAK,CACdrH,GAAI6H,EAAOc,QACXC,SAAWT,EAAOrC,GAAGyC,aAAaK,SAASF,WAC3ClB,KAAOW,EAAOrC,GAAGyC,aAAaf,KAAKkB,WACnCd,KAAOQ,EAAMM,WACbG,SAAWL,EACXM,WAAaX,EAAOrC,GAAGyC,aAAaO,WAAWJ,WAC/CjB,YAAcU,EAAOrC,GAAGyC,aAAaQ,oBAAoBL,WACzDhB,SAAWS,EAAOrC,GAAGyC,aAAaS,UAAUN,WAC5Cf,QAAUQ,EAAOrC,GAAGyC,aAAaU,iBAAiBP,aAIpDb,EAAOc,SAAW,EAElB1B,QAAQC,IAAIiB,EAAOrC,GAAGyC,cAExBnC,GAAW,GACXE,GAAS,GACTW,QAAQC,IAAI,mBAAoBiB,EAAOnB,QACvCC,QAAQC,IAAIiB,GACZlB,QAAQC,IAAI,gBAAiBhB,GAnCjC,6CAFc,uBAAC,SAAD,2BA0CdgD,GACA/B,eAAegC,WAAW,SAE7B,IAGK,eAAC,IAAD,CAAWjJ,OAAK,EAACC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK4E,WAAS,EAAC5E,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAWiE,GAAG,IAAI3D,MAAM,aAAaN,UAAU,oBA1KrD8G,QAAQC,IAAIb,GACZY,QAAQC,IAAIX,IAERA,GAAUF,EAEV,gCACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMrB,OAAK,EAAC7E,UAAU,OAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEF,cAAC,IAAD,CAAUA,UAAU,WAApB,SACE,wBAAOA,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,eAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,wBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,sBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,8BAKJ,gCACGwG,EAAiBT,EAAYb,iBAQ1C,cAAC,EAAD,CACMF,MAAOe,EAAWc,OAClB5B,MAAOA,EACPC,KAAMA,EACNC,QAASA,OAKViB,GAAUF,EAIf,cAAC,IAAD,UACE,cAAC,IAAD,CAAKpC,GAAG,IAAIE,GAAG,KAAf,SACA,eAAC,IAAD,CAAMa,OAAK,EAAX,UACA,cAAC,IAAD,CAAY7E,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEA,cAAC,IAAD,CAAWiJ,OAAK,EAAhB,SACA,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACM,uBAAOkJ,QAAQ,eAAf,sCACA,uBACCnD,EAAWO,GAAWmC,SAEvB,uBACA,uBACA,uBAAOS,QAAQ,iBAAf,gCACA,uBACCnD,EAAWO,GAAWe,KAEvB,uBACA,uBACA,uBAAO6B,QAAQ,kBAAf,uCACA,uBACCnD,EAAWO,GAAWkB,QAEvB,uBACA,uBACA,uBAAO0B,QAAQ,kBAAf,6CACA,uBACCnD,EAAWO,GAAWqC,WAEvB,uBACA,uBACA,uBAAOO,QAAQ,kBAAf,mDACA,uBACCnD,EAAWO,GAAWgB,YAEvB,uBACA,uBACA,uBAAO4B,QAAQ,kBAAf,8BACA,uBAhCN,YAiCgB,IACV,mBAAGrH,KAAMkE,EAAWO,GAAWoC,SAAUS,OAAO,SAASC,IAAI,sBAA7D,SACCrD,EAAWO,GAAWoC,gCAhDpC,KAuKR,ECVcc,MA1Rf,YAA0C,IAAtB3D,EAAqB,EAArBA,oBAElB,EAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KACA,GADA,KACwBa,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaC,EAAb,KACA,EAAoCW,mBAAS,IAA7C,mBAAOC,EAAP,KACA,GADA,KAC8BD,oBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAkCP,oBAAU,GAA5C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAOA,SAASC,EAAiBC,EAAOC,GAC/B,GAAGV,EAAQ,CAET,IAAIW,EAAM,GAEE,GAATD,EAAYA,EAAQ,GAErBA,IACAA,GAAS,IAGX,IAAIE,EAAMF,EAAQ,GAEdE,EAAMH,EAAMI,SACdD,EAAMH,EAAMI,QAGdC,QAAQC,IAAI,WAAYN,GAExBK,QAAQC,IAAI,oBAAqBN,EAAMI,QACvC,IAnBS,eAmBDlB,GACNmB,QAAQC,IAAI,+BAAgCpB,EAAGe,EAAOE,GACtDD,EAAIO,KACJ,qBAAYlF,QAAS,kBA5BLmF,EA4BwBxB,EA3B5CU,GAAU,QACVE,EAAaY,GAFM,IAACA,CA4BK,EAAuBrF,MAAO,CAACsF,OAAQ,WAA5D,UACE,oBAAItC,MAAM,MAAV,SAAkBa,EAAE,IACpB,6BAAMc,EAAMd,GAAG0B,OACf,6BAAKZ,EAAMd,GAAG2B,cACd,6BAAKb,EAAMd,GAAG4B,WACd,6BAAKd,EAAMd,GAAG6B,UACd,6BAAKf,EAAMd,GAAG8B,SANP9B,GAtBF,EAmBDA,EAAIe,EAAOf,EAAIiB,EAAKjB,IAAK,EAAzBA,GAcR,OAAOgB,CACR,CAEF,CA2HD,IAAMe,EAASC,iBAAO,GAkDpB,OA/CFC,qBAAU,WAAM,sDAEd,WAAqCtI,GAArC,2FACKuG,GAAwBK,EAD7B,wBAGIY,QAAQC,IAAIlB,GAHhB,SAIuBA,EAAoBgC,cAAc,sBAAuB,CAACC,UAAU,EAAGC,QAAQ,WAJtG,OAQI,IAJIC,EAJR,OAQYrC,EAAIqC,EAAOnB,OAAS,EAAGlB,GAAK,EAAGA,IAEjCsC,EAAQC,IAAOC,KAAKH,EAAOrC,GAAGyC,aAAaX,MAC3CY,EAAU,+BACdA,GAAWL,EAAOrC,GAAGyC,aAAaE,UAAUC,WAE5CxC,EAAWmB,KAAK,CACdrH,GAAI6H,EAAOc,QACXC,SAAWT,EAAOrC,GAAGyC,aAAaK,SAASF,WAC3ClB,KAAOW,EAAOrC,GAAGyC,aAAaf,KAAKkB,WACnCd,KAAOQ,EAAMM,WACbG,SAAWL,EACXM,WAAaX,EAAOrC,GAAGyC,aAAaO,WAAWJ,WAC/CjB,YAAcU,EAAOrC,GAAGyC,aAAaQ,oBAAoBL,WACzDhB,SAAWS,EAAOrC,GAAGyC,aAAaS,UAAUN,WAC5Cf,QAAUQ,EAAOrC,GAAGyC,aAAaU,iBAAiBP,aAIpDb,EAAOc,SAAW,EAElB1B,QAAQC,IAAIiB,EAAOrC,GAAGyC,cAExBnC,GAAW,GACXE,GAAS,GACTW,QAAQC,IAAI,mBAAoBiB,EAAOnB,QACvCC,QAAQC,IAAIiB,GACZlB,QAAQC,IAAI,gBAAiBhB,GAnCjC,6CAFc,uBAAC,SAAD,2BA0CdgD,GACA/B,eAAegC,WAAW,SAE7B,IAGK,eAAC,IAAD,CAAWjJ,OAAK,EAACC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK4E,WAAS,EAAC5E,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAWiE,GAAG,IAAI3D,MAAM,YAAYN,UAAU,oBA3KpD8G,QAAQC,IAAIb,GACZY,QAAQC,IAAIX,IAERA,GAAUF,EAEV,gCACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMrB,OAAK,EAAC7E,UAAU,OAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEF,cAAC,IAAD,CAAUA,UAAU,WAApB,SACE,wBAAOA,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,eAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,wBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,sBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,8BAKJ,gCACGwG,EAAiBT,EAAYb,iBAQ1C,cAAC,EAAD,CACMF,MAAOe,EAAWc,OAClB5B,MAAOA,EACPC,KAAMA,EACNC,QAASA,OAKViB,GAAUF,EAIf,cAAC,IAAD,UACE,cAAC,IAAD,CAAKpC,GAAG,IAAIE,GAAG,KAAf,SACA,eAAC,IAAD,CAAMa,OAAK,EAAX,UACA,cAAC,IAAD,CAAY7E,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEA,cAAC,IAAD,CAAWiJ,OAAK,EAAhB,SACA,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACM,uBAAOkJ,QAAQ,eAAf,sCACA,uBACCnD,EAAWO,GAAWmC,SAEvB,uBACA,uBACA,uBAAOS,QAAQ,iBAAf,gCACA,uBACCnD,EAAWO,GAAWe,KAEvB,uBACA,uBACA,uBAAO6B,QAAQ,kBAAf,uCACA,uBACCnD,EAAWO,GAAWkB,QAEvB,uBACA,uBACA,uBAAO0B,QAAQ,kBAAf,6CACA,uBACCnD,EAAWO,GAAWqC,WAEvB,uBACA,uBACA,uBAAOO,QAAQ,kBAAf,mDACA,uBACCnD,EAAWO,GAAWgB,YAEvB,uBACA,uBACA,uBAAO4B,QAAQ,kBAAf,8BACA,uBAhCN,YAiCgB,IACV,mBAAGrH,KAAMkE,EAAWO,GAAWoC,SAAUS,OAAO,SAASC,IAAI,sBAA7D,SACCrD,EAAWO,GAAWoC,gCAhDpC,KAwKR,E,UC/RoBe,E,4MAErB1G,MAAQ,CACN2G,WAAY,I,EAGdC,kBAAoB,SAAAC,GAClB,EAAKvG,SAAS,CACZqG,WAAYE,EAAMT,OAAOU,OAE5B,E,EAECC,mBAAqB,SAACF,GACpBA,EAAMG,iBACNC,OAAOC,SAASC,QAAQ,iBAezB,E,4CAIH,WACE,OACA,cAAC,IAAD,CAAMlK,UAAU,uDAAuDmK,SAAUlJ,KAAK6I,mBAAtF,SAOI,cAACM,EAAA,EAAD,CACEpK,UAAU,gBACVuC,YAAY,0BACZ8H,MAAO,CAACC,MAAM,OAIdpH,SAAY,SAAC0G,GAAD,OAAW5C,eAAeuD,QAAQ,SAAUX,EAAMT,OAAOU,MAAzD,KASnB,K,GA1DmC3H,aCAfsI,GCTsBvI,IAAMC,U,kDDa/C,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,MAAQ,CACX0H,SAAS,GAGX,EAAKC,kBAAoB,EAAKA,kBAAkB/J,KAAvB,gBAPR,CAQlB,C,qDAED,WACEM,KAAKoC,SAAS,CACZoH,SAAUxJ,KAAK8B,MAAM0H,SAExB,G,qBAED,WACEzD,eAAegC,WAAW,WAC1B2B,SAASV,SAASpI,KAAO,GAC1B,G,oBAYD,WACE,OACE,eAAC,IAAD,CAASa,IAAKkI,IAAUC,OAAK,EAACC,OAAQ7J,KAAKyJ,kBAA3C,UACE,cAAC,IAAD,CAAgBG,OAAK,EAACnI,IAAKqI,IAAS/K,UAAU,mBAA9C,SACE,sBAAMA,UAAU,2BAAhB,SAA4CgH,eAAeC,QAAQ,eAErE,cAAC,IAAD,CAAUvE,IAAKsI,IAAcC,OAAK,EAACpG,OAAK,EAACqG,KAAMjK,KAAK8B,MAAM0H,QAA1D,SACE,eAAC,IAAD,CAAczI,QAASf,KAAKkK,QAASnL,UAAU,cAA/C,UACE,mBAAGA,UAAU,6BAAb,oBADF,iBAMP,K,GAhDsCiC,IAAMC,YENhC,qBACb,cAAC,IAAD,CAAKkJ,QAAM,EAACpL,UAAU,uBAAtB,SAEE,cAAC,EAAD,KAHJ,ECuBeqL,G,kDAxBb,WAAY7J,GAAQ,IAAD,8BACjB,cAAMA,IAED8J,YAAc,EAAKA,YAAY3K,KAAjB,gBAHF,CAIlB,C,+CAED,WACET,EAAWwB,SAAS,CAClBZ,WAAYE,GAEf,G,oBAED,WACE,OACE,qBAAKhB,UAAU,MAAf,SAEE,mBAAG6B,KAAK,IAAIG,QAASf,KAAKqK,YAAatL,UAAU,sFAAjD,SACE,mBAAGA,UAAU,iBAAb,uBAIP,K,GAtBwBiC,IAAMC,WCK3BqJ,GAAa,SAAC,GAA0B,EAAxBC,OAAwB,EAAhBC,UAAiB,IACvC7H,EAAUC,IACd,cACA,YAIF,OACE,qBAAK7D,UAAW4D,EAAS9B,MAAO,CAACwI,MAAM,QAAvC,SACE,cAAC,IAAD,CAAWtK,UAAU,MAAM8B,MAAO,CAAC4J,SAAS,UAA5C,SACE,eAAC,IAAD,CAAQ9J,KAAK,QAAQ5B,UAAU,yCAA/B,UACE,cAAC,EAAD,IACA,cAAC2L,GAAD,IACA,cAAC,GAAD,UAKT,EAaDJ,GAAWpJ,aAAe,CACxBsJ,WAAW,GAGEF,UCvCTK,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAzB,OACjB,wBAAQ/L,UAAU,kDAAlB,SACE,cAAC,IAAD,CAAWD,MAAO8L,EAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACGC,EAAUvI,KAAI,SAACd,EAAMe,GAAP,OACb,cAAC,IAAD,UACE,cAAC,IAAD,CAASd,IAAKsJ,IAAMzL,GAAIkC,EAAKlC,GAA7B,SACGkC,EAAKnC,SAFIkD,EADD,MAQjB,sBAAMxD,UAAU,iCAAhB,SAAkD+L,UAbvC,EAkCnBH,GAAWzJ,aAAe,CACxB0J,WAAW,EACXE,UAAW,qCACXD,UAAW,CACT,CACExL,MAAO,OACPC,GAAI,KAEN,CACED,MAAO,WACPC,GAAI,KAEN,CACED,MAAO,QACPC,GAAI,KAEN,CACED,MAAO,WACPC,GAAI,KAEN,CACED,MAAO,OACPC,GAAI,OAKKqL,U,UCxCAK,OAXf,YAAiD,IAAhCpG,EAA+B,EAA/BA,oBAAqBqG,EAAU,EAAVA,QACpC,OACE,eAAC,IAAD,CAAMrH,OAAK,EAAX,UACA,cAAC,IAAD,CAAY7E,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEF,cAACmM,GAAA,EAAD,CAAqBtG,oBAAqBA,EAAqBqG,QAASA,MAG3E,ECEcE,OArBf,YAA0D,IAA/BvG,EAA8B,EAA9BA,oBAAqBqG,EAAS,EAATA,QAC5C,OACE,eAAC,IAAD,CAAWnM,OAAK,EAACC,UAAU,8BAA3B,UAEE,cAAC,IAAD,CAAK4E,WAAS,EAAC5E,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAWiE,GAAG,IAAI3D,MAAM,sBAAsBN,UAAU,mBAK1D,cAAC,IAAD,UACE,cAAC,IAAD,CAAK8D,GAAG,IAAIE,GAAG,KAAf,SACE,cAAC,GAAD,CAAQ6B,oBAAqBA,EAAqBqG,QAASA,UAOtE,E,OCsScG,OA5Sf,YAA8C,IAAtBxG,EAAqB,EAArBA,oBAEtB,EAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KACA,GADA,KACwBa,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaC,EAAb,KACA,EAAoCW,mBAAS,IAA7C,mBAAOC,EAAP,KACA,GADA,KAC8BD,oBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAkCP,oBAAU,GAA5C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEM+F,EAAe,SAACnF,GACpBd,GAAU,GACVE,EAAaY,EACd,EAED,SAASX,EAAiBC,EAAOC,GAC/B,GAAGV,EAAQ,CAET,IAAIW,EAAM,GAEE,GAATD,EAAYA,EAAQ,GAErBA,IACAA,GAAS,IAGX,IAAIE,EAAMF,EAAQ,GAEdE,EAAMH,EAAMI,SACdD,EAAMH,EAAMI,QAGdC,QAAQC,IAAI,WAAYN,GAExBK,QAAQC,IAAI,oBAAqBN,EAAMI,QACvC,IAnBS,eAmBDlB,GACNmB,QAAQC,IAAI,+BAAgCpB,EAAGe,EAAOE,GACtDE,QAAQC,IAAIC,eAAeC,QAAQ,WACK,OAArCD,eAAeC,QAAQ,UACxBN,EAAIO,KACF,qBAAYlF,QAAS,kBAAMsK,EAAa3G,EAAnB,EAAuB7D,MAAO,CAACsF,OAAQ,WAA5D,UACE,oBAAItC,MAAM,MAAV,SAAkBa,EAAE,IACpB,6BAAMc,EAAMd,GAAG0B,OACf,6BAAKZ,EAAMd,GAAG2B,cACd,6BAAKb,EAAMd,GAAG4B,WACd,6BAAKd,EAAMd,GAAG6B,UACd,6BAAKf,EAAMd,GAAG8B,SANP9B,IAULqB,eAAeC,QAAQ,YAAcR,EAAMd,GAAG0B,MAAQL,eAAeC,QAAQ,YAAcR,EAAMd,GAAG2B,aAAeN,eAAeC,QAAQ,YAAcR,EAAMd,GAAG4B,UAAYP,eAAeC,QAAQ,YAAcR,EAAMd,GAAG6B,SACjOb,EAAIO,KACF,qBAAYlF,QAAS,kBAAMsK,EAAa3G,EAAnB,EAAuB7D,MAAO,CAACsF,OAAQ,WAA5D,UACE,oBAAItC,MAAM,MAAV,SAAkBa,EAAE,IACpB,6BAAMc,EAAMd,GAAG0B,OACf,6BAAKZ,EAAMd,GAAG2B,cACd,6BAAKb,EAAMd,GAAG4B,WACd,6BAAKd,EAAMd,GAAG6B,UACd,6BAAKf,EAAMd,GAAG8B,SANP9B,GApCN,EAmBDA,EAAIe,EAAOf,EAAIiB,EAAKjB,IAAK,EAAzBA,GA6BR,OAAOgB,CACR,CAEF,CA2HD,IAAMe,EAASC,iBAAO,GAqDpB,OAlDFC,qBAAU,WAAM,sDAGd,WAAqCtI,GAArC,2FACKuG,GAAwBK,EAD7B,wBAGIY,QAAQC,IAAIlB,GAHhB,SAIuBA,EAAoBgC,cAAc,oBAAqB,CAACC,UAAU,EAAGC,QAAQ,WAJpG,OAQI,IAJIC,EAJR,OAQYrC,EAAIqC,EAAOnB,OAAS,EAAGlB,GAAK,EAAGA,IAEjCsC,EAAQC,IAAOC,KAAKH,EAAOrC,GAAGyC,aAAaX,MAC3CY,EAAU,+BACdA,GAAWL,EAAOrC,GAAGyC,aAAaE,UAAUC,WAE5CzB,QAAQC,IAAIsB,GAEZtC,EAAWmB,KAAK,CACdrH,GAAI6H,EAAOc,QACXC,SAAWT,EAAOrC,GAAGyC,aAAaK,SAASF,WAC3ClB,KAAOW,EAAOrC,GAAGyC,aAAaf,KAAKkB,WACnCd,KAAOQ,EAAMM,WACbG,SAAWL,EACXM,WAAaX,EAAOrC,GAAGyC,aAAaO,WAAWJ,WAC/CjB,YAAcU,EAAOrC,GAAGyC,aAAaQ,oBAAoBL,WACzDhB,SAAWS,EAAOrC,GAAGyC,aAAaS,UAAUN,WAC5Cf,QAAUQ,EAAOrC,GAAGyC,aAAaU,iBAAiBP,aAIpDb,EAAOc,SAAW,EAElB1B,QAAQC,IAAIiB,EAAOrC,GAAGyC,cAExBnC,GAAW,GACXE,GAAS,GACTW,QAAQC,IAAI,mBAAoBiB,EAAOnB,QACvCC,QAAQC,IAAIiB,GACZlB,QAAQC,IAAI,gBAAiBhB,GArCjC,6CAHc,uBAAC,SAAD,2BA6CdgD,EAGH,IAGK,eAAC,IAAD,CAAWhJ,OAAK,EAACC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK4E,WAAS,EAAC5E,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAWiE,GAAG,IAAI3D,MAAM,UAAUN,UAAU,oBA9KlD8G,QAAQC,IAAIb,GACZY,QAAQC,IAAIX,IAERA,GAAUF,EAEV,gCACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMrB,OAAK,EAAC7E,UAAU,OAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEF,cAAC,IAAD,CAAUA,UAAU,WAApB,SACE,wBAAOA,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,eAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,wBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,uBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,sBAGA,oBAAI8E,MAAM,MAAM9E,UAAU,WAA1B,8BAKJ,gCACGwG,EAAiBT,EAAYb,iBAQ1C,cAAC,EAAD,CACMF,MAAOe,EAAWc,OAClB5B,MAAOA,EACPC,KAAMA,EACNC,QAASA,OAKViB,GAAUF,EAIf,cAAC,IAAD,UACE,cAAC,IAAD,CAAKpC,GAAG,IAAIE,GAAG,KAAf,SACA,eAAC,IAAD,CAAMa,OAAK,EAAX,UACA,cAAC,IAAD,CAAY7E,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,4BAEA,cAAC,IAAD,CAAWiJ,OAAK,EAAhB,SACA,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACM,uBAAOkJ,QAAQ,eAAf,sCACA,uBACCnD,EAAWO,GAAWmC,SAEvB,uBACA,uBACA,uBAAOS,QAAQ,iBAAf,gCACA,uBACCnD,EAAWO,GAAWe,KAEvB,uBACA,uBACA,uBAAO6B,QAAQ,kBAAf,uCACA,uBACCnD,EAAWO,GAAWkB,QAEvB,uBACA,uBACA,uBAAO0B,QAAQ,kBAAf,6CACA,uBACCnD,EAAWO,GAAWqC,WAEvB,uBACA,uBACA,uBAAOO,QAAQ,kBAAf,mDACA,uBACCnD,EAAWO,GAAWgB,YAEvB,uBACA,uBACA,uBAAO4B,QAAQ,kBAAf,8BACA,uBAhCN,YAiCgB,IACV,mBAAGrH,KAAMkE,EAAWO,GAAWoC,SAAUS,OAAO,SAASC,IAAI,sBAA7D,SACCrD,EAAWO,GAAWoC,gCAhDpC,KA2KR,ECvGc,SAAS6D,GAAT,GAAyD,EAA3CxG,WAA4C,IAAhCF,EAA+B,EAA/BA,oBAAqBqG,EAAU,EAAVA,QAI5D,OAFApF,QAAQC,IAAI,UAGR,cAAC,IAAD,CAAWhH,OAAK,EAAhB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,CACEC,UAAU,mBACV8D,GAAI,CAAEC,KAAM,GAAII,OAAQ,GACxBH,GAAI,CAAED,KAAM,EAAGI,OAAQ,GACvBF,GAAG,KACHvB,IAAI,OALN,UAOG,cAAC,GAAD,IACD,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8J,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUlM,GAAG,WACtC,cAAC,IAAD,CAAOiM,KAAK,OAAOC,QAAS,cAAC,EAAD,CAAK5G,oBAAqBA,MACtD,cAAC,IAAD,CAAO2G,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,CAAW5G,oBAAqBA,MAClE,cAAC,IAAD,CAAO2G,KAAK,aAAaC,QAAS,cAAC,EAAD,CAAW5G,oBAAqBA,MAClE,cAAC,IAAD,CAAO2G,KAAK,iBAAiBC,QAAS,cAAC,GAAD,CAAe5G,oBAAqBA,MAC1E,cAAC,IAAD,CAAO2G,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,EAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,GAAD,CAAkB5G,oBAAqBA,EAAqBqG,QAASA,SAEhH,uBAAS,uBACR,cAAC,GAAD,WAKZ,CC3Oc,SAASQ,KAyCtB,MAAwB5G,mBAAS,IAAjC,mBAAa6G,GAAb,WACA,EAA8B7G,mBAAS,IAAvC,mBAAOoG,EAAP,KAAgBU,EAAhB,KACA,EAAsD9G,mBAAS,IAA/D,mBAAOD,EAAP,KAA4BgH,EAA5B,KACA,EAA8B/G,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEA,EAAoCH,mBAAS,IAA7C,mBAAOC,EAAP,UAEA6B,qBAAU,WAAM,sDACd,WAAkCtI,GAAlC,qFACQwN,EAAO,IAAIC,IAAK,IAAIA,IAAKC,UAAUC,aAAa,sEACtDN,EAAQG,GACRhG,QAAQC,IAAI+F,GACNI,EAAWC,EAAQ,MACnBC,EAAcF,EAASG,GAC7BvG,QAAQC,IAAI+F,GACZM,EAAYE,YAAYR,EAAKS,iBAE7BT,EAAKU,IAAIC,aAAY,SAACC,EAAOC,GACtBD,GACHN,EAAYQ,WAAWC,MAAK,SAAAC,GAC1BjB,EAAuBiB,GACvB,IAAIC,EAAO,EAC6B,OAArC/G,eAAeC,QAAQ,WAAqB8G,EAAO,EACT,OAArC/G,eAAeC,QAAQ,WAAqB8G,EAAO,EACd,OAArC/G,eAAeC,QAAQ,WAAqB8G,EAAO,EACd,OAArC/G,eAAeC,QAAQ,aAAqB8G,EAAO,GAC3DnB,EAAWe,EAASI,IACpB9H,GAAW,EACZ,GAEJ,IAtBH,2CADc,yBAAC,SAAD,2BA2Bd+H,EAED,GAAE,IAEH,IAAMtG,EAASC,iBAAO,GAiEtB,OA7DAC,qBAAU,WAAM,sDAEd,WAAqCtI,GAArC,qGACqBuG,EAAoBgC,cAAc,oBAAqB,CAACC,UAAU,EAAGC,QAAQ,WADlG,OAKE,IAJIC,EADN,OAKUrC,EAAI,EAAGA,EAAIqC,EAAOnB,OAAQlB,GAAK,EAEjCsC,EAAQC,IAAOC,KAAKH,EAAOrC,GAAGyC,aAAaX,MAE/C1B,EAAWmB,KAAK,CACdrH,GAAI6H,EAAOc,QACXC,SAAWT,EAAOrC,GAAGyC,aAAaK,SAASF,WAC3ClB,KAAOW,EAAOrC,GAAGyC,aAAaf,KAAKkB,WACnCd,KAAOQ,EAAMM,WACbG,SAAWV,EAAOrC,GAAGyC,aAAaE,UAAUC,WAC5CI,WAAaX,EAAOrC,GAAGyC,aAAaO,WAAWJ,WAC/CjB,YAAcU,EAAOrC,GAAGyC,aAAaQ,oBAAoBL,WACzDhB,SAAWS,EAAOrC,GAAGyC,aAAaS,UAAUN,WAC5Cf,QAAUQ,EAAOrC,GAAGyC,aAAaU,iBAAiBP,aAIpDb,EAAOc,SAAW,EAElB1B,QAAQC,IAAIiB,EAAOrC,GAAGyC,cAExBtB,QAAQC,IAAI,mBAAoBiB,EAAOnB,QACvCC,QAAQC,IAAIiB,GACZlB,QAAQC,IAAI,gBAAiBhB,GAC7Be,QAAQC,IAAImF,GA7Bd,4CAFc,sBAmCC,GAAXlG,GAnCW,SAAD,2BAmCO+C,EAExB,GAAE,CAAC/C,IAyBA,8BA4CE,cAAC,GAAD,CAAKD,WAAYA,EAAYF,oBAAqBA,EAAqBqG,QAASA,KAGrF,C,yBCnLc,SAAS+B,KACtB,MAA0CnI,mBAAS,IAAnD,mBAAOoI,EAAP,KAAsBC,EAAtB,KACA,EAAoBrI,mBAAS,IAA7B,mBAAOsI,EAAP,KAAWC,EAAX,KACA,EAAgCvI,mBAAS,IAAzC,mBAAiBwI,GAAjB,WACA,EAAkCxI,mBAAS,IAA3C,mBAAOyI,EAAP,KAAkBC,EAAlB,KACA,EAAwB1I,mBAAS,IAAjC,mBAAO2I,EAAP,KAAaC,EAAb,KACA,EAA0B5I,mBAAS,IAAnC,mBAAO6I,EAAP,KAAcC,EAAd,KA6BA,OACI,cAAC,IAAD,CAAW3F,OAAK,EAAhB,SACA,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,uBAAOkJ,QAAQ,eAAf,0BACA,eAAC,IAAD,CAAYrJ,GAAG,eAAekE,KAAK,KAAKjC,MAAO,CAAC+M,SAAU,WAAYhF,MAAOqE,EAAehL,SAnCnF,SAAC5D,GACtB6O,EAAiB7O,EAAE6J,OAAOU,OAC1B/C,QAAQC,IAAImH,EACb,EAgCa,UACE,wBAAQrE,MAAQ,eAAhB,0BACA,wBAAQA,MAAQ,MAAhB,iBACA,wBAAQA,MAAQ,MAAhB,iBACA,wBAAQA,MAAQ,MAAhB,iBACA,wBAAQA,MAAQ,MAAhB,uBAIJ,eAAC,IAAD,WACE,uBAAOX,QAAQ,iBAAf,gCACA,cAAC,IAAD,CACArJ,GAAG,iBACHkE,KAAK,KACLb,SAAY,SAAC0G,GAAD,OAAWyE,EAAMzE,EAAMT,OAAOU,MAA9B,OAGd,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,sCACA,cAAC,IAAD,CACErJ,GAAG,kBACH+B,KAAK,WACLmC,KAAK,KACLb,SAAY,SAAC0G,GAAD,OAAW0E,EAAY1E,EAAMT,OAAOU,MAApC,OAIhB,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,yDACA,cAAC,IAAD,CACErJ,GAAG,kBACH+B,KAAK,WACLmC,KAAK,KACLb,SAAY,SAAC0G,GAAD,OAAW4E,EAAa5E,EAAMT,OAAOU,MAArC,OAIhB,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,0BACA,cAAC,IAAD,CACErJ,GAAG,kBACHkE,KAAK,KACLb,SAAY,SAAC0G,GAAD,OAAW8E,EAAQ9E,EAAMT,OAAOU,MAAhC,OAIhB,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,gCACA,cAAC,IAAD,CACErJ,GAAG,kBACHkE,KAAK,KACLb,SAAY,SAAC0G,GAAD,OAAWgF,EAAShF,EAAMT,OAAOU,MAAjC,OAGhB,uBACA,cAAC,IAAD,CAAQiF,OAAK,EAAC/K,KAAK,KAAKK,MAAM,YAAYpE,UAAU,YAAYgC,QAnFvD,WACnB+M,KAAMC,KAAK,2EAA4E,KAAM,CACzFC,OAAQ,CACR,GAAMb,EACN,GAAMG,EACN,KAAQ,IACR,MAASI,EACT,KAAQF,EACR,QAAWP,KAGdL,MAAK,SAAAqB,GAEJpI,QAAQC,IAAImI,GACZC,MAAM,6BACNxE,SAASV,SAASpI,KAAO,GAC1B,IACAuN,OACF,EAiEW,gDAOb,CCxGc,SAASC,KACpB,MAA8BvJ,mBAAS,IAAvC,mBAAOwJ,EAAP,KAAgBC,EAAhB,KACA,EAA8BzJ,mBAAS,IAAvC,mBAAO0J,EAAP,KAAgBC,EAAhB,KACA,EAA4B3J,oBAAS,GAArC,mBAAO4J,EAAP,KAAeC,EAAf,KAEeC,cA4Bf,OACA,sBAAK5P,UAAU,MAAf,qCAEA,sBAAKA,UAAU,eAAf,yBAEI,sBAAKA,UAAU,aAAf,UACA,cAAC,IAAD,CAAMO,GAAI,IAAKuB,MAAQ,CAAC+N,eAAgB,QAAxC,SACA,oBAAI/N,MAAQ,CACIgO,WAAY,QAD5B,6CAIA,uBAEIJ,EAAS,cAACzB,GAAD,IAET,8BACA,cAAC,IAAD,CAAWhF,OAAK,EAAhB,SACA,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,iCACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAWH,GAAG,iBAAiBkE,KAAK,KAAKxB,YAAY,qBAAMW,SAAY,SAAC0G,GAAD,OAAW2F,EAAW3F,EAAMT,OAAOU,MAAnC,MAG3E,cAAC,IAAD,UACI,cAAC,IAAD,CACAjI,KAAK,WACL/B,GAAG,kBACHkE,KAAK,KACLxB,YAAY,2BACZW,SAAY,SAAC0G,GAAD,OAAW6F,EAAW7F,EAAMT,OAAOU,MAAnC,MAGhB,uBACA,cAAC,IAAD,CAAQiF,OAAK,EAAC/K,KAAK,KAAKK,MAAM,YAAYpE,UAAU,YAAYgC,QAxDnE,WACjB+M,KAAMC,KAAK,4EAA6E,KAAM,CAC1FC,OAAQ,CACR,QAAWK,EACX,QAAWE,KAGd3B,MAAK,SAAAqB,GACFpI,QAAQC,IAAImI,GACTA,EAAIa,KAAKC,IACRb,MAAMD,EAAIa,KAAKC,MAEfhJ,eAAeuD,QAAQ,UAAW+E,GAClCtI,eAAeuD,QAAQ,UAAW2E,EAAIa,KAAKE,UAE/CtF,SAASV,SAASpI,KAAO,GAC5B,IACAuN,OACJ,EAsCuB,gCAEA,cAAC,IAAD,CAAQN,OAAK,EAAC/K,KAAK,KAAKK,MAAM,YAAYpE,UAAU,YAAYqE,SAAO,EAACrC,QAAS,SAAC4H,GAAD,OAAW+F,GAAU,EAArB,EAAjF,sDAlCxB,oBA2DH,CC9Dc,SAASO,KAErB,MAA8BpK,oBAAS,GAAvC,mBAAOqK,EAAP,KAAgBC,EAAhB,KAgBD,OAdCxI,qBAAU,WACiC,OAAtCZ,eAAeC,QAAQ,YAMxBmJ,GAAW,GAJXtJ,QAAQC,IAAI,iBAAkBoJ,EASjC,IAIA,8BAEKA,EAED,cAACzD,GAAD,IACA,cAAC2C,GAAD,KAGP,CC9CYgB,IAASC,WAAW3F,SAAS4F,eAAe,SACpDC,OACH,cAAC,IAAD,UACE,cAACN,GAAD,M,+x9MCxBEO,EACF,SAAWC,EAAOC,KAAKC,gEAAiCrI,SAAS,UAE/DsI,EAASC,iBAAe,CAC1BC,KAAM,iBACNC,KAAM,KACNC,SAAU,QAEVC,QAAS,CACLC,cAAeV,KAsMRtE,IA3Lf,YAA6D,IAA/BtG,EAA8B,EAA9BA,oBAAqBqG,EAAS,EAATA,QAEjD,EAA4CpG,mBAAS,IAArD,mBAAOsL,EAAP,KAAuBC,EAAvB,KACA,EAAgCvL,mBAAS,IAAzC,mBAAOwL,EAAP,KAAiBC,EAAjB,KACA,EAA8BzL,mBAAS,IAAvC,mBAAO0L,EAAP,KAAgBC,EAAhB,KACA,EAAoC3L,mBAAS,IAA7C,mBAAO4L,EAAP,KAAmBC,EAAnB,KACA,EAAsC7L,mBAAS,IAA/C,mBAAO8L,EAAP,KAAoBC,EAApB,KACA,EAAgC/L,mBAAS,IAAzC,mBAAO4C,EAAP,KAAiBoJ,EAAjB,KACA,EAAgChM,mBAAS,IAAzC,mBAEA,GAFA,UAEwBA,mBAAS,CAAC,IAAlC,mBAAOiM,EAAP,KAAaC,EAAb,KACA,EAA8BlM,mBAAS,IAAvC,mBAAgBmM,GAAhB,WACA,EAA8BnM,oBAAS,GAAvC,mBAAgBG,GAAhB,WACA,EAAgCH,oBAAS,GAAzC,mBAAiBoM,GAAjB,WAGMC,EAAU,iDAAG,WAAO7S,GAAP,0FAEjBA,EAAEyK,iBAFe,SAKfjD,QAAQC,IAAI,cALG,SAMO8J,EAAOuB,IAAIL,GANlB,OAMPM,EANO,OAObvL,QAAQC,IAAI,cACZD,QAAQC,IAAIgL,GACZjL,QAAQC,IAAIsL,GACNC,EAVO,uDAU+CD,EAAM7F,MAClE1F,QAAQC,IAAIuL,GAEZL,EAAWK,GACXJ,GAAY,GACZJ,GAAY,SAAApJ,GAAQ,OAAI2J,EAAM7F,IAAV,IACpBvG,GAAW,GAhBE,kDAkBba,QAAQC,IAAI,8BAAZ,MACAd,GAAW,GAnBE,0DAAH,sDA+BVsM,EAAe,iDAAG,WAAOjT,GAAP,2FAElB6H,EAAM4K,EAAK1K,KAAKR,OAChBsC,EAAS,GACLxD,EAAIwB,EAAI,EAJM,YAIHxB,EAAI,GAJD,oBAKpBwD,GAAU4I,EAAK1K,KAAK1B,GACD,KAAhBoM,EAAK1K,KAAK1B,GANO,mDAIIA,IAJJ,uBAStB,IADIoI,EAAO,GACHpI,EAAIwD,EAAOtC,OAAO,EAAGlB,GAAK,EAAGA,IACnCoI,GAAQ5E,EAAOxD,GAVK,OAYtBmB,QAAQC,IAAI2B,GAZU,UAahB7C,EAAoB2M,UAAUpB,EAAgBE,EAAU5I,EAAUgJ,EAAYE,EAAa7D,EAAMyD,EAAQ,CAC7Gb,KAAMzE,EAENuG,IAAK,MAhBe,yBAmBH5M,EAAoBgC,cAAc,oBAAqB,CAACC,UAAW,EAAGC,QAAQ,WAnB3E,QAmBlBC,EAnBkB,OAoBtBlB,QAAQC,IAAIiB,EAAOA,EAAOnB,OAAO,GAAG6L,iBAEpC1I,OAAOC,SAASC,QAAQ,KAtBF,4CAAH,sDA+BfyI,EAAa,SAACrT,GAClB2S,EAAW3S,EAAE6J,OAAOU,OAxCN,SAACvK,GACQ,KAAnBA,EAAE6J,OAAOU,MACTmI,EAAQ1S,EAAE6J,OAAOyJ,MAAM,IAEvBZ,EAAQ,CAAC,EAEhB,CAqCGa,CAAUvT,EACX,EAmBKwT,EAAmB,WAEvB,OACA,sBAAK9S,UAAU,mBAAf,UACA,uBAAO4B,KAAK,OAAO5B,UAAU,oBAAoBH,GAAG,cACxCqD,SAAYyP,IACvBZ,EAAK1K,KAEF,uBAAOrH,UAAU,oBAAoBkJ,QAAQ,cAA7C,SACA6I,EAAK1K,OAEJ,uBAAOrH,UAAU,oBAAoBkJ,QAAQ,cAA7C,iEAMN,EAED,OACE,cAAC,IAAD,CAAWD,OAAK,EAAhB,SACE,cAAC,IAAD,CAAejJ,UAAU,MAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,uBAAOkJ,QAAQ,eAAf,sCACA,eAAC,IAAD,CAAYrJ,GAAG,eAAegK,MAAOuH,EAAgBlO,SAxD3C,SAAC5D,GACvB+R,EAAkB/R,EAAE6J,OAAOU,OAC3B/C,QAAQC,IAAIqK,EACb,EAqDa,UAEE,wBAAQvH,MAAQ,eAAhB,0BACA,wBAAQA,MAAQ,WAAhB,sCACA,wBAAQA,MAAQ,YAAhB,kDAOJ,eAAC,IAAD,WACE,uBAAOX,QAAQ,iBAAf,gCACA,cAAC,IAAD,CAAWrJ,GAAG,iBAAiB0C,YAAY,0DAAaW,SAAY,SAAC0G,GAAD,OAAW2H,EAAY3H,EAAMT,OAAOU,MAApC,OAGtE,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,uCACA,cAAC,IAAD,CACErJ,GAAG,kBACH0C,YAAY,iEACZW,SAAY,SAAC0G,GAAD,OAAW6H,EAAW7H,EAAMT,OAAOU,MAAnC,OAIhB,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,6CACA,cAAC,IAAD,CACErJ,GAAG,kBACH0C,YAAY,uEACZW,SAAY,SAAC0G,GAAD,OAAW+H,EAAc/H,EAAMT,OAAOU,MAAtC,OAIhB,eAAC,IAAD,WACE,uBAAOX,QAAQ,kBAAf,mDACA,cAAC,IAAD,CACErJ,GAAG,kBACH0C,YAAY,6EACZW,SAAY,SAAC0G,GAAD,OAAWiI,EAAejI,EAAMT,OAAOU,MAAvC,OAIhB,wBAAQ7J,UAAU,eAAlB,gDAIA,cAAC8S,EAAD,IA3FS,WACnB,GAAIf,EAAK1K,KACT,OACE,8BACDqB,EACC,8DAKA,cAAC,IAAD,CAAQrE,SAAO,EAACD,MAAM,YAAYpE,UAAU,YAAYgC,QAASmQ,EAAjE,0BAKH,CA8EYY,GACD,cAAC,IAAD,CAAQ1O,SAAO,EAACD,MAAM,YAAYpE,UAAU,YAAYgC,QAASuQ,EAAjE,iEAMG,C","file":"static/js/main.0415883e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1229;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1281;","import { Container, Button } from \"shards-react\";\n\n// function Ray(){\n\n//    return(\n//     <Container fluid className=\"main-content-container px-4 pb-4\">\n//       <div className=\"error\">\n//         <div className=\"error__content\">\n//           <h2>500</h2>\n//           <h3>Something went wrong!</h3>\n//           <p>There was a problem on our end. Please try again later.</p>\n//           <Button pill>&larr; Go Back</Button>\n//         </div>\n//       </div>\n//     </Container>\n//    )\n\n// }\n\nfunction Ray(){\n\n  return(\n   <Container fluid className=\"main-content-container px-4 pb-4\">\n     <div className=\"error\">\n       <div className=\"error__content\">\n         <h2>500</h2>\n         <h3>Something went wrong!</h3>\n         <p>There was a problem on our end. Please try again later.</p>\n         <Button pill>&larr; Go Back</Button>\n       </div>\n     </div>\n   </Container>\n  )\n\n}\n\n\nexport default Ray;\n\n","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"전체보기\",\n      to: \"/all\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"CCTV\",\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: \"/cctv\",\n    },\n    {\n      title: \"전자문서\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/documents\",\n    },\n    {\n      title: \"체크리스트\",\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\n      to: \"/checklist\",\n    },\n    {\n      title: \"온도 센서\",\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n      to: \"/temp\",\n    },\n    {\n      title: \"압력 센서\",\n      htmlBefore: '<i class=\"material-icons\">person</i>',\n      to: \"/pressure\",\n    },\n    {\n      title: \"적외선 센서\",\n      htmlBefore: '<i class=\"material-icons\">error</i>',\n      to: \"/ray\",\n    }\n  ];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\"\nimport { Navbar, NavbarBrand, } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"./../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            \n            <div className=\"d-table m-auto\">\n              {/* <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"./../shards-dashboards-logo.svg\")}\n                alt=\"Shards Dashboard\"\n              /> */}\n              {!hideLogoText && (\n                \n            <Link to='/'>\n                <span className=\"d-none d-md-inline ml-1\">\n                  Safety Management\n                </span>\n              </Link>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"./../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col, Row, Button } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"./../../flux\";\n\nimport { Link } from \"react-router-dom\"\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n  \n\n  render() {\n\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 1 }}\n      > \n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n      \n      <Row>d</Row>\n      <Row>\n        <Col sm ={{order:4, offset: 2}}>\n          <Link to = \"/writetransaction\">\n            <Button pill theme=\"secondary\" outline size=\"md\" className=\"mb-2\">\n                <i className=\"font-size:30px material-icons mr-1\">add</i> 트랜잭션 추가\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\n\nfunction CCTV(){\n\n  return(\n    <Container fluid className=\"main-content-container px-4\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle sm=\"4\" title=\"CCTV\" className=\"text-sm-left\" />\n      </Row>\n      {/* Default Light Table */}\n      <Row>\n        <Col>\n          <Card small className=\"mb-4\">\n            <CardHeader className=\"border-bottom\">\n              <h6 className=\"m-0\">Active Users</h6>\n            </CardHeader>\n            <CardBody className=\"p-0 pb-3\">\n              <table className=\"table mb-0\">\n                <thead className=\"bg-light\">\n                  <tr>\n                    <th scope=\"col\" className=\"border-0\">\n                      #\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      First Name\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Last Name\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Country\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      City\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Phone\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>1</td>\n                    <td>Ali</td>\n                    <td>Kerry</td>\n                    <td>Russian Federation</td>\n                    <td>Gdańsk</td>\n                    <td>107-0339</td>\n                  </tr>\n                  <tr>\n                    <td>2</td>\n                    <td>Clark</td>\n                    <td>Angela</td>\n                    <td>Estonia</td>\n                    <td>Borghetto di Vara</td>\n                    <td>1-660-850-1647</td>\n                  </tr>\n                  <tr>\n                    <td>3</td>\n                    <td>Jerry</td>\n                    <td>Nathan</td>\n                    <td>Cyprus</td>\n                    <td>Braunau am Inn</td>\n                    <td>214-4225</td>\n                  </tr>\n                  <tr>\n                    <td>4</td>\n                    <td>Colt</td>\n                    <td>Angela</td>\n                    <td>Liberia</td>\n                    <td>Bad Hersfeld</td>\n                    <td>1-848-473-7416</td>\n                  </tr>\n                </tbody>\n              </table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CCTV;\n\n","// import styled from \"styled-components\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Nav } from \"shards-react\";\n\nfunction Pagination({ total, limit, page, setPage }) {\n  const numPages = Math.ceil(total / limit);\n\n  return (\n    <>\n      <Nav>\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\n          &lt;\n        </Button>\n        {Array(numPages)\n          .fill()\n          .map((_, i) => (\n            <Button\n              key={i + 1}\n              onClick={() => setPage(i + 1)}\n              aria-current={page === i + 1 ? \"page\" : null}\n            >\n              {i + 1}\n            </Button>\n          ))}\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\n          &gt;\n        </Button>\n      </Nav>\n    </>\n  );\n}\n\n// const Nav = styled.nav`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   gap: 4px;\n//   margin: 16px;\n// `;\n\n// const Button = styled.button`\n//   border: none;\n//   border-radius: 8px;\n//   padding: 8px;\n//   margin: 0;\n//   background: black;\n//   color: white;\n//   font-size: 1rem;\n\n//   &:hover {\n//     background: tomato;\n//     cursor: pointer;\n//     transform: translateY(-2px);\n//   }\n\n//   &[disabled] {\n//     background: grey;\n//     cursor: revert;\n//     transform: revert;\n//   }\n\n//   &[aria-current] {\n//     background: deeppink;\n//     font-weight: bold;\n//     cursor: revert;\n//     transform: revert;\n//   }\n// `;\n\nexport default Pagination;","import React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\n\nfunction All({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        console.log(sessionStorage.getItem('search'));\n        // if(sessionStorage.getItem('search') === null){\n          arr.push(\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n              <th scope=\"row\" >{i+1}</th>\n              <td >{child[i].name}</td>\n              <td>{child[i].responsible}</td>\n              <td>{child[i].filetype}</td>\n              <td>{child[i].filedes}</td>\n              <td>{child[i].time}</td>\n            </tr>\n            )\n        // }\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\n        //   arr.push(\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n        //       <th scope=\"row\" >{i+1}</th>\n        //       <td >{child[i].name}</td>\n        //       <td>{child[i].responsible}</td>\n        //       <td>{child[i].filetype}</td>\n        //       <td>{child[i].filedes}</td>\n        //       <td>{child[i].time}</td>\n        //     </tr>\n        //     )\n        // }\n      }\n  \n      return arr;\n    }\n\n  }\n\n\n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          console.log(fileurl)\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default All;\n\n","function Pressure(){\n    return(\n        <div className=\"container\">\n            <h1>Pressure</h1>\n        </div> \n    )\n}\n\nexport default Pressure;\n\n","function Temp(){\n    return(\n        <div className=\"container\">\n            <h1>Temperature</h1>\n        </div> \n    )\n}\n\nexport default Temp;\n\n","\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\nfunction CheckList({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        // if(sessionStorage.getItem('search') === null){\n          arr.push(\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n            <th scope=\"row\" >{i+1}</th>\n            <td >{child[i].name}</td>\n            <td>{child[i].responsible}</td>\n            <td>{child[i].filetype}</td>\n            <td>{child[i].filedes}</td>\n            <td>{child[i].time}</td>\n          </tr>\n          )\n        // }\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\n        //   arr.push(\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n        //       <th scope=\"row\" >{i+1}</th>\n        //       <td >{child[i].name}</td>\n        //       <td>{child[i].responsible}</td>\n        //       <td>{child[i].filetype}</td>\n        //       <td>{child[i].filedes}</td>\n        //       <td>{child[i].time}</td>\n        //     </tr>\n        //     )\n        // }\n      }\n  \n      return arr;\n    }\n\n  }\n\n  \n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Check List\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default CheckList;\n\n","\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\n\nfunction Documents({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        arr.push(\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n          <th scope=\"row\" >{i+1}</th>\n          <td >{child[i].name}</td>\n          <td>{child[i].responsible}</td>\n          <td>{child[i].filetype}</td>\n          <td>{child[i].filedes}</td>\n          <td>{child[i].time}</td>\n        </tr>\n        )\n      }\n  \n      return arr;\n    }\n\n  }\n\n\n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('documentTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Documents\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default Documents;\n\n","import React, {Component} from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput,\n  Button\n} from \"shards-react\";\nimport { FormControl } from \"react-bootstrap\";\nimport {Link, Routes, Route, useNavigate} from 'react-router-dom';\n\nexport default class Search extends Component{ \n\nstate = {\n  searchText: \"\"\n};\n\nhandleSearchInput = event => {\n  this.setState({\n    searchText: event.target.value\n  });\n};\n\n  handleSearchSubmit = (event) => {\n    event.preventDefault();\n    window.location.replace(\"/search_result\")\n      // this.props.history.push({\n      //   pathname: \"/search_result\"\n      // });\n    \n    // if (sessionStorage.getItem('search')) {\n    //   this.props.history.push({\n    //     pathname: \"/results\",\n    //     state: {\n    //       searchText: this.state.searchText\n    //     }\n    //   });\n    // } else {\n    //   alert(\"Please enter some search text!\");\n    // }\n  };\n\n  \n\nrender(){\n  return(\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\" onSubmit={this.handleSearchSubmit}>\n    {/* <InputGroup seamless className=\"ml-3\"> */}\n      {/* <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n      </InputGroupAddon> */}\n      <FormControl\n        className=\"navbar-search\"\n        placeholder=\"Search for something...\"\n        Style={{width:\"20%\"}}\n        // onChange={this.handleSearchInput}\n        // value={this.state.searchText}\n\n        onChange = {(event) => sessionStorage.setItem('search', event.target.value)}\n      />\n      \n      {/* <Button onClick={this.handleSearchSubmit} variant=\"outline-info\">\n              Search\n            </Button> */}\n    {/* </InputGroup> */}\n  </Form>\n  )\n}\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\n\nexport default class UserActions extends React.Component {\n\n  // const [user_name, setUser_name] = useState(\"\");\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  log_out(){\n    sessionStorage.removeItem('user_id')\n    document.location.href = '/'\n  }\n\n  // useEffect(() => {\n  \n  //   async function user_set_id(){\n\n  //     setUser_name(sessionStorage.getItem('user_id'));\n  //   }\n  //   user_set_id();\n  \n  // }, []);\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <span className=\"d-none d-md-inline-block\">{sessionStorage.getItem('user_id')}</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem onClick={this.log_out} className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\n\nexport default class Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n  }\n\n  toggleNotifications() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem className=\"border-right dropdown notifications\">\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">&#xE7F4;</i>\n            <Badge pill theme=\"danger\">\n              2\n            </Badge>\n          </div>\n        </NavLink>\n        <Collapse\n          open={this.state.visible}\n          className=\"dropdown-menu dropdown-menu-small\"\n        >\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE6E1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Analytics</span>\n              <p>\n                Your website’s active users count increased by{\" \"}\n                <span className=\"text-success text-semibold\">28%</span> in the\n                last week. Great job!\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE8D1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Sales</span>\n              <p>\n                Last week your store’s sales count decreased by{\" \"}\n                <span className=\"text-danger text-semibold\">5.52%</span>. It\n                could have been worse!\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem className=\"notification__all text-center\">\n            View all Notifications\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    {/* <Notifications /> */}\n    <UserActions />\n  </Nav>\n);\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"./../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n\n  );\n\n  return (\n    <div className={classes} style={{width:\"100%\"}}>\n      <Container className=\"p-0\" style={{maxWidth:\"3000px\"}}>\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSearch />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Nav, NavItem, NavLink, } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink tag={Link} to={item.to}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.array,\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © 2018 DesignRevision\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"#\"\n    },\n    {\n      title: \"Services\",\n      to: \"#\"\n    },\n    {\n      title: \"About\",\n      to: \"#\"\n    },\n    {\n      title: \"Products\",\n      to: \"#\"\n    },\n    {\n      title: \"Blog\",\n      to: \"#\"\n    }\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  ListGroup,\n  ListGroupItem,\n  Form,\n  Alert\n} from \"shards-react\";\n\nimport CompleteFormExample from \"./elements/CompleteFormExample\"\n\nfunction Editor({transactionInstance, account}) {\n  return (\n    <Card small>\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">Form Example</h6>\n    </CardHeader>\n    <CompleteFormExample transactionInstance={transactionInstance} account={account}/>\n  </Card>\n  )\n};\n\nexport default Editor;\n","import Editor from \"../Editor\"\nimport PageTitle from \"../common/PageTitle\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\n\nfunction WriteTransaction({transactionInstance, account}){\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Add New Transaction\" className=\"text-sm-left\" />\n        </Row>\n    \n\n        {/* Editor */}\n        <Row>\n          <Col lg=\"7\" md=\"12\">\n            <Editor transactionInstance={transactionInstance} account={account} />\n          </Col>\n        </Row>\n\n      </Container>\n      \n    )\n}\n\nexport default WriteTransaction;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport Pagination from \"../pagination.js\";\nimport moment from \"moment\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\n\nfunction Search_Result({transactionInstance}){\n  \n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [block_list, setblock_list] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [first, setFirst] = useState(false);\n\n  const [detail, setDetail] = useState(false);\n  const [detailcnt, setDetailcnt] = useState(-1);\n\n  const detail_click = (cnt) => {\n    setDetail(true);\n    setDetailcnt(cnt);\n  }\n\n  function repeatboardchild(child, start){\n    if(loading){\n\n      let arr = [];\n\n      if(start == 1) start = 0;\n      else{\n        start--;\n        start *= 10;\n      }\n  \n      let end = start + 10;\n  \n      if (end > child.length){\n        end = child.length;\n      }\n  \n      console.log('child = ', child);\n      \n      console.log('child.length = %d', child.length);\n      for(let i = start; i < end; i++){\n        console.log('i = %d, start = %d, end = %d', i, start, end);\n        console.log(sessionStorage.getItem('search'));\n        if(sessionStorage.getItem('search') === null){\n          arr.push(\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n              <th scope=\"row\" >{i+1}</th>\n              <td >{child[i].name}</td>\n              <td>{child[i].responsible}</td>\n              <td>{child[i].filetype}</td>\n              <td>{child[i].filedes}</td>\n              <td>{child[i].time}</td>\n            </tr>\n            )\n        }\n        else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\n          arr.push(\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\n              <th scope=\"row\" >{i+1}</th>\n              <td >{child[i].name}</td>\n              <td>{child[i].responsible}</td>\n              <td>{child[i].filetype}</td>\n              <td>{child[i].filedes}</td>\n              <td>{child[i].time}</td>\n            </tr>\n            )\n        }\n      }\n  \n      return arr;\n    }\n\n  }\n\n\n  function Showboard(){\n\n    console.log(first);\n    console.log(detail);\n\n    if(!detail && first){\n      return (\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n            </div>\n      )\n    }\n    else if (detail && first){\n      \n      return (\n        \n        <Row>\n          <Col lg=\"7\" md=\"12\">\n          <Card small>\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Form Example</h6>\n          </CardHeader>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n              <Row>\n                <Col>\n                      <label htmlFor=\"feInputState\">카테고리</label>\n                      <br></br>\n                      {block_list[detailcnt].category}\n\n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress\">파일명</label>\n                      <br></br>\n                      {block_list[detailcnt].name}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                      <br></br>\n                      {block_list[detailcnt].filedes}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                      <br></br>\n                      {block_list[detailcnt].registrant}\n                    \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                      <br></br>\n                      {block_list[detailcnt].responsible}\n                      \n                      <br></br>\n                      <br></br>\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\n                      <br></br>\n                      FileUrl :{\" \"}\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {block_list[detailcnt].ipfsHash}\n                      </a>\n                    \n                </Col>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n          </Card>\n          </Col>\n        </Row>\n      )\n    }\n\n  }\n\n\n  const nextId = useRef(1);\n  \n  \n  useEffect(() => {\n\n\n    async function updateAllTransactions(e){\n      if(transactionInstance && !first){\n\n        console.log(transactionInstance)\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n        \n  \n  \n        for(let i = events.length - 1; i >= 0; i--){\n          \n          var time_ = moment.unix(events[i].returnValues.time);\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\n          fileurl += events[i].returnValues.ipfs_hash.toString();\n          \n          console.log(fileurl)\n          \n          block_list.push({\n            id: nextId.current,\n            category : events[i].returnValues.category.toString(),\n            name : events[i].returnValues.name.toString(),\n            time : time_.toString(), \n            ipfsHash : fileurl,\n            registrant : events[i].returnValues.registrant.toString(),\n            responsible : events[i].returnValues.responsible_manager.toString(),\n            filetype : events[i].returnValues.file_type.toString(),\n            filedes : events[i].returnValues.file_description.toString()\n          }\n          )\n          \n          nextId.current += 1;\n  \n          console.log(events[i].returnValues);\n        }\n        setLoading(true);\n        setFirst(true);\n        console.log('events.length = ', events.length);\n        console.log(events);\n        console.log('block_list = ', block_list);\n      }\n  \n    }\n\n    updateAllTransactions();\n    // sessionStorage.removeItem('search')\n\n}, );\n\n    return(\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Results\" className=\"text-sm-left\" />\n        </Row>\n        {Showboard()}\n        {/* Default Light Table */}\n        {/* <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Active Users</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                    <tr>\n                      <th scope=\"col\" className=\"border-0\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Name\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Registrant\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Type\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        File Des\n                      </th>\n                      <th scope=\"col\" className=\"border-0\">\n                        Upload Time\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {repeatboardchild(block_list, page)}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n        <Pagination\n              total={block_list.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            /> */}\n      </Container>\n    )\n}\n\nexport default Search_Result;\n\n","// import React, { useEffect, useState } from \"react\";\n// import {FileUpload} from './components/FileUpload';\n// import \"./App.css\";\n// import TransactionContract from \"../src/contracts/Transaction.json\"\n// import Web3 from 'web3';\n// import moment from \"moment\";\n// import Axios from 'axios';\n// import Login from './login';\n// import Signup from './signup';\n\n\n\n// export default function App() {\n//   const [fileUrl, setFileUrl] = useState(\"\");\n//   const [web3, setWeb3] = useState(\"\");\n//   const [account, setAccount] = useState(\"\");\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const [category, setCategory] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\n//   const [registrant, setRegsitrant] = useState(\"\");\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\n//   const [fileType, setFileType] = useState(\"\");\n//   const [fileDescription, setFileDescription] = useState(\"\");\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\n\n//   const [time, setTime] = useState(\"\");\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\n//   const [category_, setCategory_] = useState(\"\");\n//   const [name_, setName_] = useState(\"\");\n//   const [registrant_, setRegsitrant_] = useState(\"\");\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n//   const [fileType_, setFileType_] = useState(\"\");\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\n\n//   const submitReview = ()=>{\n//     Axios.post('http://localhost:3001/api/insert', {\n//       category: category,\n//       name: name,\n//       time: time,\n//       ipfsHash: ipfsHash,\n//       registrant: registrant,\n//       responsible: responsibleManager,\n//       filetype: fileType,\n//       filedes: fileDescription\n//     }).then(()=>{\n//       alert('등록 완료!');\n//     })\n//   };\n\n\n//   useEffect(() => {\n//     async function componentWillMount(e) {\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n//       setWeb3(web3);\n//       console.log(web3)\n//       const contract = require(\"truffle-contract\");\n//       const transaction = contract(TransactionContract);\n//       console.log(web3);\n//       transaction.setProvider(web3.currentProvider);\n  \n//       web3.eth.getAccounts((error, accounts) => {\n//         if (!error){\n//           transaction.deployed().then(instance => {\n//             setTransactionInstance(instance);\n//             setAccount(accounts[0]);\n//             setLoading(true);\n//           })\n//         }\n//       })\n      \n//     }\n\n//     componentWillMount();\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\n//     // updateAllTransactions();\n\n    \n\n//   }, []);\n\n\n//   useEffect(() => {\n\n//     async function updateAllTransactions(e){\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n//       for(let i=0; i<events.length; i+=1){\n//         const record = {};\n//         var time_ = moment.unix(events[i].returnValues.time);\n\n//         setCategory_(events[i].returnValues.category.toString());\n//         setName_(events[i].returnValues.name.toString());\n//         setTime(time_.toString());\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\n//         setFileType_(events[i].returnValues.file_type.toString());\n//         setFileDescription_(events[i].returnValues.file_description.toString());\n//         setTransactionCnt(transactionInstance.cntTransactions());\n//         console.log(events[i].returnValues);\n//       }\n//       console.log(events.length);\n//       console.log(events);\n  \n//     }\n\n//     if (loading == true) updateAllTransactions();\n\n// }, [loading]);\n\n\n//   const sendTransaction = async (e) => {\n//     console.log(web3);\n//     console.log(account);\n//     console.log(transactionInstance);\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n//       from: account,\n//       //value: e.web3.utils.toWei('10', \"ether\"),\n//       gas: 1000000\n//     })\n    \n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n//     console.log(events[events.length-1].transactionHash)\n//     //this.updateAllTransactions();\n\n//     submitReview();\n//   }\n\n\n\n\n//   return (\n//     <div>\n//       <Login />\n//       <Signup />\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\n//       <br></br>\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\n//       <br></br>\n      \n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\n//       FileUrl :{\" \"}\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n//         {fileUrl}\n//       </a>\n//       <br></br>\n\n//       <p>Your account: {account}</p>\n//       <br></br>\n\n//       <button onClick={sendTransaction}>\n//         트랜잭션 추가\n//       </button>\n//       {/* <button onClick={updateAllTransactions}>\n//         트랜잭션 보여주기\n//       </button> */}\n//       <br></br>\n\n//       <p>all transactions:</p>\n//       <br></br>\n//       <p>Category: {category_}</p>\n//       <p>File Name: {name_}</p>\n//       <p>Time: {time}</p>\n//       <p>IPFS Hash: {ipfsHash_}</p>\n//       <p>Registrant: {registrant_}</p>\n//       <p>Responsible Manager: {responsibleManager_}</p>\n//       <p>File Type: {fileType_}</p>\n//       <p>File Description: {fileDescription_}</p>\n//     </div>\n//   )\n// }\n\n\n\n\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Route, Routes,  Navigate } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\n\nimport Ray from \"./components/pages/Ray\";\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\nimport CCTV from \"./components/pages/CCTV\";\nimport All from \"./components/pages/All\";\nimport Pressure from \"./components/pages/Pressure\";\nimport Temp from \"./components/pages/Temp\";\nimport CheckList from \"./components/pages/CheckList\";\nimport Documents from \"./components/pages/Documents\";\n\nimport { Container, Row, Col } from \"shards-react\";\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\nimport MainFooter from \"./components/layout/MainFooter\";\n\nimport WriteTransaction from \"./components/pages/WriteTransaction\"\n\nimport \"./App.css\";\nimport TransactionContract from \"../src/contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport moment from \"moment\";\nimport Search_Result from \"./components/pages/search_result\";\n\nexport default function App({block_list, transactionInstance, account}) {\n  \n  console.log(\"App!!!\")\n\n  return(\n      <Container fluid>\n        <Row>\n          <MainSidebar/>\n          <Col\n            className=\"main-content p-0\"\n            lg={{ size: 10, offset: 2 }}\n            md={{ size: 9, offset: 3 }}\n            sm=\"12\"\n            tag=\"main\"\n          >\n            {<MainNavbar />}\n            <Routes>\n              <Route path=\"/\" element={<Navigate to=\"/all\"/>} />\n              <Route path=\"/all\" element={<All transactionInstance={transactionInstance}/>} />\n              <Route path=\"/cctv\" element={<CCTV/>} />\n              <Route path=\"/documents\" element={<Documents transactionInstance={transactionInstance}/>} />\n              <Route path=\"/checklist\" element={<CheckList transactionInstance={transactionInstance}/>} />\n              <Route path=\"/search_result\" element={<Search_Result transactionInstance={transactionInstance}/>} />\n              <Route path=\"/temp\" element={<Temp/>} />\n              <Route path=\"/pressure\" element={<Pressure/>} />\n              <Route path=\"/ray\" element={<Ray/>} />\n              <Route path=\"/writetransaction\" element={<WriteTransaction transactionInstance={transactionInstance} account={account} />}/>\n            </Routes>\n            <br></br><br></br>\n            {<MainFooter />}\n          </Col>\n        </Row>\n      </Container>\n  )\n};","import React, { useEffect, useState, useRef } from \"react\";\n// import {FileUpload} from './components/FileUpload';\nimport TransactionContract from \"../contracts/Transaction.json\"\nimport Web3 from 'web3';\nimport moment from \"moment\";\n// import Axios from 'axios';\n// import Login from './login';\n// import Signup from './signup';\nimport App from '../App.jsx';\n\n\n\nexport default function Connection() {\n  // const [fileUrl, setFileUrl] = useState(\"\");\n  // const [web3, setWeb3] = useState(\"\");\n  // const [account, setAccount] = useState(\"\");\n  // const [transactionInstance, setTransactionInstance] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  // const [category, setCategory] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const [ipfsHash, setIpfsHash] = useState(\"\");\n  // const [registrant, setRegsitrant] = useState(\"\");\n  // const [responsibleManager, setResponsibleManager] = useState(\"\");\n  // const [fileType, setFileType] = useState(\"\");\n  // const [fileDescription, setFileDescription] = useState(\"\");\n  // const [transactionCnt, setTransactionCnt] = useState(\"\");\n\n  // const [time, setTime] = useState(\"\");\n  // const [ipfsHash_, setIpfsHash_] = useState(\"\");\n  // const [category_, setCategory_] = useState(\"\");\n  // const [name_, setName_] = useState(\"\");\n  // const [registrant_, setRegsitrant_] = useState(\"\");\n  // const [responsibleManager_, setResponsibleManager_] = useState(\"\");\n  // const [fileType_, setFileType_] = useState(\"\");\n  // const [fileDescription_, setFileDescription_] = useState(\"\");\n\n  // const submitReview = ()=>{\n  //   Axios.post('http://localhost:3001/api/insert', {\n  //     category: category,\n  //     name: name,\n  //     time: time,\n  //     ipfsHash: ipfsHash,\n  //     registrant: registrant,\n  //     responsible: responsibleManager,\n  //     filetype: fileType,\n  //     filedes: fileDescription\n  //   }).then(()=>{\n  //     alert('등록 완료!');\n  //   })\n  // };\n\n\n  const [web3, setWeb3] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n  const [block_list, setblock_list] = useState([]);\n\n  useEffect(() => {\n    async function componentWillMount(e) {\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-52-78-43-195.ap-northeast-2.compute.amazonaws.com:8545'));\n      setWeb3(web3);\n      console.log(web3)\n      const contract = require(\"truffle-contract\");\n      const transaction = contract(TransactionContract);\n      console.log(web3);\n      transaction.setProvider(web3.currentProvider);\n  \n      web3.eth.getAccounts((error, accounts) => {\n        if (!error){\n          transaction.deployed().then(instance => {\n            setTransactionInstance(instance);\n            let temp = 0;\n            if(sessionStorage.getItem('company') == 'SDS') temp = 0;\n            else if(sessionStorage.getItem('company') == 'KLL') temp = 1;\n            else if(sessionStorage.getItem('company') == 'KOR') temp = 2;\n            else if(sessionStorage.getItem('company') == 'LOS') temp = 3;\n            setAccount(accounts[temp]);\n            setLoading(true);\n          })\n        }\n      })\n      \n    }\n\n    componentWillMount();    \n\n  }, []);\n\n  const nextId = useRef(1);\n\n  \n\n  useEffect(() => {\n\n    async function updateAllTransactions(e){\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\n      \n\n\n      for(let i = 0; i < events.length; i += 1){\n        \n        var time_ = moment.unix(events[i].returnValues.time);\n        \n        block_list.push({\n          id: nextId.current,\n          category : events[i].returnValues.category.toString(),\n          name : events[i].returnValues.name.toString(),\n          time : time_.toString(), \n          ipfsHash : events[i].returnValues.ipfs_hash.toString(),\n          registrant : events[i].returnValues.registrant.toString(),\n          responsible : events[i].returnValues.responsible_manager.toString(),\n          filetype : events[i].returnValues.file_type.toString(),\n          filedes : events[i].returnValues.file_description.toString()\n        }\n        )\n        \n        nextId.current += 1;\n\n        console.log(events[i].returnValues);\n      }\n      console.log('events.length = ', events.length);\n      console.log(events);\n      console.log('block_list = ', block_list);\n      console.log(account);\n  \n    }\n\n    if (loading == true) updateAllTransactions();\n\n}, [loading]);\n\n\n\n  // const sendTransaction = async (e) => {\n  //   console.log(web3);\n  //   console.log(account);\n  //   console.log(transactionInstance);\n  //   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\n  //     from: account,\n  //     //value: e.web3.utils.toWei('10', \"ether\"),\n  //     gas: 1000000\n  //   })\n    \n  //   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n  //   console.log(events[events.length-1].transactionHash)\n  //   //this.updateAllTransactions();\n\n  //   submitReview();\n  // }\n\n\n\n\n  return (\n    <div>\n      {/* <Login />\n      <Signup />\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\n      <br></br>\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\n      <br></br>\n      \n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\n      FileUrl :{\" \"}\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {fileUrl}\n      </a>\n      <br></br>\n\n      <p>Your account: {account}</p>\n      <br></br>\n\n      <button onClick={sendTransaction}>\n        트랜잭션 추가\n      </button>\n      {/* <button onClick={updateAllTransactions}>\n        트랜잭션 보여주기\n      </button> *//*}\n      <br></br>\n\n      <p>all transactions:</p>\n      <br></br>\n      <p>Category: {category_}</p>\n      <p>File Name: {name_}</p>\n      <p>Time: {time}</p>\n      <p>IPFS Hash: {ipfsHash_}</p>\n      <p>Registrant: {registrant_}</p>\n      <p>Responsible Manager: {responsibleManager_}</p>\n      <p>File Type: {fileType_}</p>\n      <p>File Description: {fileDescription_}</p> */}\n      <App block_list={block_list} transactionInstance={transactionInstance} account={account}/>\n    </div>\n  )\n}","import React, { useRef, useEffect, useState } from \"react\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\nimport Connection from '../../blockchain/connection'\n\nimport \"../../\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\n\nimport { Link, useNavigate } from 'react-router-dom'\nimport moment from \"moment\";\nimport Axios from 'axios';\n\nexport default function SignUp()  {\n  const [CompanySelect, setCompanySelect] = useState(\"\")\n  const [ID, setID] = useState(\"\")\n  const [Password, setPassword] = useState(\"\")\n  const [Password2, setPassword2] = useState(\"\")\n  const [Name, setName] = useState(\"\")\n  const [Email, setEmail] = useState(\"\")\n\n  const Company_select = (e) => {\n    setCompanySelect(e.target.value);\n    console.log(CompanySelect);\n  };\n\n  \n\n  const onClickLogin = () => {\n    Axios.post('http://ec2-52-78-43-195.ap-northeast-2.compute.amazonaws.com:3001/signup', null, {\n        params: {\n        'id': ID,\n        'pw': Password2,\n        'nick': ' ',\n        'email': Email,\n        'name': Name,\n        'company': CompanySelect\n        }\n    })\n    .then(res => {\n    \n      console.log(res)\n      alert('등록 완료')\n      document.location.href = '/'\n    })\n    .catch()\n  }\n\n  return(\n      <ListGroup flush>\n      <ListGroupItem className=\"p-3\">\n        <Row>\n          <Col>\n            <Form>\n              <FormGroup>\n                <label htmlFor=\"feInputState\">회사</label>\n                <FormSelect id=\"feInputState\" size=\"lg\" style={{fontSize: \".875rem\"}} value={CompanySelect} onChange={Company_select}>\n                  <option value = \"선택\">선택</option>\n                  <option value = \"SDS\">SDS</option>\n                  <option value = \"KLL\">KLL</option>\n                  <option value = \"KOR\">KOR</option>\n                  <option value = \"LOS\">LOS</option>\n                </FormSelect>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress\">아이디</label>\n                <FormInput \n                id=\"feInputAddress\"  \n                size=\"lg\" \n                onChange = {(event) => setID(event.target.value)}/>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">비밀번호</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  type='password'\n                  size=\"lg\"\n                  onChange = {(event) => setPassword(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">비밀번호 재확인</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  type='password'\n                  size=\"lg\"\n                  onChange = {(event) => setPassword2(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">이름</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  size=\"lg\"\n                  onChange = {(event) => setName(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">이메일</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  size=\"lg\"\n                  onChange = {(event) => setEmail(event.target.value)}\n                />\n              </FormGroup>\n              <br></br>\n              <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>회원가입</Button>\n            </Form>\n          </Col>\n        </Row>\n      </ListGroupItem>\n    </ListGroup>\n  )\n}","import React, { useRef, useEffect, useState } from \"react\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\n\nimport Connection from '../../blockchain/connection'\n\nimport \"../../\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\n\nimport { Link, useNavigate } from 'react-router-dom'\nimport moment from \"moment\";\nimport Axios from 'axios';\nimport SignUp from './SignUp'\n\nexport default function Login()  {\n    const [inputId, setinputId] = useState(\"\")\n    const [inputPw, setinputPw] = useState(\"\")\n    const [signup, setsignup] = useState(false)\n\n    let navigate = useNavigate();\n    const routeChange = () => {\n        let path = '/connect';\n        navigate(path);\n    }\n\n\n    const onClickLogin = () => {\n        Axios.post('http://ec2-52-78-43-195.ap-northeast-2.compute.amazonaws.com:3001/onLogin', null, {\n            params: {\n            'user_id': inputId,\n            'user_pw': inputPw\n            }\n        })\n        .then(res => {\n            console.log(res)\n            if(res.data.msg)\n                alert(res.data.msg);\n            else{\n                sessionStorage.setItem('user_id', inputId)\n                sessionStorage.setItem('company', res.data.company)\n            }\n            document.location.href = '/'\n        })\n        .catch()\n    }\n\n\n    return (\n    <div className=\"App\">\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    <div className=\"auth-wrapper\">\n        &nbsp;&nbsp;&nbsp;\n        <div className=\"auth-inner\">\n        <Link to={'/'} style ={{textDecoration: \"none\"}}>\n        <h2 style ={{ \n                        fontWeight: \"bold\"\n                        }}>&nbsp;&nbsp;&nbsp;Safety Management</h2>\n        </Link>\n        <br></br>\n        {\n            signup ? <SignUp />\n            : \n            <div>\n            <ListGroup flush>\n            <ListGroupItem className=\"p-3\">\n                <Row>\n                    <Col>\n                        <form>\n                            <FormGroup>\n                                <FormInput id=\"feInputAddress\" size=\"lg\" placeholder=\"아이디\" onChange = {(event) => setinputId(event.target.value)}/>\n                            </FormGroup>\n\n                            <FormGroup>\n                                <FormInput\n                                type='password'\n                                id=\"feInputAddress2\"\n                                size=\"lg\"\n                                placeholder=\"비밀번호\"\n                                onChange = {(event) => setinputPw(event.target.value)}\n                                />\n                            </FormGroup>\n                            <br></br>\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>로그인</Button>\n                            \n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" outline onClick={(event) => setsignup(true)}>\n                                회원가입\n                            </Button>\n                        </form>\n                    </Col>\n                </Row>\n            </ListGroupItem>\n        </ListGroup>\n        {/* <div className=\"login\">\n            <Button onClick={(event) => setsignup(true)}>\n                <p stlye ={{  left: \"50%\",\n                                top: \"69%\",\n                                transform: \"translate(-50%, -50%)\",\n                                position: \"absolute\",\n                                color: \"#5a6169\"}}>회원가입</p>\n            </Button>\n        </div> */}\n        </div>\n        }\n        \n      </div>\n      &nbsp;&nbsp;&nbsp;\n      </div>\n      </div>\n    )\n}","// import React from 'react'\n// import '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n// import '../../App.css'\n// import { Routes, Route, Link } from 'react-router-dom'\n\n// import Login from './Login'\n// import SignUp from './SignUp'\n// import MainNavbar from '../layout/MainNavbar/MainNavbar'\n// import Connection from '../../blockchain/connection'\n\n// export default function FirstPage() {\n//   return (\n//     <div className=\"App\">\n//     <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n//         <div className=\"container\">\n//         {<MainNavbar />}\n//         <Link className=\"navbar-brand\" to={'/sign-in'}>\n//             positronX\n//         </Link>\n//         <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n//             <ul className=\"navbar-nav ml-auto\">\n//             <li className=\"nav-item\">\n//                 <Link className=\"nav-link\" to={'/sign-in'}>\n//                 Login\n//                 </Link>\n//             </li>\n//             <li className=\"nav-item\">\n//                 <Link className=\"nav-link\" to={'/sign-up'}>\n//                 Sign up\n//                 </Link>\n//             </li>\n//             </ul>\n//         </div>\n//         </div>\n//     </nav>\n\n//     <div className=\"auth-wrapper\">\n//         <div className=\"auth-inner\">\n//         <Routes>\n//             <Route exact path=\"/\" element={<Login />} />\n//             <Route path=\"/sign-in\" element={<Login />} />\n//             <Route path=\"/sign-up\" element={<SignUp />} />\n//         </Routes>\n//         </div>\n//     </div>\n//     </div>\n//   )\n// };\n\nimport React, { useRef, useEffect, useState } from \"react\";\n\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../../App.css'\nimport { Routes, Route, Link } from 'react-router-dom'\n\nimport Login from './Login'\nimport SignUp from './SignUp'\nimport Connection from '../../blockchain/connection';\n\nexport default function FirstPage() {\n   // 로그인 상태 관리\n   const [isLogin, setIsLogin] = useState(false)\n \n   useEffect(() => {\n     if(sessionStorage.getItem('user_id') === null){\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\n       console.log('isLogin ?? :: ', isLogin)\n     } else {\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\n     // 로그인 상태 변경\n       setIsLogin(true)\n       console.log('isLogin ?? :: ', isLogin)\n     }\n     \n    // sessionStorage.removeItem('search')\n   })\n\n  return (\n    \n    <div>\n\n        {isLogin ? \n      \t// Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\n        <Connection/> : \n        <Login />}\n    </div>\n  )\n};","// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import Connection from './blockchain/connection';\n// import {BrowserRouter as Router} from 'react-router-dom';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Connection />\n//   </Router>\n// );\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import Connection from './blockchain/connection';\n// import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n// import FirstPage from './components/pages/FirstPage';\n// import All from './components/pages/All';\n// import { Navigate } from 'react-router-dom';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Routes>\n//         <Route exact path=\"/\" element={<FirstPage />} />\n//         <Route path=\"/connect\" element={<Connection />} />\n//     </Routes>\n//   </Router>\n// );\n\n\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Connection from './blockchain/connection';\nimport FirstPage from './components/pages/FirstPage';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router>\n    <FirstPage />\n  </Router>\n);","\nimport React, { useRef, useEffect, useState } from \"react\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormGroup,\n  FormCheckbox,\n  FormSelect,\n  Button\n} from \"shards-react\";\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\n// const ipfsClient = require('ipfs-http-client');\n\nconst projectId = '2DCS0fCRlt3GtE33WGUMaHo05dI';\nconst projectSecret = '1df2c89edfa1422733bd46ebf81be1fa';\nconst auth =\n    'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst client = ipfsHttpClient({\n    host: 'infura-ipfs.io',\n    port: 5001,\n    protocol: 'https',\n    // apiPath: '/api/v0',\n    headers: {\n        authorization: auth,\n    },\n});\n// client.pin.add('QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn').then((res) => {\n//   console.log(res);\n// });\n\n// const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\n\n\nfunction CompleteFormExample({transactionInstance, account}){\n\n  const [CategorySelect, setCategorySelect] = useState(\"\")\n  const [Filename, setFilename] = useState(\"\")\n  const [Filedes, setFiledes] = useState(\"\")\n  const [Regsitrant, setRegsitrant] = useState(\"\")\n  const [Responsible, setResponsible] = useState(\"\")\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  const [Filetype, setFiletype] = useState(\"\");\n  \n  const [file, setFile] = useState({})\n  const [fileUrl, setFileUrl] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [uploaded, setUploaded] = useState(false)\n\n\n  const uploadFile = async (e) => {\n    // setLoading(true)\n    e.preventDefault()\n\n    try {\n      console.log('Error ipfs')\n        const added = await client.add(file);\n        console.log('Error ipfs')\n        console.log(file)\n        console.log(added)\n        const url = `https://safetymanagement.infura-ipfs.io/ipfs/${added.path}`\n        console.log(url)\n        // setUrl(url)\n        setFileUrl(url)\n        setUploaded(true)\n        setIpfsHash(ipfsHash => added.path)\n        setLoading(true)\n    } catch (err) {\n        console.log('Error uploading the file : ', err)\n        setLoading(false)\n    }\n}\n\nconst preUpload = (e) => {\n    if (e.target.value !== '') {\n        setFile(e.target.files[0])\n    } else {\n        setFile({})\n    }\n}\n\n  const sendTransaction = async (e) => {\n\n    let cnt = file.name.length;\n    let target = '';\n    for(let i = cnt-1; i > 0; i-- ){\n      target += file.name[i];\n      if(file.name[i] == '.') break;\n    }\n    let temp = '';\n    for(let i = target.length-2; i >= 0; i--){\n      temp += target[i];\n    }\n    console.log(ipfsHash)\n    await transactionInstance.sendTrans(CategorySelect, Filename, ipfsHash, Regsitrant, Responsible, temp, Filedes,{\n      from: account,\n      //value: e.web3.utils.toWei('10', \"ether\"),\n      gas: 1000000\n    })\n    \n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\n    console.log(events[events.length-1].transactionHash)\n    //this.updateAllTransactions();\n    window.location.replace(\"/\")\n    // submitReview();\n  }\n  \n  const category_select = (e) => {\n    setCategorySelect(e.target.value);\n    console.log(CategorySelect);\n  };\n  \n  const ipfsupload = (e) => {\n    setFileUrl(e.target.value);\n    // setFiletype(fileUrl);\n    // setLoading(true);\n    preUpload(e);\n  }\n\n  const uploadbutton = () => {\n    if (file.name) {\n    return (\n      <div>\n    {ipfsHash ? (\n      <h5>\n          Uploaded Successfully ✅\n      </h5>\n  ) : \n  (\n      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={uploadFile}>Upload File</Button>\n  )}\n  </div>\n    )\n  }\n  }\n\n  const CustomFileUpload = () => {\n\n    return (\n    <div className=\"custom-file mb-3\">\n    <input type=\"file\" className=\"custom-file-input\" id=\"customFile2\" \n                onChange = {ipfsupload}/>\n    {file.name ?\n    \n       (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\n       {file.name}\n        </label>) : \n        (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\n       파일을 선택하세요\n        </label>)\n    }\n    </div>\n    )\n  }\n\n  return(\n    <ListGroup flush>\n      <ListGroupItem className=\"p-3\">\n        <Row>\n          <Col>\n            <Form>\n              <FormGroup>\n                <label htmlFor=\"feInputState\">카테고리</label>\n                <FormSelect id=\"feInputState\" value={CategorySelect} onChange={category_select}>\n                  {/* <option>CCTV</option> */}\n                  <option value = \"선택\">선택</option>\n                  <option value = \"Document\">전자문서</option>\n                  <option value = \"CheckList\">체크리스트</option>\n                  {/* <option>온도 센서</option>\n                  <option>압력 센서</option>\n                  <option>적외선 센서</option>  */}\n                </FormSelect>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress\">파일명</label>\n                <FormInput id=\"feInputAddress\" placeholder=\"파일명을 입력하세요\" onChange = {(event) => setFilename(event.target.value)}/>\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">파일 설명</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  placeholder=\"파일 설명을 입력하세요\"\n                  onChange = {(event) => setFiledes(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">업로더 이름</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  placeholder=\"업로더 이름을 입력하세요\"\n                  onChange = {(event) => setRegsitrant(event.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\n                <FormInput\n                  id=\"feInputAddress2\"\n                  placeholder=\"업로드 책임자를 입력하세요\"\n                  onChange = {(event) => setResponsible(event.target.value)}\n                />\n              </FormGroup>\n\n              <strong className=\"d-block mb-2\">\n                파일 업로드\n              </strong>\n            </Form>\n              <CustomFileUpload />\n              \n              {uploadbutton()}\n              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>트랜잭션 업로드</Button>\n          </Col>\n        </Row>\n      </ListGroupItem>\n    </ListGroup>\n  )\n                };\n\nexport default CompleteFormExample;"],"sourceRoot":""}
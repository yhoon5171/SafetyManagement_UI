{"version":3,"sources":["../node_modules/truffle-contract/node_modules/web3-eth-accounts/src sync","../node_modules/truffle-interface-adapter/node_modules/web3-eth-accounts/src sync","components/pages/Ray.js","components/flux/constants.js","components/flux/dispatcher.js","components/flux/store.js","components/data/sidebar-nav-items.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/common/PageTitle.js","components/pages/CCTV.js","components/pagination.js","components/pages/All.js","components/pages/Pressure.js","components/pages/Temp.js","components/pages/CheckList.js","components/pages/Documents.js","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainFooter.js","components/elements/CompleteFormExample.js","components/Editor.js","components/pages/WriteTransaction.js","App.jsx","blockchain/connection.js","components/pages/SignUp.js","components/pages/Login.js","components/pages/FirstPage.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Ray","fluid","className","pill","Dispatcher","_store","menuVisible","navItems","title","to","htmlBefore","htmlAfter","registerToActions","bind","toggleSidebar","register","actionType","payload","Constants","this","emit","callback","on","removeListener","EventEmitter","SidebarMainNavbar","props","handleToggleSidebar","dispatch","hideLogoText","type","href","style","lineHeight","onClick","React","Component","defaultProps","display","minHeight","seamless","placeholder","SidebarNavItem","item","tag","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","state","Store","getSidebarItems","onChange","addChangeListener","removeChangeListener","setState","items","map","idx","MainSidebar","sidebarNavItems","getMenuState","classes","classNames","lg","size","md","sm","order","offset","theme","outline","SidebarSearch","PageTitle","subtitle","attrs","xs","CCTV","noGutters","small","scope","Pagination","total","limit","page","setPage","numPages","Math","ceil","disabled","Array","fill","_","i","All","transactionInstance","useState","block_list","loading","setLoading","first","setFirst","detail","setDetail","detailcnt","setDetailcnt","repeatboardchild","child","start","arr","end","length","console","log","push","cnt","cursor","name","responsible","filetype","filedes","time","nextId","useRef","useEffect","getPastEvents","fromBlock","toBlock","events","time_","moment","unix","returnValues","fileurl","ipfs_hash","toString","current","category","ipfsHash","registrant","responsible_manager","file_type","file_description","updateAllTransactions","flush","htmlFor","target","rel","Pressure","Temp","CheckList","Documents","Style","width","UserActions","visible","toggleUserActions","sessionStorage","removeItem","document","location","Dropdown","caret","toggle","NavLink","getItem","DropdownMenu","right","open","log_out","navbar","NavbarToggle","handleClick","MainNavbar","layout","stickyTop","maxWidth","NavbarSearch","NavbarNav","MainFooter","contained","menuItems","copyright","Link","ipfs","ipfsHttpClient","CompleteFormExample","account","CategorySelect","setCategorySelect","Filename","setFilename","Filedes","setFiledes","Regsitrant","setRegsitrant","Responsible","setResponsible","setIpfsHash","file","setFile","setFileUrl","setUploaded","uploadFile","preventDefault","add","added","url","path","sendTransaction","temp","sendTrans","from","gas","transactionHash","window","replace","ipfsupload","value","files","preUpload","CustomFileUpload","event","uploadbutton","Editor","WriteTransaction","App","element","Connection","setWeb3","setAccount","setTransactionInstance","web3","Web3","providers","HttpProvider","contract","require","transaction","TransactionContract","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","componentWillMount","SignUp","CompanySelect","setCompanySelect","ID","setID","setPassword","Password2","setPassword2","Name","setName","Email","setEmail","fontSize","block","Axios","post","params","res","alert","catch","Login","inputId","setinputId","inputPw","setinputPw","signup","setsignup","useNavigate","textDecoration","fontWeight","data","msg","setItem","company","FirstPage","isLogin","setIsLogin","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.edbfa240.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1207;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1269;","import { Container, Button } from \"shards-react\";\r\n\r\n// function Ray(){\r\n\r\n//    return(\r\n//     <Container fluid className=\"main-content-container px-4 pb-4\">\r\n//       <div className=\"error\">\r\n//         <div className=\"error__content\">\r\n//           <h2>500</h2>\r\n//           <h3>Something went wrong!</h3>\r\n//           <p>There was a problem on our end. Please try again later.</p>\r\n//           <Button pill>&larr; Go Back</Button>\r\n//         </div>\r\n//       </div>\r\n//     </Container>\r\n//    )\r\n\r\n// }\r\n\r\nfunction Ray(){\r\n\r\n  return(\r\n   <Container fluid className=\"main-content-container px-4 pb-4\">\r\n     <div className=\"error\">\r\n       <div className=\"error__content\">\r\n         <h2>500</h2>\r\n         <h3>Something went wrong!</h3>\r\n         <p>There was a problem on our end. Please try again later.</p>\r\n         <Button pill>&larr; Go Back</Button>\r\n       </div>\r\n     </div>\r\n   </Container>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Ray;\r\n\r\n","export default {\r\n  CHANGE: \"CHANGE\",\r\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import { EventEmitter } from \"events\";\r\n\r\nimport Dispatcher from \"./dispatcher\";\r\nimport Constants from \"./constants\";\r\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\r\n\r\nlet _store = {\r\n  menuVisible: false,\r\n  navItems: getSidebarNavItems()\r\n};\r\n\r\nclass Store extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n\r\n    this.registerToActions = this.registerToActions.bind(this);\r\n    this.toggleSidebar = this.toggleSidebar.bind(this);\r\n\r\n    Dispatcher.register(this.registerToActions.bind(this));\r\n  }\r\n\r\n  registerToActions({ actionType, payload }) {\r\n    switch (actionType) {\r\n      case Constants.TOGGLE_SIDEBAR:\r\n        this.toggleSidebar();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  toggleSidebar() {\r\n    _store.menuVisible = !_store.menuVisible;\r\n    this.emit(Constants.CHANGE);\r\n  }\r\n\r\n  getMenuState() {\r\n    return _store.menuVisible;\r\n  }\r\n\r\n  getSidebarItems() {\r\n    return _store.navItems;\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.on(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new Store();\r\n","export default function() {\r\n  return [\r\n    {\r\n      title: \"전체보기\",\r\n      to: \"/all\",\r\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\r\n      htmlAfter: \"\"\r\n    },\r\n    {\r\n      title: \"CCTV\",\r\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\r\n      to: \"/cctv\",\r\n    },\r\n    {\r\n      title: \"전자문서\",\r\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\r\n      to: \"/documents\",\r\n    },\r\n    {\r\n      title: \"체크리스트\",\r\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\r\n      to: \"/checklist\",\r\n    },\r\n    {\r\n      title: \"온도 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\r\n      to: \"/temp\",\r\n    },\r\n    {\r\n      title: \"압력 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">person</i>',\r\n      to: \"/pressure\",\r\n    },\r\n    {\r\n      title: \"적외선 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">error</i>',\r\n      to: \"/ray\",\r\n    }\r\n  ];\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Navbar, NavbarBrand, } from \"shards-react\";\r\n\r\nimport { Dispatcher, Constants } from \"./../../flux\";\r\n\r\nclass SidebarMainNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\r\n  }\r\n\r\n  handleToggleSidebar() {\r\n    Dispatcher.dispatch({\r\n      actionType: Constants.TOGGLE_SIDEBAR\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { hideLogoText } = this.props;\r\n    return (\r\n      <div className=\"main-navbar\">\r\n        <Navbar\r\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\r\n          type=\"light\"\r\n        >\r\n          <NavbarBrand\r\n            className=\"w-100 mr-0\"\r\n            href=\"#\"\r\n            style={{ lineHeight: \"25px\" }}\r\n          >\r\n            <div className=\"d-table m-auto\">\r\n              {/* <img\r\n                id=\"main-logo\"\r\n                className=\"d-inline-block align-top mr-1\"\r\n                style={{ maxWidth: \"25px\" }}\r\n                src={require(\"./../shards-dashboards-logo.svg\")}\r\n                alt=\"Shards Dashboard\"\r\n              /> */}\r\n              {!hideLogoText && (\r\n                <span className=\"d-none d-md-inline ml-1\">\r\n                  Safety Management\r\n                </span>\r\n              )}\r\n            </div>\r\n          </NavbarBrand>\r\n          {/* eslint-disable-next-line */}\r\n          <a\r\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\r\n            onClick={this.handleToggleSidebar}\r\n          >\r\n            <i className=\"material-icons\">&#xE5C4;</i>\r\n          </a>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebarMainNavbar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nSidebarMainNavbar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default SidebarMainNavbar;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n        <FormInput\r\n          className=\"navbar-search\"\r\n          placeholder=\"Search for something...\"\r\n          aria-label=\"Search\"\r\n        />\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\r\nimport { NavItem, NavLink } from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({ item }) => (\r\n  <NavItem>\r\n    <NavLink tag={RouteNavLink} to={item.to}>\r\n      {item.htmlBefore && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\r\n        />\r\n      )}\r\n      {item.title && <span>{item.title}</span>}\r\n      {item.htmlAfter && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\r\n        />\r\n      )}\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n  /**\r\n   * The item object.\r\n   */\r\n  item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport { Store } from \"./../../flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      navItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      navItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { navItems: items } = this.state;\r\n    return (\r\n      <div className=\"nav-wrapper\">\r\n        <Nav className=\"nav--no-borders flex-column\">\r\n          {items.map((item, idx) => (\r\n            <SidebarNavItem key={idx} item={item} />\r\n          ))}\r\n        </Nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Col, Row, Button } from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport { Store } from \"./../../flux\";\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass MainSidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuVisible: false,\r\n      sidebarNavItems: Store.getSidebarItems(),\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      menuVisible: Store.getMenuState(),\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    const classes = classNames(\r\n      \"main-sidebar\",\r\n      \"px-0\",\r\n      \"col-12\",\r\n      this.state.menuVisible && \"open\"\r\n    );\r\n\r\n    return (\r\n      <Col\r\n        tag=\"aside\"\r\n        className={classes}\r\n        lg={{ size: 2 }}\r\n        md={{ size: 1 }}\r\n      > \r\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\r\n      \r\n      <Row>d</Row>\r\n      <Row>\r\n        <Col sm ={{order:4, offset: 2}}>\r\n          <Link to = \"/writetransaction\">\r\n            <Button pill theme=\"secondary\" outline size=\"md\" className=\"mb-2\">\r\n                <i className=\"font-size:30px material-icons mr-1\">add</i> 트랜잭션 추가\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n\r\n        <SidebarSearch />\r\n        <SidebarNavItems />\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col } from \"shards-react\";\r\n\r\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\r\n  const classes = classNames(\r\n    className,\r\n    \"text-center\",\r\n    \"text-md-left\",\r\n    \"mb-sm-0\"\r\n  );\r\n\r\n  return (\r\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\r\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n      <h3 className=\"page-title\">{title}</h3>\r\n    </Col>\r\n  )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  /**\r\n   * The page title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The page subtitle.\r\n   */\r\n  subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\n\r\nfunction CCTV(){\r\n\r\n  return(\r\n    <Container fluid className=\"main-content-container px-4\">\r\n      <Row noGutters className=\"page-header py-4\">\r\n        <PageTitle sm=\"4\" title=\"CCTV\" className=\"text-sm-left\" />\r\n      </Row>\r\n      {/* Default Light Table */}\r\n      <Row>\r\n        <Col>\r\n          <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Active Users</h6>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n              <table className=\"table mb-0\">\r\n                <thead className=\"bg-light\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      #\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      First Name\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Last Name\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Country\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      City\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Phone\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Ali</td>\r\n                    <td>Kerry</td>\r\n                    <td>Russian Federation</td>\r\n                    <td>Gdańsk</td>\r\n                    <td>107-0339</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Clark</td>\r\n                    <td>Angela</td>\r\n                    <td>Estonia</td>\r\n                    <td>Borghetto di Vara</td>\r\n                    <td>1-660-850-1647</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>3</td>\r\n                    <td>Jerry</td>\r\n                    <td>Nathan</td>\r\n                    <td>Cyprus</td>\r\n                    <td>Braunau am Inn</td>\r\n                    <td>214-4225</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>4</td>\r\n                    <td>Colt</td>\r\n                    <td>Angela</td>\r\n                    <td>Liberia</td>\r\n                    <td>Bad Hersfeld</td>\r\n                    <td>1-848-473-7416</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CCTV;\r\n\r\n","// import styled from \"styled-components\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Nav } from \"shards-react\";\r\n\r\nfunction Pagination({ total, limit, page, setPage }) {\r\n  const numPages = Math.ceil(total / limit);\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n          &lt;\r\n        </Button>\r\n        {Array(numPages)\r\n          .fill()\r\n          .map((_, i) => (\r\n            <Button\r\n              key={i + 1}\r\n              onClick={() => setPage(i + 1)}\r\n              aria-current={page === i + 1 ? \"page\" : null}\r\n            >\r\n              {i + 1}\r\n            </Button>\r\n          ))}\r\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\r\n          &gt;\r\n        </Button>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// const Nav = styled.nav`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   gap: 4px;\r\n//   margin: 16px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   border: none;\r\n//   border-radius: 8px;\r\n//   padding: 8px;\r\n//   margin: 0;\r\n//   background: black;\r\n//   color: white;\r\n//   font-size: 1rem;\r\n\r\n//   &:hover {\r\n//     background: tomato;\r\n//     cursor: pointer;\r\n//     transform: translateY(-2px);\r\n//   }\r\n\r\n//   &[disabled] {\r\n//     background: grey;\r\n//     cursor: revert;\r\n//     transform: revert;\r\n//   }\r\n\r\n//   &[aria-current] {\r\n//     background: deeppink;\r\n//     font-weight: bold;\r\n//     cursor: revert;\r\n//     transform: revert;\r\n//   }\r\n// `;\r\n\r\nexport default Pagination;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction All({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          console.log(fileurl)\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default All;\r\n\r\n","function Pressure(){\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>Pressure</h1>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Pressure;\r\n\r\n","function Temp(){\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>Temperature</h1>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Temp;\r\n\r\n","\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction CheckList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default CheckList;\r\n\r\n","\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction Documents({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('documentTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Documents;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <FormInput\r\n        className=\"navbar-search\"\r\n        placeholder=\"Search for something...\"\r\n        Style={{width:\"20%\"}}\r\n      />\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink\r\n} from \"shards-react\";\r\n\r\nexport default class UserActions extends React.Component {\r\n\r\n  // const [user_name, setUser_name] = useState(\"\");\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleUserActions = this.toggleUserActions.bind(this);\r\n  }\r\n\r\n  toggleUserActions() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  log_out(){\r\n    sessionStorage.removeItem('user_id')\r\n    document.location.href = '/'\r\n  }\r\n\r\n  // useEffect(() => {\r\n  \r\n  //   async function user_set_id(){\r\n\r\n  //     setUser_name(sessionStorage.getItem('user_id'));\r\n  //   }\r\n  //   user_set_id();\r\n  \r\n  // }, []);\r\n\r\n  render() {\r\n    return (\r\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n          <span className=\"d-none d-md-inline-block\">{sessionStorage.getItem('user_id')}</span>\r\n        </DropdownToggle>\r\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n          <DropdownItem onClick={this.log_out} className=\"text-danger\">\r\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\r\n\r\nexport default class Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleNotifications = this.toggleNotifications.bind(this);\r\n  }\r\n\r\n  toggleNotifications() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem className=\"border-right dropdown notifications\">\r\n        <NavLink\r\n          className=\"nav-link-icon text-center\"\r\n          onClick={this.toggleNotifications}\r\n        >\r\n          <div className=\"nav-link-icon__wrapper\">\r\n            <i className=\"material-icons\">&#xE7F4;</i>\r\n            <Badge pill theme=\"danger\">\r\n              2\r\n            </Badge>\r\n          </div>\r\n        </NavLink>\r\n        <Collapse\r\n          open={this.state.visible}\r\n          className=\"dropdown-menu dropdown-menu-small\"\r\n        >\r\n          <DropdownItem>\r\n            <div className=\"notification__icon-wrapper\">\r\n              <div className=\"notification__icon\">\r\n                <i className=\"material-icons\">&#xE6E1;</i>\r\n              </div>\r\n            </div>\r\n            <div className=\"notification__content\">\r\n              <span className=\"notification__category\">Analytics</span>\r\n              <p>\r\n                Your website’s active users count increased by{\" \"}\r\n                <span className=\"text-success text-semibold\">28%</span> in the\r\n                last week. Great job!\r\n              </p>\r\n            </div>\r\n          </DropdownItem>\r\n          <DropdownItem>\r\n            <div className=\"notification__icon-wrapper\">\r\n              <div className=\"notification__icon\">\r\n                <i className=\"material-icons\">&#xE8D1;</i>\r\n              </div>\r\n            </div>\r\n            <div className=\"notification__content\">\r\n              <span className=\"notification__category\">Sales</span>\r\n              <p>\r\n                Last week your store’s sales count decreased by{\" \"}\r\n                <span className=\"text-danger text-semibold\">5.52%</span>. It\r\n                could have been worse!\r\n              </p>\r\n            </div>\r\n          </DropdownItem>\r\n          <DropdownItem className=\"notification__all text-center\">\r\n            View all Notifications\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n  <Nav navbar className=\"border-left flex-row\">\r\n    {/* <Notifications /> */}\r\n    <UserActions />\r\n  </Nav>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Dispatcher, Constants } from \"./../../flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    Dispatcher.dispatch({\r\n      actionType: Constants.TOGGLE_SIDEBAR\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n          <i className=\"material-icons\">&#xE5D2;</i>\r\n        </a>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Container, Navbar } from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({ layout, stickyTop }) => {\r\n  const classes = classNames(\r\n    \"main-navbar\",\r\n    \"bg-white\",\r\n\r\n  );\r\n\r\n  return (\r\n    <div className={classes} style={{width:\"100%\"}}>\r\n      <Container className=\"p-0\" style={{maxWidth:\"3000px\"}}>\r\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n          <NavbarSearch />\r\n          <NavbarNav />\r\n          <NavbarToggle />\r\n        </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n  /**\r\n   * The layout type where the MainNavbar is used.\r\n   */\r\n  layout: PropTypes.string,\r\n  /**\r\n   * Whether the main navbar is sticky to the top, or not.\r\n   */\r\n  stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n  stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Nav, NavItem, NavLink, } from \"shards-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainFooter = ({ contained, menuItems, copyright }) => (\r\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n    <Container fluid={contained}>\r\n      <Row>\r\n        <Nav>\r\n          {menuItems.map((item, idx) => (\r\n            <NavItem key={idx}>\r\n              <NavLink tag={Link} to={item.to}>\r\n                {item.title}\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n      </Row>\r\n    </Container>\r\n  </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n  /**\r\n   * Whether the content is contained, or not.\r\n   */\r\n  contained: PropTypes.bool,\r\n  /**\r\n   * The menu items array.\r\n   */\r\n  menuItems: PropTypes.array,\r\n  /**\r\n   * The copyright info.\r\n   */\r\n  copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n  contained: false,\r\n  copyright: \"Copyright © 2018 DesignRevision\",\r\n  menuItems: [\r\n    {\r\n      title: \"Home\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Services\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"About\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Products\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Blog\",\r\n      to: \"#\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default MainFooter;\r\n","\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\r\nconst ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\n\r\n\r\nfunction CompleteFormExample({transactionInstance, account}){\r\n\r\n  const [CategorySelect, setCategorySelect] = useState(\"\")\r\n  const [Filename, setFilename] = useState(\"\")\r\n  const [Filedes, setFiledes] = useState(\"\")\r\n  const [Regsitrant, setRegsitrant] = useState(\"\")\r\n  const [Responsible, setResponsible] = useState(\"\")\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  const [Filetype, setFiletype] = useState(\"\");\r\n  \r\n  const [file, setFile] = useState({})\r\n  const [fileUrl, setFileUrl] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [uploaded, setUploaded] = useState(false)\r\n\r\n\r\n  const uploadFile = async (e) => {\r\n    // setLoading(true)\r\n    e.preventDefault()\r\n\r\n    try {\r\n        const added = await ipfs.add(file);\r\n        console.log(file)\r\n        console.log(added)\r\n        const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n        console.log(url)\r\n        // setUrl(url)\r\n        setFileUrl(url)\r\n        setUploaded(true)\r\n        setIpfsHash(ipfsHash => added.path)\r\n        setLoading(true)\r\n    } catch (err) {\r\n        console.log('Error uploading the file : ', err)\r\n        setLoading(false)\r\n    }\r\n}\r\n\r\nconst preUpload = (e) => {\r\n    if (e.target.value !== '') {\r\n        setFile(e.target.files[0])\r\n    } else {\r\n        setFile({})\r\n    }\r\n}\r\n\r\n  const sendTransaction = async (e) => {\r\n\r\n    let cnt = file.name.length;\r\n    let target = '';\r\n    for(let i = cnt-1; i > 0; i-- ){\r\n      target += file.name[i];\r\n      if(file.name[i] == '.') break;\r\n    }\r\n    let temp = '';\r\n    for(let i = target.length-2; i >= 0; i--){\r\n      temp += target[i];\r\n    }\r\n    console.log(ipfsHash)\r\n    await transactionInstance.sendTrans(CategorySelect, Filename, ipfsHash, Regsitrant, Responsible, temp, Filedes,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n  \r\n  const category_select = (e) => {\r\n    setCategorySelect(e.target.value);\r\n    console.log(CategorySelect);\r\n  };\r\n  \r\n  const ipfsupload = (e) => {\r\n    setFileUrl(e.target.value);\r\n    // setFiletype(fileUrl);\r\n    // setLoading(true);\r\n    preUpload(e);\r\n  }\r\n\r\n  const uploadbutton = () => {\r\n    if (file.name) {\r\n    return (\r\n      <div>\r\n    {ipfsHash ? (\r\n      <h5>\r\n          Uploaded Successfully ✅\r\n      </h5>\r\n  ) : \r\n  (\r\n      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={uploadFile}>Upload File</Button>\r\n  )}\r\n  </div>\r\n    )\r\n  }\r\n  }\r\n\r\n  const CustomFileUpload = () => {\r\n\r\n    return (\r\n    <div className=\"custom-file mb-3\">\r\n    <input type=\"file\" className=\"custom-file-input\" id=\"customFile2\" \r\n                onChange = {ipfsupload}/>\r\n    {file.name ?\r\n    \r\n       (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n       {file.name}\r\n        </label>) : \r\n        (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n       파일을 선택하세요\r\n        </label>)\r\n    }\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <ListGroup flush>\r\n      <ListGroupItem className=\"p-3\">\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputState\">카테고리</label>\r\n                <FormSelect id=\"feInputState\" value={CategorySelect} onChange={category_select}>\r\n                  {/* <option>CCTV</option> */}\r\n                  <option value = \"선택\">선택</option>\r\n                  <option value = \"Document\">전자문서</option>\r\n                  <option value = \"CheckList\">체크리스트</option>\r\n                  {/* <option>온도 센서</option>\r\n                  <option>압력 센서</option>\r\n                  <option>적외선 센서</option>  */}\r\n                </FormSelect>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress\">파일명</label>\r\n                <FormInput id=\"feInputAddress\" placeholder=\"파일명을 입력하세요\" onChange = {(event) => setFilename(event.target.value)}/>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  placeholder=\"파일 설명을 입력하세요\"\r\n                  onChange = {(event) => setFiledes(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  placeholder=\"업로더 이름을 입력하세요\"\r\n                  onChange = {(event) => setRegsitrant(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  placeholder=\"업로드 책임자를 입력하세요\"\r\n                  onChange = {(event) => setResponsible(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <strong className=\"d-block mb-2\">\r\n                파일 업로드\r\n              </strong>\r\n            </Form>\r\n              <CustomFileUpload />\r\n              \r\n              {uploadbutton()}\r\n              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>트랜잭션 업로드</Button>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n                };\r\n\r\nexport default CompleteFormExample;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  Alert\r\n} from \"shards-react\";\r\n\r\nimport CompleteFormExample from \"./elements/CompleteFormExample\"\r\n\r\nfunction Editor({transactionInstance, account}) {\r\n  return (\r\n    <Card small>\r\n    <CardHeader className=\"border-bottom\">\r\n      <h6 className=\"m-0\">Form Example</h6>\r\n    </CardHeader>\r\n    <CompleteFormExample transactionInstance={transactionInstance} account={account}/>\r\n  </Card>\r\n  )\r\n};\r\n\r\nexport default Editor;\r\n","import Editor from \"../Editor\"\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\r\n\r\n\r\nfunction WriteTransaction({transactionInstance, account}){\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Add New Transaction\" className=\"text-sm-left\" />\r\n        </Row>\r\n    \r\n\r\n        {/* Editor */}\r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n            <Editor transactionInstance={transactionInstance} account={account} />\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n      \r\n    )\r\n}\r\n\r\nexport default WriteTransaction;\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\n// import \"./App.css\";\r\n// import TransactionContract from \"../src/contracts/Transaction.json\"\r\n// import Web3 from 'web3';\r\n// import moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\n\r\n\r\n\r\n// export default function App() {\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n//   const [web3, setWeb3] = useState(\"\");\r\n//   const [account, setAccount] = useState(\"\");\r\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\r\n//   const [registrant, setRegsitrant] = useState(\"\");\r\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n//   const [fileType, setFileType] = useState(\"\");\r\n//   const [fileDescription, setFileDescription] = useState(\"\");\r\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n//   const [time, setTime] = useState(\"\");\r\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n//   const [category_, setCategory_] = useState(\"\");\r\n//   const [name_, setName_] = useState(\"\");\r\n//   const [registrant_, setRegsitrant_] = useState(\"\");\r\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n//   const [fileType_, setFileType_] = useState(\"\");\r\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n//   const submitReview = ()=>{\r\n//     Axios.post('http://localhost:3001/api/insert', {\r\n//       category: category,\r\n//       name: name,\r\n//       time: time,\r\n//       ipfsHash: ipfsHash,\r\n//       registrant: registrant,\r\n//       responsible: responsibleManager,\r\n//       filetype: fileType,\r\n//       filedes: fileDescription\r\n//     }).then(()=>{\r\n//       alert('등록 완료!');\r\n//     })\r\n//   };\r\n\r\n\r\n//   useEffect(() => {\r\n//     async function componentWillMount(e) {\r\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n//       setWeb3(web3);\r\n//       console.log(web3)\r\n//       const contract = require(\"truffle-contract\");\r\n//       const transaction = contract(TransactionContract);\r\n//       console.log(web3);\r\n//       transaction.setProvider(web3.currentProvider);\r\n  \r\n//       web3.eth.getAccounts((error, accounts) => {\r\n//         if (!error){\r\n//           transaction.deployed().then(instance => {\r\n//             setTransactionInstance(instance);\r\n//             setAccount(accounts[0]);\r\n//             setLoading(true);\r\n//           })\r\n//         }\r\n//       })\r\n      \r\n//     }\r\n\r\n//     componentWillMount();\r\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\r\n//     // updateAllTransactions();\r\n\r\n    \r\n\r\n//   }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     async function updateAllTransactions(e){\r\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n//       for(let i=0; i<events.length; i+=1){\r\n//         const record = {};\r\n//         var time_ = moment.unix(events[i].returnValues.time);\r\n\r\n//         setCategory_(events[i].returnValues.category.toString());\r\n//         setName_(events[i].returnValues.name.toString());\r\n//         setTime(time_.toString());\r\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\r\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\r\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\r\n//         setFileType_(events[i].returnValues.file_type.toString());\r\n//         setFileDescription_(events[i].returnValues.file_description.toString());\r\n//         setTransactionCnt(transactionInstance.cntTransactions());\r\n//         console.log(events[i].returnValues);\r\n//       }\r\n//       console.log(events.length);\r\n//       console.log(events);\r\n  \r\n//     }\r\n\r\n//     if (loading == true) updateAllTransactions();\r\n\r\n// }, [loading]);\r\n\r\n\r\n//   const sendTransaction = async (e) => {\r\n//     console.log(web3);\r\n//     console.log(account);\r\n//     console.log(transactionInstance);\r\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n//       from: account,\r\n//       //value: e.web3.utils.toWei('10', \"ether\"),\r\n//       gas: 1000000\r\n//     })\r\n    \r\n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n//     console.log(events[events.length-1].transactionHash)\r\n//     //this.updateAllTransactions();\r\n\r\n//     submitReview();\r\n//   }\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <Login />\r\n//       <Signup />\r\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n//       <br></br>\r\n      \r\n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n//       FileUrl :{\" \"}\r\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//         {fileUrl}\r\n//       </a>\r\n//       <br></br>\r\n\r\n//       <p>Your account: {account}</p>\r\n//       <br></br>\r\n\r\n//       <button onClick={sendTransaction}>\r\n//         트랜잭션 추가\r\n//       </button>\r\n//       {/* <button onClick={updateAllTransactions}>\r\n//         트랜잭션 보여주기\r\n//       </button> */}\r\n//       <br></br>\r\n\r\n//       <p>all transactions:</p>\r\n//       <br></br>\r\n//       <p>Category: {category_}</p>\r\n//       <p>File Name: {name_}</p>\r\n//       <p>Time: {time}</p>\r\n//       <p>IPFS Hash: {ipfsHash_}</p>\r\n//       <p>Registrant: {registrant_}</p>\r\n//       <p>Responsible Manager: {responsibleManager_}</p>\r\n//       <p>File Type: {fileType_}</p>\r\n//       <p>File Description: {fileDescription_}</p>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { Route, Routes,  Navigate } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nimport Ray from \"./components/pages/Ray\";\r\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\r\nimport CCTV from \"./components/pages/CCTV\";\r\nimport All from \"./components/pages/All\";\r\nimport Pressure from \"./components/pages/Pressure\";\r\nimport Temp from \"./components/pages/Temp\";\r\nimport CheckList from \"./components/pages/CheckList\";\r\nimport Documents from \"./components/pages/Documents\";\r\n\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\r\nimport MainFooter from \"./components/layout/MainFooter\";\r\n\r\nimport WriteTransaction from \"./components/pages/WriteTransaction\"\r\n\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n\r\nexport default function App({block_list, transactionInstance, account}) {\r\n  \r\n  console.log(\"App!!!\")\r\n\r\n  return(\r\n      <Container fluid>\r\n        <Row>\r\n          <MainSidebar/>\r\n          <Col\r\n            className=\"main-content p-0\"\r\n            lg={{ size: 10, offset: 2 }}\r\n            md={{ size: 9, offset: 3 }}\r\n            sm=\"12\"\r\n            tag=\"main\"\r\n          >\r\n            {<MainNavbar />}\r\n            <Routes>\r\n              <Route path=\"/\" element={<Navigate to=\"/all\"/>} />\r\n              <Route path=\"/all\" element={<All transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/cctv\" element={<CCTV/>} />\r\n              <Route path=\"/documents\" element={<Documents transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/checklist\" element={<CheckList transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/temp\" element={<Temp/>} />\r\n              <Route path=\"/pressure\" element={<Pressure/>} />\r\n              <Route path=\"/ray\" element={<Ray/>} />\r\n              <Route path=\"/writetransaction\" element={<WriteTransaction transactionInstance={transactionInstance} account={account} />}/>\r\n            </Routes>\r\n            <br></br><br></br>\r\n            {<MainFooter />}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n  )\r\n};","import React, { useEffect, useState, useRef } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\nimport TransactionContract from \"../contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\nimport App from '../App.jsx';\r\n\r\n\r\n\r\nexport default function Connection() {\r\n  // const [fileUrl, setFileUrl] = useState(\"\");\r\n  // const [web3, setWeb3] = useState(\"\");\r\n  // const [account, setAccount] = useState(\"\");\r\n  // const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  // const [category, setCategory] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  // const [registrant, setRegsitrant] = useState(\"\");\r\n  // const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  // const [fileType, setFileType] = useState(\"\");\r\n  // const [fileDescription, setFileDescription] = useState(\"\");\r\n  // const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  // const [time, setTime] = useState(\"\");\r\n  // const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  // const [category_, setCategory_] = useState(\"\");\r\n  // const [name_, setName_] = useState(\"\");\r\n  // const [registrant_, setRegsitrant_] = useState(\"\");\r\n  // const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  // const [fileType_, setFileType_] = useState(\"\");\r\n  // const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n  // const submitReview = ()=>{\r\n  //   Axios.post('http://localhost:3001/api/insert', {\r\n  //     category: category,\r\n  //     name: name,\r\n  //     time: time,\r\n  //     ipfsHash: ipfsHash,\r\n  //     registrant: registrant,\r\n  //     responsible: responsibleManager,\r\n  //     filetype: fileType,\r\n  //     filedes: fileDescription\r\n  //   }).then(()=>{\r\n  //     alert('등록 완료!');\r\n  //   })\r\n  // };\r\n\r\n\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const [block_list, setblock_list] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com::8545'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            let temp = 0;\r\n            if(sessionStorage.getItem('company') == 'SDS') temp = 0;\r\n            else if(sessionStorage.getItem('company') == 'KLL') temp = 1;\r\n            else if(sessionStorage.getItem('company') == 'KOR') temp = 2;\r\n            else if(sessionStorage.getItem('company') == 'LOS') temp = 3;\r\n            setAccount(accounts[temp]);\r\n            setLoading(true);\r\n          })\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillMount();    \r\n\r\n  }, []);\r\n\r\n  const nextId = useRef(1);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      \r\n\r\n\r\n      for(let i = 0; i < events.length; i += 1){\r\n        \r\n        var time_ = moment.unix(events[i].returnValues.time);\r\n        \r\n        block_list.push({\r\n          id: nextId.current,\r\n          category : events[i].returnValues.category.toString(),\r\n          name : events[i].returnValues.name.toString(),\r\n          time : time_.toString(), \r\n          ipfsHash : events[i].returnValues.ipfs_hash.toString(),\r\n          registrant : events[i].returnValues.registrant.toString(),\r\n          responsible : events[i].returnValues.responsible_manager.toString(),\r\n          filetype : events[i].returnValues.file_type.toString(),\r\n          filedes : events[i].returnValues.file_description.toString()\r\n        }\r\n        )\r\n        \r\n        nextId.current += 1;\r\n\r\n        console.log(events[i].returnValues);\r\n      }\r\n      console.log('events.length = ', events.length);\r\n      console.log(events);\r\n      console.log('block_list = ', block_list);\r\n      console.log(account);\r\n  \r\n    }\r\n\r\n    if (loading == true) updateAllTransactions();\r\n\r\n}, [loading]);\r\n\r\n\r\n\r\n  // const sendTransaction = async (e) => {\r\n  //   console.log(web3);\r\n  //   console.log(account);\r\n  //   console.log(transactionInstance);\r\n  //   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n  //     from: account,\r\n  //     //value: e.web3.utils.toWei('10', \"ether\"),\r\n  //     gas: 1000000\r\n  //   })\r\n    \r\n  //   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n  //   console.log(events[events.length-1].transactionHash)\r\n  //   //this.updateAllTransactions();\r\n\r\n  //   submitReview();\r\n  // }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Login />\r\n      <Signup />\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      {/* <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button> *//*}\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p> */}\r\n      <App block_list={block_list} transactionInstance={transactionInstance} account={account}/>\r\n    </div>\r\n  )\r\n}","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport Connection from '../../blockchain/connection'\r\n\r\nimport \"../../\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport Axios from 'axios';\r\n\r\nexport default function SignUp()  {\r\n  const [CompanySelect, setCompanySelect] = useState(\"\")\r\n  const [ID, setID] = useState(\"\")\r\n  const [Password, setPassword] = useState(\"\")\r\n  const [Password2, setPassword2] = useState(\"\")\r\n  const [Name, setName] = useState(\"\")\r\n  const [Email, setEmail] = useState(\"\")\r\n\r\n  const Company_select = (e) => {\r\n    setCompanySelect(e.target.value);\r\n    console.log(CompanySelect);\r\n  };\r\n\r\n  \r\n\r\n  const onClickLogin = () => {\r\n    Axios.post('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com:3001/signup', null, {\r\n        params: {\r\n        'id': ID,\r\n        'pw': Password2,\r\n        'nick': ' ',\r\n        'email': Email,\r\n        'name': Name,\r\n        'company': CompanySelect\r\n        }\r\n    })\r\n    .then(res => {\r\n    \r\n      console.log(res)\r\n      alert('등록 완료')\r\n      document.location.href = '/'\r\n    })\r\n    .catch()\r\n  }\r\n\r\n  return(\r\n      <ListGroup flush>\r\n      <ListGroupItem className=\"p-3\">\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputState\">회사</label>\r\n                <FormSelect id=\"feInputState\" size=\"lg\" style={{fontSize: \".875rem\"}} value={CompanySelect} onChange={Company_select}>\r\n                  <option value = \"선택\">선택</option>\r\n                  <option value = \"SDS\">SDS</option>\r\n                  <option value = \"KLL\">KLL</option>\r\n                  <option value = \"KOR\">KOR</option>\r\n                  <option value = \"LOS\">LOS</option>\r\n                </FormSelect>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress\">아이디</label>\r\n                <FormInput \r\n                id=\"feInputAddress\"  \r\n                size=\"lg\" \r\n                onChange = {(event) => setID(event.target.value)}/>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">비밀번호</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  type='password'\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setPassword(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">비밀번호 재확인</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  type='password'\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setPassword2(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">이름</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setName(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">이메일</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setEmail(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <br></br>\r\n              <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>회원가입</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n}","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport Connection from '../../blockchain/connection'\r\n\r\nimport \"../../\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport Axios from 'axios';\r\nimport SignUp from './SignUp'\r\n\r\nexport default function Login()  {\r\n    const [inputId, setinputId] = useState(\"\")\r\n    const [inputPw, setinputPw] = useState(\"\")\r\n    const [signup, setsignup] = useState(false)\r\n\r\n    let navigate = useNavigate();\r\n    const routeChange = () => {\r\n        let path = '/connect';\r\n        navigate(path);\r\n    }\r\n\r\n\r\n    const onClickLogin = () => {\r\n        Axios.post('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com:3001/onLogin', null, {\r\n            params: {\r\n            'user_id': inputId,\r\n            'user_pw': inputPw\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.msg)\r\n                alert(res.data.msg);\r\n            else{\r\n                sessionStorage.setItem('user_id', inputId)\r\n                sessionStorage.setItem('company', res.data.company)\r\n            }\r\n            document.location.href = '/'\r\n        })\r\n        .catch()\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"App\">\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <div className=\"auth-wrapper\">\r\n        &nbsp;&nbsp;&nbsp;\r\n        <div className=\"auth-inner\">\r\n        <Link to={'/'} style ={{textDecoration: \"none\"}}>\r\n        <h2 style ={{ \r\n                        fontWeight: \"bold\"\r\n                        }}>&nbsp;&nbsp;&nbsp;Safety Management</h2>\r\n        </Link>\r\n        <br></br>\r\n        {\r\n            signup ? <SignUp />\r\n            : \r\n            <div>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                    <Col>\r\n                        <form>\r\n                            <FormGroup>\r\n                                <FormInput id=\"feInputAddress\" size=\"lg\" placeholder=\"아이디\" onChange = {(event) => setinputId(event.target.value)}/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <FormInput\r\n                                type='password'\r\n                                id=\"feInputAddress2\"\r\n                                size=\"lg\"\r\n                                placeholder=\"비밀번호\"\r\n                                onChange = {(event) => setinputPw(event.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <br></br>\r\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>로그인</Button>\r\n                            \r\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" outline onClick={(event) => setsignup(true)}>\r\n                                회원가입\r\n                            </Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n        {/* <div className=\"login\">\r\n            <Button onClick={(event) => setsignup(true)}>\r\n                <p stlye ={{  left: \"50%\",\r\n                                top: \"69%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                position: \"absolute\",\r\n                                color: \"#5a6169\"}}>회원가입</p>\r\n            </Button>\r\n        </div> */}\r\n        </div>\r\n        }\r\n        \r\n      </div>\r\n      &nbsp;&nbsp;&nbsp;\r\n      </div>\r\n      </div>\r\n    )\r\n}","// import React from 'react'\r\n// import '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n// import '../../App.css'\r\n// import { Routes, Route, Link } from 'react-router-dom'\r\n\r\n// import Login from './Login'\r\n// import SignUp from './SignUp'\r\n// import MainNavbar from '../layout/MainNavbar/MainNavbar'\r\n// import Connection from '../../blockchain/connection'\r\n\r\n// export default function FirstPage() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//     <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n//         <div className=\"container\">\r\n//         {<MainNavbar />}\r\n//         <Link className=\"navbar-brand\" to={'/sign-in'}>\r\n//             positronX\r\n//         </Link>\r\n//         <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n//             <ul className=\"navbar-nav ml-auto\">\r\n//             <li className=\"nav-item\">\r\n//                 <Link className=\"nav-link\" to={'/sign-in'}>\r\n//                 Login\r\n//                 </Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//                 <Link className=\"nav-link\" to={'/sign-up'}>\r\n//                 Sign up\r\n//                 </Link>\r\n//             </li>\r\n//             </ul>\r\n//         </div>\r\n//         </div>\r\n//     </nav>\r\n\r\n//     <div className=\"auth-wrapper\">\r\n//         <div className=\"auth-inner\">\r\n//         <Routes>\r\n//             <Route exact path=\"/\" element={<Login />} />\r\n//             <Route path=\"/sign-in\" element={<Login />} />\r\n//             <Route path=\"/sign-up\" element={<SignUp />} />\r\n//         </Routes>\r\n//         </div>\r\n//     </div>\r\n//     </div>\r\n//   )\r\n// };\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport '../../App.css'\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\n\r\nimport Login from './Login'\r\nimport SignUp from './SignUp'\r\nimport Connection from '../../blockchain/connection';\r\n\r\nexport default function FirstPage() {\r\n   // 로그인 상태 관리\r\n   const [isLogin, setIsLogin] = useState(false)\r\n \r\n   useEffect(() => {\r\n     if(sessionStorage.getItem('user_id') === null){\r\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\r\n       console.log('isLogin ?? :: ', isLogin)\r\n     } else {\r\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\r\n     // 로그인 상태 변경\r\n       setIsLogin(true)\r\n       console.log('isLogin ?? :: ', isLogin)\r\n     }\r\n   })\r\n\r\n  return (\r\n    \r\n    <div>\r\n\r\n        {isLogin ? \r\n      \t// Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\r\n        <Connection/> : \r\n        <Login />}\r\n    </div>\r\n  )\r\n};","// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import Connection from './blockchain/connection';\r\n// import {BrowserRouter as Router} from 'react-router-dom';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <Router>\r\n//     <Connection />\r\n//   </Router>\r\n// );\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import Connection from './blockchain/connection';\r\n// import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n// import FirstPage from './components/pages/FirstPage';\r\n// import All from './components/pages/All';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <Router>\r\n//     <Routes>\r\n//         <Route exact path=\"/\" element={<FirstPage />} />\r\n//         <Route path=\"/connect\" element={<Connection />} />\r\n//     </Routes>\r\n//   </Router>\r\n// );\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport Connection from './blockchain/connection';\r\nimport FirstPage from './components/pages/FirstPage';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Router>\r\n    <FirstPage />\r\n  </Router>\r\n);"],"sourceRoot":""}